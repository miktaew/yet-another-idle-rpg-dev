{
  "version": 3,
  "sources": ["../src/game_time.js", "../src/misc.js", "../src/items.js", "../src/enemies.js", "../src/inventory.js", "../src/traders.js", "../src/trade.js", "../src/dialogues.js", "../src/activities.js", "../src/crafting_recipes.js", "../src/active_effects.js", "../src/storage.js", "../src/display.js", "../src/character.js", "../src/skills.js", "../src/locations.js", "../src/combat_stances.js", "../src/game_version.js", "../src/verifier.js", "../src/reputation.js", "../src/main.js"],
  "sourcesContent": ["\"use strict\";\r\n\r\nfunction Game_time(new_time) {\r\n    this.year = new_time.year;\r\n    this.month = new_time.month;\r\n    this.day = new_time.day;\r\n    this.hour = new_time.hour;\r\n    this.minute = new_time.minute;\r\n    this.day_count = new_time.day_count;\r\n    //only hours and minutes should be allowed to be 0\r\n    //day_count is purely for calculating day of the week, by default it always start at monday (so day_count = 1)\r\n\r\n    this.goUp = function(how_much) {\r\n        this.minute += how_much || 1;\r\n        if(this.minute >= 60) {\r\n            const m = this.minute % 60;\r\n            const h = Math.floor(this.minute/60);\r\n            this.minute = m;\r\n            this.hour += h;\r\n        }\r\n    \r\n        if(this.hour >= 24) {\r\n            const h = this.hour % 24;\r\n            const d = Math.floor((this.hour-1)/24) + 1;\r\n            this.hour = h;\r\n            this.day += d; \r\n            this.day_count += d;\r\n        }\r\n    \r\n        if(this.day > 30) {\r\n            const d = (this.day-1) % 30 + 1;\r\n            const m = Math.floor((this.day-1)/30) + 1;\r\n            this.day = d+1;\r\n            this.month += m;\r\n        }\r\n    \r\n        if(this.month > 12) {\r\n            const m = (this.month-1) % 12 + 1;\r\n            const y = Math.floor((this.month-1)/ 12) + 1;\r\n            this.month = m+1;\r\n            this.year += y;\r\n        }\r\n    }\r\n\r\n    this.loadTime = function(new_time) {\r\n        this.year = new_time.year;\r\n        this.month = new_time.month;\r\n        this.day = new_time.day;\r\n        this.hour = new_time.hour;\r\n        this.minute = new_time.minute;\r\n        this.day_count = new_time.day_count;\r\n    }\r\n\r\n    this.getSeason = function() {\r\n        if(this.month > 9) return \"Winter\";\r\n        else if(this.month > 6) return \"Autumn\";\r\n        else if(this.month > 3) return \"Summer\";\r\n        else return \"Spring\";\r\n    }\r\n\r\n    this.getDayOfTheWeek = function() {\r\n        switch(this.day_count % 7) {\r\n            case 0:\r\n                return \"Sunday\";\r\n            case 1: \r\n                return \"Monday\";\r\n            case 2:\r\n                return \"Tuesday\";\r\n            case 3: \r\n                return \"Wednesday\";\r\n            case 4:\r\n                return \"Thursday\";\r\n            case 5:\r\n                return \"Friday\";\r\n            case 6:\r\n                return \"Saturday\";\r\n        }\r\n    }\t\r\n\r\n}\r\n\r\nGame_time.prototype.toString = function() {\r\n    var date_string = this.getDayOfTheWeek() + \" \";\r\n    date_string += ((this.day>9?this.day:`0${this.day}`) + \"/\");\r\n    date_string += ((this.month>9?this.month:`0${this.month}`) + \"/\");\r\n    date_string += (this.year + \" \");\r\n    date_string += ((this.hour>9?this.hour:`0${this.hour}`) + \":\");\r\n    date_string += this.minute>9?this.minute:`0${this.minute}`;\r\n    return date_string;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} data \r\n * @param {Number} data.time {minutes, hours, days, months, years}\r\n * @param {Boolean} [data.long_names] if it should use \"minutes\", \"hours\", etc instead of \"m\",\"h\"\r\n * @returns \r\n */\r\nfunction format_time({time, long_names, round=true}) { //{time, long_names?}\r\n    if(!time) {\r\n        throw \"No time passed in arguments!\";\r\n    }\r\n    if(round) {\r\n        if(time.minutes >= 60) {\r\n            time.hours = time.hours + Math.floor(time.minutes/60) || Math.floor(time.minutes/60);\r\n            time.minutes = time.minutes % 60;\r\n        }\r\n        if(time.hours >= 24) {\r\n            time.days = time.days + Math.floor(time.hours/24) || Math.floor(time.hours/24);\r\n            time.hours = time.hours % 24;\r\n        }\r\n        if(time.days > 30) {\r\n            time.months = time.months + Math.floor(time.days/30) || Math.floor(time.days/30);\r\n            time.days = time.days % 30;\r\n        }\r\n        if(time.months > 12) {\r\n            time.years = time.years + Math.floor(time.months/12) || Math.floor(time.months/12);\r\n            time.months = time.months % 12;\r\n        }\r\n    }\r\n\r\n    let formatted_time = '';\r\n    if(time.years > 0) {\r\n        formatted_time += long_names? `${time.year} years ` : `${time.year}Y`;\r\n    }\r\n    if(time.months > 0) {\r\n        formatted_time += long_names? `${time.months} months ` : `${time.months}M`;\r\n    }\r\n    if(time.days > 0) {\r\n        formatted_time += long_names? `${time.days} days ` : `${time.days}D`;\r\n    }\r\n    if(time.hours > 0) {\r\n        formatted_time += long_names? `${time.hours} hours ` : `${time.hours}h`;\r\n    }\r\n    if(time.minutes > 0) {\r\n        formatted_time += long_names? `${time.minutes} minutes ` : `${time.minutes}m`;\r\n    }\r\n\r\n    return formatted_time;\r\n}\r\n\r\n\r\nfunction is_night(time) {\r\n    time = time || current_game_time;\r\n    return (time.hour >= 20 || time.hour < 4);\r\n}\r\n\r\nconst current_game_time = new Game_time({year: 999, month: 4, day: 1, hour: 8, minute: 0, day_count: 1});\r\n\r\nexport {current_game_time, format_time, is_night};\r\n", "\"use strict\";\r\n\r\nconst stat_names = {\"strength\": \"str\",\r\n    \"health\": \"hp\",\r\n    \"max_health\": \"hp\", //same as for \"health\"\r\n    \"health_regenaration_flat\": \"hp regen\",\r\n    \"health_regeneration_multiplier\": \"hp regen\",\r\n    \"health_loss_flat\": \"hp loss\",\r\n    \"health_loss_multiplier\": \"hp loss\",\r\n    \"max_stamina\": \"stamina\",\r\n    \"agility\": \"agl\",\r\n    \"dexterity\": \"dex\",\r\n    \"magic\": \"magic\",\r\n    \"attack_speed\": \"attack speed\",\r\n    \"attack_power\": \"attack power\",\r\n    \"crit_rate\": \"crit rate\",\r\n    \"crit_multiplier\": \"crit dmg\",\r\n    \"stamina_efficiency\": \"stamina efficiency\",\r\n    \"intuition\": \"int\",\r\n    \"block_strength\": \"shield strength\",\r\n    \"hit_chance\": \"hit chance\",\r\n    \"evasion\": \"EP\",\r\n    \"evasion_points\": \"EP\",\r\n    \"attack_points\": \"AP\",\r\n};\r\n\r\nfunction expo(number, precision = 2)\r\n{\r\n    if(number == 0) {\r\n        return 0;\r\n    } else if(number >= 1000 || number < 0.01) {\r\n        return Number.parseFloat(number).toExponential(precision).replace(/[+-]/g,\"\");\r\n    } else if(number > 10) {\r\n        return Math.round(number);\r\n    } else if(number > 1) {\r\n        return Math.round(number*10)/10;\r\n    } else {\r\n        return Math.round(number*100)/100;\r\n    }\r\n}\r\n\r\nfunction round_item_price(price) {\r\n    if(price > 19999) {\r\n        return Math.ceil(price/1000)*1000;\r\n    } else if(price > 1999) {\r\n        return Math.ceil(price/100)*100;\r\n    } else if(price > 199){\r\n        return Math.ceil(price/10)*10;\r\n    } else {\r\n        return Math.ceil(price);\r\n    }\r\n}\r\n\r\nfunction format_reading_time(time) {\r\n    if(time >= 120) {\r\n        return `${Math.floor(time/60)} hours`;\r\n    } else if(time >= 60) {\r\n        return '1 hour';\r\n    } else {\r\n        return `${Math.round(time)} minutes`;\r\n    }\r\n}\r\n\r\nfunction format_working_time(time) {\r\n    let formatted = \"\";\r\n    const hours = Math.floor(time/60);\r\n    const minutes = time%60;\r\n\r\n    if(hours > 0) {\r\n        if(hours > 1) {\r\n            formatted += hours + \" hours\";\r\n        } else {\r\n            formatted += hours + \" hour\";\r\n        }\r\n    }\r\n    if(minutes > 0) {\r\n        if(hours > 0) {\r\n            formatted += \" \";\r\n        }\r\n        if(minutes > 1) {\r\n            formatted += minutes + \" minutes\";\r\n        } else {\r\n            formatted += minutes + \" minute\";\r\n        }\r\n    }\r\n    return formatted;\r\n}\r\n\r\nfunction get_hit_chance(attack_points, evasion_points) {\r\n    let result = attack_points/(attack_points+evasion_points);\r\n\r\n    if(result >= 0.80) {\r\n        result = 0.971+(result-0.8)**1.4;\r\n    } else if(result >= 0.70) {\r\n        result = 0.846+(result-0.7)**0.9;\r\n    } else if(result >= 0.6) {\r\n        result = 0.688+(result-0.6)**0.8;\r\n    } else if(result >= 0.50) {\r\n        result = 0.53+(result-0.5)**0.8;\r\n    } else if(result >= 0.40) {\r\n        result = 0.331+(result-0.4)**0.7;\r\n    } else if(result >= 0.3) {\r\n        result = 0.173 + (result-0.3)**0.8;\r\n    } else if(result >= 0.20) {\r\n        result = 0.073 + (result-0.2);\r\n    } else if(result >= 0.10) {\r\n        result = 0.01 + (result-0.1)**1.2;\r\n    } else {\r\n        result = 0;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * \r\n * @returns {String} 1 if a is newer, 0 if both are same, -1 if b is newer\r\n */\r\nfunction compare_game_version(version_a, version_b) {\r\n    let a = version_a.replace(\"v\",\"\").split(\".\");\r\n    let b = version_b.replace(\"v\",\"\").split(\".\");\r\n    for(let i = 0; i < a.length; i++) {\r\n        let temp;\r\n        if(Number.parseInt(a[i]) && Number.parseInt(b[i])) {\r\n            temp = [Number.parseInt(a[i]), Number.parseInt(b[i])] \r\n        } else {\r\n            temp = [a[i] || 0, b[i] || 0];\r\n        }\r\n        if(temp[0] === temp[1]) {\r\n            continue;\r\n        } else if(temp[0] > temp[1]) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction is_a_older_than_b(version1, version2) {\r\n    return compare_game_version(version1, version2) < 0;\r\n}\r\n\r\nexport { expo, format_reading_time, format_working_time, stat_names, get_hit_chance, \r\n        compare_game_version, is_a_older_than_b,\r\n        round_item_price};", "\"use strict\";\r\n\r\n/*\r\n    item_templates contain some predefined equipment for easier access (instead of having to create them with proper components each time)\r\n\r\n    equippable are unstackable, other items stack\r\n\r\n    item quality translates into rarity, but also provides another multiplier on top of quality multiplier, starting at uncommon\r\n            quality     rarity         color      additional_multiplier\r\n            0-49%       trash          gray       x1\r\n            50-99%      common         white      x1\r\n            100-129%    uncommon       green      x1.1\r\n            130-159%    rare           blue       x1.3\r\n            160-199%    epic           purple     x1.6\r\n            200-246%    legendary      orange     x2\r\n            247-250%    mythical       ????       x2.5\r\n\r\n            quality affects only attack/defense/max block, while additional multiplier affects all positive stats \r\n            (i.e flat bonuses over 0 and multiplicative bonuses over 1)\r\n\r\n    basic idea for weapons:\r\n\r\n        short blades (daggers/spears) are the fastest but also the weakest, +the most crit rate and crit damage\r\n        blunt heads (blunt weapons) have highest damage, but also lower attack speed\r\n        axe heads have a bit less damage, but a bit less attack speed penalty\r\n        long blades (swords/spears?) have average damage and average attack speed\r\n\r\n        long handles (spears) have higher attack multiplier and lower attack speed (so they counter the effects of the short blades), plus an additional built-in x1.5 attack multiplier\r\n        medium handles (axes/blunt weapons) have them average\r\n        short handles have lowest attack multiplier\r\n        \r\n        so, as a result, attack damage goes blunt > axe > spear > sword > dagger\r\n        and attack speed goes               dagger > sword > spear > axe > blunt\r\n        which kinda makes spears very average, but they also get bonus crit so whatever\r\n*/\r\n\r\n//as a note, try to not give dexterity/agility from weapons and instead use attack_points/evasion_points, this is in regards of possible skill checks;\r\n//leaving it on armor seems fine on the other hand, as it makes much more sense for worn clothing to impact such a situation\r\n\r\nimport { round_item_price } from \"./misc.js\";\r\n\r\nconst rarity_multipliers = {\r\n    trash: 1, //low quality alone makes these so bad that no additional nerf should be needed\r\n    common: 1,\r\n    uncommon: 1.1,\r\n    rare: 1.3,\r\n    epic: 1.6,\r\n    legendary: 2,\r\n    mythical: 2.5\r\n};\r\n\r\nconst item_templates = {};\r\n\r\nlet loot_sold_count = {};\r\n\r\nfunction setLootSoldCount(data) {\r\n    loot_sold_count = data;\r\n}\r\n\r\nfunction recoverItemPrices(count=1) {\r\n    Object.keys(loot_sold_count).forEach(item_name => {\r\n\r\n        if(!item_templates[item_name].price_recovers) {\r\n            return;\r\n        }\r\n\r\n        loot_sold_count[item_name].recovered += count;\r\n        \r\n        if(loot_sold_count[item_name].recovered > loot_sold_count[item_name].sold) {\r\n            loot_sold_count[item_name].recovered = loot_sold_count[item_name].sold;\r\n        }\r\n    })\r\n}\r\n\r\nfunction getLootPriceModifier(value, how_many_sold) {\r\n    let modifier = 1;\r\n    if(how_many_sold >= 999) {\r\n        modifier = 0.1;\r\n    } else if(how_many_sold) {\r\n        modifier = modifier * 111/(111+how_many_sold);\r\n    }\r\n    return Math.round(value*modifier)/value;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} value\r\n * @param {Number} start_count \r\n * @param {Number} how_many_to_sell \r\n * @returns \r\n */\r\nfunction getLootPriceModifierMultiple(value, start_count, how_many_to_sell) {\r\n    let sum = 0;\r\n    for(let i = start_count; i < start_count+how_many_to_sell; i++) {\r\n        /*\r\n        rounding is necessary to make it be a proper fraction of the value\r\n        otherwise, there might be cases where trading too much of an item results in small deviation from what it should be\r\n        */\r\n        sum += getLootPriceModifier(value, i);\r\n    }\r\n    return sum;\r\n}\r\n\r\nfunction getArmorSlot(internal) {\r\n    let equip_slot;\r\n    if(item_templates[internal].component_type === \"helmet interior\") {\r\n        equip_slot = \"head\";\r\n    } else if(item_templates[internal].component_type === \"chestplate interior\") {\r\n        equip_slot = \"torso\";\r\n    } else if(item_templates[internal].component_type === \"leg armor interior\") {\r\n        equip_slot = \"legs\";\r\n    } else if(item_templates[internal].component_type === \"glove interior\") {\r\n        equip_slot = \"arms\";\r\n    } else if(item_templates[internal].component_type === \"shoes interior\") {\r\n        equip_slot = \"feet\";\r\n    } else {\r\n        console.error(`Component type \"${item_templates[internal].component_type}\" doesn't correspond to any armor slot!`);\r\n        return null;\r\n    }\r\n    return equip_slot;\r\n}\r\n\r\nfunction getItemRarity(quality) {\r\n    let rarity;\r\n    if(quality < 50) rarity =  \"trash\";\r\n    else if(quality <= 100) rarity = \"common\";\r\n    else if(quality < 130) rarity = \"uncommon\";\r\n    else if(quality < 160) rarity = \"rare\";\r\n    else if(quality < 200) rarity = \"epic\";\r\n    else if(quality < 246) rarity = \"legendary\";\r\n    else rarity = \"mythical\";\r\n    \r\n    return rarity;\r\n}\r\n\r\nfunction getEquipmentValue(components, quality) {\r\n    let value = 0;\r\n    Object.values(components).forEach(component => {\r\n        value += item_templates[component].value;\r\n    });\r\n    return round_item_price(1.25 * value * (quality/100 ) * rarity_multipliers[getItemRarity(quality)]);\r\n}\r\n\r\nclass Item {\r\n    constructor({name,\r\n                description,\r\n                value = 0, \r\n                tags = {},\r\n                id = null,\r\n                })\r\n    {\r\n        this.name = name; \r\n        this.description = description;\r\n        this.saturates_market = false;\r\n        this.id = id;\r\n        /**\r\n         * Use .getValue() instead of this\r\n         */\r\n        this.value = value;\r\n        this.tags = tags;\r\n        this.tags[\"item\"] = true;\r\n    }\r\n\r\n    getInventoryKey() {\r\n        if(!this.inventory_key) {\r\n            this.inventory_key = this.createInventoryKey();\r\n        }\r\n        return this.inventory_key;\r\n    }\r\n\r\n    createInventoryKey() {\r\n        const key = {};\r\n\r\n        if(!this.components) {\r\n            key.id = this.id;\r\n        } else {\r\n            key.components = {};\r\n            Object.keys(this.components).forEach(component => {\r\n                key.components[component] = this.components[component];\r\n            });\r\n        }\r\n        if(this.quality) {\r\n            key.quality = this.quality;\r\n        }\r\n        return JSON.stringify(key);\r\n    }\r\n\r\n    getValue() {\r\n        if(!this.saturates_market) {\r\n            return round_item_price(this.value);\r\n        } else {  \r\n            return Math.max(1, round_item_price(Math.ceil(this.value * getLootPriceModifier(this.value,(Math.max(loot_sold_count[this.id]?.sold - loot_sold_count[this.id]?.recovered,0)||0)))));\r\n        }\r\n    }\r\n\r\n    getBaseValue() {\r\n        return this.value;\r\n    }\r\n\r\n    getValueOfMultiple({additional_count_of_sold = 0, count}) {\r\n        if(!this.saturates_market) {\r\n            return round_item_price(this.value) * count;\r\n        }\r\n        else {\r\n            const modifier = getLootPriceModifierMultiple(this.value, (Math.max(loot_sold_count[this.id]?.sold - loot_sold_count[this.id]?.recovered,0)||0)+additional_count_of_sold, count);\r\n            return Math.max(count, Math.ceil(round_item_price(this.value) * Math.round(this.value*modifier)/this.value));\r\n        }\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n}\r\n\r\nclass OtherItem extends Item {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.item_type = \"OTHER\";\r\n        this.stackable = true;\r\n        this.saturates_market = item_data.saturates_market;\r\n        this.price_recovers = item_data.price_recovers;\r\n    }\r\n}\r\n\r\nclass Material extends OtherItem {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.item_type = \"MATERIAL\";\r\n        this.saturates_market = true;\r\n        this.price_recovers = true;\r\n        this.material_type = item_data.material_type;\r\n        this.tags[\"material\"] = true;\r\n    }\r\n}\r\n\r\nclass ItemComponent extends Item {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.item_type = \"COMPONENT\";\r\n        this.stackable = false;\r\n        this.component_tier = item_data.component_tier || 1;\r\n        this.component_stats = item_data.component_stats || {};\r\n        this.tags[\"component\"] = true;\r\n        this.quality = Math.round(item_data.quality) || 100;\r\n    }\r\n    getRarity(quality){\r\n        if(!quality) {\r\n            if(!this.rarity) {\r\n                this.rarity = getItemRarity(this.quality);\r\n            }\r\n            return this.rarity;\r\n        } else {\r\n            return getItemRarity(quality);\r\n        }\r\n    }\r\n\r\n    calculateRarity(quality) {\r\n        let rarity;\r\n        if(quality < 50) rarity =  \"trash\";\r\n        else if(quality < 100) rarity = \"common\";\r\n        else if(quality < 130) rarity = \"uncommon\";\r\n        else if(quality < 160) rarity = \"rare\";\r\n        else if(quality < 200) rarity = \"epic\";\r\n        else if(quality < 246) rarity = \"legendary\";\r\n        else rarity = \"mythical\";\r\n        \r\n        return rarity;\r\n    }\r\n\r\n    getStats() {\r\n        return this.component_stats;\r\n    }\r\n\r\n    getValue(quality) {\r\n        return round_item_price(this.value * (quality/100 || this.quality/100));\r\n    } \r\n}\r\n\r\nclass WeaponComponent extends ItemComponent {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        if(item_data.component_type !== \"axe head\" && item_data.component_type !== \"hammer head\"\r\n        && item_data.component_type !== \"short blade\" && item_data.component_type !== \"long blade\"\r\n        && item_data.component_type !== \"short handle\" && item_data.component_type !== \"long handle\"\r\n        && item_data.component_type !== \"medium handle\") {\r\n            throw new Error(`No such weapon component type as ${item_data.component_type}`);\r\n        }\r\n        this.component_type = item_data.component_type;\r\n        //\"short blade\", \"long blade\", \"axe blade\", \"hammer blade\" for heads; \"short handle\", \"medium handle\", \"long handle\" for handles\r\n\r\n        this.attack_value = item_data.attack_value || 0; //can skip this for weapon handles\r\n        if(item_data.component_type === \"short handle\"){\r\n            this.attack_multiplier = 1;\r\n        } else if(item_data.component_type === \"medium handle\"){\r\n            this.attack_multiplier = 1;\r\n        } else if(item_data.component_type === \"long handle\"){\r\n            this.attack_multiplier = 1.5;\r\n        } else {\r\n            this.attack_multiplier = 1;\r\n        }\r\n\r\n        this.name_prefix = item_data.name_prefix; //to create a name of an item, e.g. \"Sharp iron\" used to create spear results in \"Sharp iron spear\"\r\n\r\n        this.tags[\"weapon component\"] = true;\r\n        this.tags[\"component\"] = true;\r\n    }\r\n}\r\n\r\nclass ShieldComponent extends ItemComponent {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        if(item_data.component_type !== \"shield base\" && item_data.component_type !== \"shield handle\") {\r\n            throw new Error(`No such shield component type as ${item_data.component_type}`);\r\n        }\r\n        this.component_type = item_data.component_type;\r\n\r\n        //properties below only matter for shield type component\r\n        this.shield_strength = item_data.shield_strength; \r\n        this.shield_name = item_data.shield_name || item_data.name;\r\n\r\n        this.tags[\"shield component\"] = true;\r\n        this.tags[\"component\"] = true;\r\n    }\r\n}\r\n\r\nclass ArmorComponent extends ItemComponent {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        if(item_data.component_type !== \"helmet interior\" && item_data.component_type !== \"helmet exterior\"\r\n        && item_data.component_type !== \"chestplate interior\" && item_data.component_type !== \"chestplate exterior\"\r\n        && item_data.component_type !== \"leg armor interior\" && item_data.component_type !== \"leg armor exterior\"\r\n        && item_data.component_type !== \"glove interior\" && item_data.component_type !== \"glove exterior\"\r\n        && item_data.component_type !== \"shoes interior\" && item_data.component_type !== \"shoes exterior\") {\r\n\r\n            throw new Error(`No such armor component type as ${item_data.component_type}`);\r\n        }\r\n        this.component_type = item_data.component_type;\r\n        this.defense_value = item_data.defense_value;\r\n\r\n        this.stats = item_data.stats || {};\r\n\r\n        this.equip_slot = item_data.equip_slot;\r\n\r\n        //only used with external elements\r\n        this.full_armor_name = item_data.full_armor_name;\r\n\r\n        //only used with internal elements\r\n        this.armor_name = item_data.armor_name;\r\n\r\n        //only used with external elements; name_prefix/name_suffix are used only if full_armor_name is not provided\r\n        this.name_prefix = item_data.name_prefix;\r\n        this.name_suffix = item_data.name_suffix;\r\n\r\n        this.tags[\"armor component\"] = true;\r\n        this.tags[\"component\"] = true;\r\n    }\r\n}\r\n\r\nclass UsableItem extends Item {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.item_type = \"USABLE\";\r\n        this.stackable = true;\r\n        this.effects = item_data.effects || {};\r\n        this.recovery_chances = item_data.recovery_chances || {};\r\n\r\n        this.tags[\"usable\"] = true;\r\n    }\r\n}\r\n\r\nclass Equippable extends Item {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.item_type = \"EQUIPPABLE\";\r\n        this.stackable = false;\r\n        this.components = {};\r\n        this.bonus_skill_levels = item_data.bonus_skill_levels || {};\r\n\r\n        this.quality = Math.round(Number(item_data.quality)) || 100;\r\n\r\n        this.tags[\"equippable\"] = true;\r\n    }\r\n\r\n    getValue(quality) {\r\n        return round_item_price(this.value * (quality || this.quality));\r\n    } \r\n\r\n    getRarity(quality){\r\n        if(!quality) {\r\n            if(!this.rarity) {\r\n                this.rarity = getItemRarity(this.quality);\r\n            }\r\n            return this.rarity;\r\n        } else {\r\n            return getItemRarity(quality);\r\n        }\r\n\r\n    }\r\n\r\n    getStats(quality){\r\n        if(!quality) {\r\n            if(!this.stats) {\r\n                this.stats = this.calculateStats(this.quality);\r\n            }\r\n            return this.stats;\r\n        } else {\r\n            return this.calculateStats(quality);\r\n        }\r\n    }\r\n\r\n    calculateStats(quality){\r\n        const stats = {};\r\n        if(this.components) {\r\n            //iterate over components\r\n            const components = Object.values(this.components).map(comp => item_templates[comp]).filter(comp => comp);\r\n            for(let i = 0; i < components.length; i++) {\r\n                Object.keys(components[i].component_stats).forEach(stat => {\r\n                    if(!stats[stat]) {\r\n                        stats[stat] = {};\r\n                    }\r\n\r\n                    if(stat === \"defense\" || stat === \"attack_power\" || stat === \"block_strength\") { //skip it, it's to be added to the basic defense/attack instead\r\n                        return;\r\n                    }\r\n\r\n                    if(components[i].component_stats[stat].multiplier) {\r\n                        stats[stat].multiplier = (stats[stat].multiplier || 1) * components[i].component_stats[stat].multiplier;\r\n                    }\r\n                    if(components[i].component_stats[stat].flat) {\r\n                        stats[stat].flat = (stats[stat].flat || 0) + components[i].component_stats[stat].flat;\r\n                    }\r\n                });\r\n            }\r\n\r\n            //iterate over stats and apply rarity bonus if possible\r\n            Object.keys(stats).forEach(stat => {\r\n                if(stats[stat].multiplier){\r\n                    if(stats[stat].multiplier >= 1) {\r\n                        stats[stat].multiplier = Math.round(100 * (1 + (stats[stat].multiplier - 1) * rarity_multipliers[this.getRarity(quality)]))/100;\r\n                    } else {\r\n                        stats[stat].multiplier = Math.round(100 * stats[stat].multiplier)/100;\r\n                    }\r\n                }\r\n\r\n                if(stats[stat].flat){\r\n                    if(stats[stat].flat > 0) {\r\n                        stats[stat].flat = Math.round(100 * stats[stat].flat * rarity_multipliers[this.getRarity(quality)])/100;\r\n                    } else {\r\n                        stats[stat].flat = Math.round(100 * stats[stat].flat)/100;\r\n                    }\r\n                }\r\n            });\r\n        } else { //no components, only needs to apply quality to already present stats\r\n            Object.keys(this.component_stats).forEach(stat => {\r\n                stats[stat] = {};\r\n                if(this.component_stats[stat].multiplier){\r\n                    stats[stat].multiplier = 1;\r\n                    if(this.component_stats[stat].multiplier >= 1) {\r\n                        stats[stat].multiplier = Math.round(100 * (1 + (this.component_stats[stat].multiplier - 1) * rarity_multipliers[this.getRarity(quality)]))/100;\r\n                    } else {\r\n                        stats[stat].multiplier = Math.round(100 * this.component_stats[stat].multiplier)/100;\r\n                    }\r\n                }\r\n\r\n                if(this.component_stats[stat].flat){\r\n                    stats[stat].flat = 0;\r\n                    if(this.component_stats[stat].flat > 0) {\r\n                        stats[stat].flat = Math.round(100 * this.component_stats[stat].flat * rarity_multipliers[this.getRarity(quality)])/100;\r\n                    } else {\r\n                        stats[stat].flat = Math.round(100 * this.component_stats[stat].flat)/100;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return stats;\r\n    }\r\n\r\n    getBonusSkillLevels() {\r\n        return this.bonus_skill_levels;\r\n    }\r\n}\r\n\r\nclass Artifact extends Equippable {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.components = undefined;\r\n        this.equip_slot = \"artifact\";\r\n        this.stats = item_data.stats;\r\n\r\n        this.tags[\"artifact\"] = true;\r\n        if(!this.id) {\r\n            this.id = this.getName();\r\n        }\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    } \r\n\r\n    getStats(){\r\n        return this.stats;\r\n    }\r\n}\r\n\r\nclass Tool extends Equippable {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.equip_slot = item_data.equip_slot; //tool type is same as equip slot (axe/pickaxe/herb sickle)\r\n        this.components = undefined;\r\n        this.tags[\"tool\"] = true;\r\n        this.tags[this.equip_slot] = true;\r\n        this.quality = 100;\r\n        if(!this.id) {\r\n            this.id = this.getName();\r\n        }\r\n    }\r\n    getStats() {\r\n        return {};\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    } \r\n}\r\n\r\nclass Shield extends Equippable {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.equip_slot = \"off-hand\";\r\n        this.offhand_type = \"shield\"; //not like there's any other option\r\n\r\n        if(!item_templates[item_data.components.shield_base]) {\r\n            throw new Error(`No such shield base component as: ${item_data.components.shield_base}`);\r\n        }\r\n        this.components.shield_base = item_data.components.shield_base; //only the name\r\n\r\n        if(item_data.components.handle && !item_templates[item_data.components.handle]) {\r\n            throw new Error(`No such shield handle component as: ${item_data.components.handle}`);\r\n        }\r\n        this.components.handle = item_data.components.handle; //only the name\r\n        this.tags[\"shield\"] = true;\r\n        if(!this.id) {\r\n            this.id = this.getName();\r\n        }\r\n    }\r\n\r\n    getShieldStrength(quality) {\r\n        if(!quality) {\r\n            if(!this.shield_strength) {\r\n                this.shield_strength = this.calculateShieldStrength(this.quality);\r\n            }\r\n            return this.shield_strength;\r\n        } else {\r\n            return this.calculateShieldStrength(quality);\r\n        }\r\n    }\r\n\r\n    calculateShieldStrength(quality) {\r\n        return Math.round(\r\n            10 * Math.ceil(item_templates[this.components.shield_base].shield_strength \r\n            * (item_templates[this.components.handle].component_stats?.block_strength?.multiplier || 1) \r\n            * (quality/100) * rarity_multipliers[this.getRarity(quality)]))/10;\r\n    }\r\n\r\n    getName() {\r\n        return item_templates[this.components.shield_base].shield_name;\r\n    }\r\n\r\n    getValue(quality) {\r\n        if(!this.value) {\r\n            this.value = getEquipmentValue(this.components,quality);\r\n        }\r\n        return this.value;\r\n    } \r\n}\r\n\r\nclass Armor extends Equippable {\r\n    /*\r\n        can be componentless, effectively being an equippable internal part\r\n\r\n        naming convention:\r\n        if full_armor_name in external\r\n            then full_armor_name\r\n        else use prefix and suffix on internal element\r\n    */\r\n   /**\r\n    * Takes either {components} or {stats}, with {components} having higher priority. Lack of {components} assumes item is a wearable internal part (clothing)\r\n    * @param {*} item_data \r\n    */\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        \r\n        if(item_data.components) {\r\n            if(!item_templates[item_data.components.internal]) {\r\n                throw new Error(`No such internal armor element as: ${item_data.components.internal}`);\r\n            }\r\n\r\n            this.components.internal = item_data.components.internal; //only the name\r\n            this.components.external = item_data.components.external; //only the name\r\n\r\n            if(item_templates[this.components.internal].component_type === \"helmet interior\") {\r\n                this.equip_slot = \"head\";\r\n            } else if(item_templates[this.components.internal].component_type === \"chestplate interior\") {\r\n                this.equip_slot = \"torso\";\r\n            } else if(item_templates[this.components.internal].component_type === \"leg armor interior\") {\r\n                this.equip_slot = \"legs\";\r\n            } else if(item_templates[this.components.internal].component_type === \"glove interior\") {\r\n                this.equip_slot = \"arms\";\r\n            } else if(item_templates[this.components.internal].component_type === \"shoes interior\") {\r\n                this.equip_slot = \"feet\";\r\n            } else {\r\n                throw new Error(`Component type \"${item_templates[this.components.internal].component_type}\" doesn't correspond to any armor slot!`);\r\n            }\r\n            if(item_data.external && !item_templates[item_data.external]) {\r\n                throw new Error(`No such external armor element as: ${item_data.components.external}`);\r\n            }\r\n            \r\n        } else { \r\n            this.tags[\"component\"] = true;\r\n            this.tags[\"armor component\"] = true;\r\n            this.tags[\"clothing\"] = true;\r\n            this.component_stats = item_data.component_stats || {};\r\n            delete this.components;\r\n            \r\n            if(!item_data.name) {\r\n                throw new Error(`Component-less item needs to be provided a name!`);\r\n            }\r\n            this.name = item_data.name;\r\n            if(!item_data.value) {\r\n                throw new Error(`Component-less item \"${this.getName()}\" needs to be provided a monetary value!`);\r\n            }\r\n\r\n            this.component_type = item_data.component_type;\r\n            this.value = item_data.value;\r\n            this.component_tier = item_data.component_tier || 1;\r\n            this.base_defense = item_data.base_defense;\r\n\r\n            if(item_data.component_type === \"helmet interior\") {\r\n                this.equip_slot = \"head\";\r\n            } else if(item_data.component_type === \"chestplate interior\") {\r\n                this.equip_slot = \"torso\";\r\n            } else if(item_data.component_type === \"leg armor interior\") {\r\n                this.equip_slot = \"legs\";\r\n            } else if(item_data.component_type === \"glove interior\") {\r\n                this.equip_slot = \"arms\";\r\n            } else if(item_data.component_type === \"shoes interior\") {\r\n                this.equip_slot = \"feet\";\r\n            } else {\r\n                throw new Error(`Component type \"${item_data.component_type}\" doesn't correspond to any armor slot!`);\r\n            }\r\n        }\r\n\r\n        this.tags[\"armor\"] = true;\r\n        if(!this.id) {\r\n            this.id = this.getName();\r\n        }\r\n    }\r\n\r\n    getDefense(quality) {\r\n        if(!quality) {\r\n            if(!this.defense_value) {\r\n                this.defense_value = this.calculateDefense(this.quality);\r\n            }\r\n            return this.defense_value;\r\n        } else {\r\n            return this.calculateDefense(quality);\r\n        }\r\n    }\r\n    calculateDefense(quality) {\r\n        if(this.components) {\r\n            return Math.ceil(((item_templates[this.components.internal].defense_value || item_templates[this.components.internal].base_defense ||0) + \r\n                                        (item_templates[this.components.external]?.defense_value || 0 )) \r\n                                        * (quality/100 || this.quality/100) * rarity_multipliers[this.getRarity(quality || this.quality)]\r\n            )\r\n        } else {\r\n            return Math.ceil((this.base_defense || 0)  * (quality/100 || this.quality/100) * rarity_multipliers[this.getRarity(quality || this.quality)]);\r\n        }\r\n    }\r\n\r\n    getValue(quality) { \r\n        if(this.components) {\r\n            if(!this.value) {\r\n                this.value = getEquipmentValue(this.components,quality);\r\n            }\r\n            return this.value;\r\n        } else {\r\n            return round_item_price(item_templates[this.id].value * (quality/100 || this.quality/100) * rarity_multipliers[this.getRarity(quality)]);\r\n        }\r\n    } \r\n\r\n    getName() {\r\n        /*\r\n        no external => name after internal.armor_name\r\n        external with full_armor_name => use full_armor_name\r\n        otherwise => prefix + internal + suffix\r\n        */\r\n\r\n        if(!this.name) {\r\n            if(!this.components.external) {\r\n                this.name = item_templates[this.components.internal].armor_name;\r\n            } else {\r\n                if(item_templates[this.components.external].full_armor_name) {\r\n                    this.name = item_templates[this.components.external].full_armor_name;\r\n                } else {\r\n                    this.name = (item_templates[this.components.external].name_prefix || '') + \" \" + item_templates[this.components.internal].armor_name.toLowerCase() + \" \" + (item_templates[this.components.external].name_suffix || '');\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.name;\r\n    }\r\n}\r\n\r\nclass Weapon extends Equippable {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.equip_slot = \"weapon\";\r\n\r\n        if(!item_templates[item_data.components.head]) {\r\n            throw new Error(`No such weapon head as: ${item_data.components.head}`);\r\n        }\r\n        this.components.head = item_data.components.head; //only the name\r\n\r\n        if(!item_templates[item_data.components.handle]) {\r\n            throw new Error(`No such weapon handle as: ${item_data.components.handle}`);\r\n        }\r\n        this.components.handle = item_data.components.handle; //only the name\r\n\r\n        if(item_templates[this.components.handle].component_type === \"long handle\" \r\n        && (item_templates[this.components.head].component_type === \"short blade\" || item_templates[this.components.head].component_type === \"long blade\")) {\r\n            //long handle + short/long blade = spear\r\n            this.weapon_type = \"spear\";\r\n        } else if(item_templates[this.components.handle].component_type === \"medium handle\" \r\n        && item_templates[this.components.head].component_type === \"axe head\") {\r\n            //medium handle + axe head = axe\r\n            this.weapon_type = \"axe\";\r\n        } else if(item_templates[this.components.handle].component_type === \"medium handle\" \r\n        && item_templates[this.components.head].component_type === \"hammer head\") {\r\n            //medium handle + hammer head = hammer\r\n            this.weapon_type = \"hammer\";\r\n        } else if(item_templates[this.components.handle].component_type === \"short handle\" \r\n        && item_templates[this.components.head].component_type === \"short blade\") {\r\n            //short handle + short blade = dagger\r\n            this.weapon_type = \"dagger\";\r\n        } else if(item_templates[this.components.handle].component_type === \"short handle\" \r\n        && item_templates[this.components.head].component_type === \"long blade\") {\r\n            //short handle + long blade = sword\r\n            this.weapon_type = \"sword\";\r\n        } else {\r\n            throw new Error(`Combination of elements of types ${item_templates[this.components.handle].component_type} and ${item_templates[this.components.head].component_type} does not exist!`);\r\n        }\r\n\r\n        this.tags[\"weapon\"] = true;\r\n        this.tags[this.weapon_type] = true;\r\n        if(!this.id) {\r\n            this.id = this.getName();\r\n        }\r\n    }\r\n\r\n    getAttack(quality){\r\n        if(!quality) {\r\n            if(!this.attack_power) {\r\n                this.attack_power = this.calculateAttackPower(this.quality);\r\n            }\r\n            return this.attack_power;\r\n        } else {\r\n            return this.calculateAttackPower(quality);\r\n        }\r\n    }\r\n\r\n    calculateAttackPower(quality) {\r\n        return Math.ceil(\r\n            (item_templates[this.components.head].attack_value + item_templates[this.components.handle].attack_value \r\n                + (item_templates[this.components.handle].component_stats?.attack_power?.flat || 0))\r\n            * item_templates[this.components.head].attack_multiplier * item_templates[this.components.handle].attack_multiplier\r\n            * (item_templates[this.components.handle].component_stats?.attack_power?.multiplier || 1)\r\n            * (quality/100) * rarity_multipliers[this.getRarity(quality)]\r\n        );\r\n    }\r\n\r\n    getValue(quality) {\r\n        if(!this.value) {\r\n            this.value = getEquipmentValue(this.components,quality);\r\n        }\r\n        return round_item_price(this.value);\r\n    } \r\n\r\n    getName() {\r\n        return `${item_templates[this.components.head].name_prefix} ${this.weapon_type === \"hammer\" ? \"battle hammer\" : this.weapon_type}`;\r\n    }\r\n}\r\n\r\n//////////////////////////////\r\n//////////////////////////////\r\n//////////////////////////////\r\nclass BookData{\r\n    constructor({\r\n        required_time = 1,\r\n        required_skills = {literacy: 0},\r\n        literacy_xp_rate = 1,\r\n        finish_reward = {},\r\n        bonuses = {}, //xp/stat bonuses\r\n        rewards = {}, //unlocks, etc\r\n    }) {\r\n        this.required_time = required_time;\r\n        this.accumulated_time = 0;\r\n        this.required_skills = required_skills;\r\n        this.literacy_xp_rate = literacy_xp_rate;\r\n        this.finish_reward = finish_reward;\r\n        this.is_finished = false;\r\n        this.bonuses = bonuses;\r\n        this.rewards = rewards;\r\n    }\r\n}\r\n\r\nconst book_stats = {};\r\n\r\nclass Book extends Item {\r\n    constructor(item_data) {\r\n        super(item_data);\r\n        this.stackable = true;\r\n        this.item_type = \"BOOK\";\r\n        this.name = item_data.name;\r\n\r\n        this.tags[\"book\"] = true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {Number} total time needed to read the book\r\n     */\r\n    getReadingTime() {\r\n        //maybe make it go faster with literacy skill level?\r\n        let {required_time} = book_stats[this.name];\r\n        return required_time;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {Number} remaining time needed to read the book (total time minus accumulated time)\r\n     */\r\n    getRemainingTime() {\r\n        let remaining_time = Math.max(book_stats[this.name].required_time - book_stats[this.name].accumulated_time, 0);\r\n        return remaining_time;\r\n    }\r\n\r\n    addProgress(time = 1) {\r\n        book_stats[this.name].accumulated_time += time;\r\n        if(book_stats[this.name].accumulated_time >= book_stats[this.name].required_time) {\r\n            this.setAsFinished();\r\n        }\r\n    }\r\n\r\n    setAsFinished() {\r\n        book_stats[this.name].is_finished = true;\r\n        book_stats[this.name].accumulated_time = book_stats[this.name].required_time;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Object} item_data \r\n * @param {Object} item_data.item_type\r\n * @returns {Item} item of proper type, created with item_data\r\n */\r\nfunction getItem(item_data) {\r\n    switch(item_data.item_type) {\r\n        case \"EQUIPPABLE\":\r\n            switch(item_data.equip_slot) {\r\n                case \"weapon\":\r\n                    return new Weapon(item_data);\r\n                case \"off-hand\":\r\n                    return new Shield(item_data);\r\n                case \"artifact\":\r\n                    return new Artifact(item_data);\r\n                case \"axe\":\r\n                case \"pickaxe\":\r\n                case \"sickle\":\r\n                    return new Tool(item_data);\r\n                default:\r\n                    return new Armor(item_data);\r\n            }\r\n        case \"USABLE\":\r\n            return new UsableItem(item_data);\r\n        case \"BOOK\":\r\n            return new Book(item_data);\r\n        case \"OTHER\":\r\n            return new OtherItem(item_data);\r\n        case \"COMPONENT\":\r\n            if(item_data.tags[\"weapon component\"]) \r\n                return new WeaponComponent(item_data);\r\n            else if(item_data.tags[\"armor component\"]) \r\n                return new ArmorComponent(item_data);\r\n            else if(item_data.tags[\"shield component\"]) \r\n                return new ShieldComponent(item_data);\r\n            else throw new Error(`Item ${item_data.name} has a wrong component type`);\r\n        case \"MATERIAL\":\r\n            return new Material(item_data);\r\n        default:\r\n            throw new Error(`Wrong item type: ${item_data.item_type}`);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {String} item_data \r\n * @returns {Item} item of proper type, created based on item_key\r\n */\r\nfunction getItemFromKey(key) {\r\n    let {id, components, quality} = JSON.parse(key);\r\n    if(id && !quality) { \r\n        if(item_templates[id]) {\r\n            return getItem(item_templates[id]);\r\n        } else {\r\n            throw new Error(`Inventory item \"${key}\" couldn't be found!`);\r\n        }\r\n    } else if(components) {\r\n        const {head, handle, shield_base, internal, external} = components;\r\n        if(head) { //weapon\r\n            if(!item_templates[head]){\r\n                throw new Error(`Weapon head component \"${head}\" couldn't be found!`);\r\n            } else if(!item_templates[handle]) {\r\n                throw new Error(`Weapon handle component \"${handle}\" couldn't be found!`);\r\n            } else {\r\n                return getItem({components, quality, equip_slot: \"weapon\", item_type: \"EQUIPPABLE\"});\r\n            }\r\n        } else if(shield_base){ //shield\r\n            if(!item_templates[shield_base]){\r\n                throw new Error(`Shield base component \"${shield_base}\" couldn't be found!`);\r\n            } else if(!item_templates[handle]) {\r\n                throw new Error(`Shield handle component \"${handle}\" couldn't be found!`);\r\n            } else {\r\n                return getItem({components, quality, equip_slot: \"off-hand\", item_type: \"EQUIPPABLE\"});\r\n            }\r\n        } else if(internal) { //armor\r\n            if(!item_templates[internal]){\r\n                throw new Error(`Internal armor component \"${internal}\" couldn't be found!`);\r\n            } else if(!item_templates[external]) {\r\n                throw new Error(`External armor component \"${external}\" couldn't be found!`);\r\n            } else {\r\n                let equip_slot = getArmorSlot(internal);\r\n                if(!equip_slot) {\r\n                    return;\r\n                }\r\n                return getItem({components, quality, equip_slot, item_type: \"EQUIPPABLE\"});\r\n            }\r\n        } else {\r\n            throw new Error(`Intentory key \"${key}\" seems to refer to non-existing item type!`);\r\n        }\r\n    } else if(quality) { //no comps but quality (clothing / artifact?)\r\n        return getItem({...item_templates[id], quality});\r\n    } else {\r\n        throw new Error(`Intentory key \"${key}\" is incorrect!`);\r\n    }\r\n}\r\n\r\n//book stats\r\nbook_stats[\"ABC for kids\"] = new BookData({\r\n    required_time: 120,\r\n    literacy_xp_rate: 1,\r\n    bonuses: {\r\n        xp_multipliers: {\r\n            all: 1.1,\r\n        }\r\n    },\r\n});\r\n\r\nbook_stats[\"Old combat manual\"] = new BookData({\r\n    required_time: 320,\r\n    literacy_xp_rate: 1,\r\n    bonuses: {\r\n        xp_multipliers: {\r\n            Combat: 1.2,\r\n        }\r\n    },\r\n});\r\n\r\nbook_stats[\"Twist liek a snek\"] = new BookData({\r\n    required_time: 320,\r\n    literacy_xp_rate: 1,\r\n    bonuses: {\r\n        xp_multipliers: {\r\n            Evasion: 1.2,\r\n        },\r\n        multipliers: {\r\n            agility: 1.1,\r\n        } \r\n    },\r\n});\r\n\r\nbook_stats[\"Medicine for dummies\"] = new BookData({\r\n    required_time: 420,\r\n    literacy_xp_rate: 2,\r\n    rewards: {\r\n        recipes: [\r\n            {category: \"alchemy\", subcategory: \"items\", recipe_id: \"Weak healing powder\"},\r\n            {category: \"alchemy\", subcategory: \"items\", recipe_id: \"Healing balm\"},\r\n            {category: \"alchemy\", subcategory: \"items\", recipe_id: \"Oneberry juice\"},\r\n            {category: \"alchemy\", subcategory: \"items\", recipe_id: \"Healing powder\"},\r\n            {category: \"alchemy\", subcategory: \"items\", recipe_id: \"Healing potion\"},\r\n        ],\r\n    },\r\n    bonuses: {\r\n        xp_multipliers: {\r\n            Medicine: 1.2,\r\n        },\r\n    }\r\n});\r\n\r\nbook_stats[\"Butchering and you\"] = new BookData({\r\n    required_time: 240,\r\n    literacy_xp_rate: 2,\r\n    rewards: {\r\n        recipes: [\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"Piece of wolf leather\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"Piece of boar leather\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"Piece of goat leather\"},\r\n            {category: \"cooking\", subcategory: \"items\", recipe_id: \"Animal fat\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"High quality wolf fang\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"High quality boar tusk\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"Pristine mountain goat horn\"},\r\n            {category: \"crafting\", subcategory: \"items\", recipe_id: \"Processed weak monster bone\"},\r\n        ],\r\n    },\r\n});\r\n\r\n//books\r\nitem_templates[\"ABC for kids\"] = new Book({\r\n    name: \"ABC for kids\",\r\n    description: \"The simplest book on the market\",\r\n    value: 100,\r\n});\r\n\r\nitem_templates[\"Old combat manual\"] = new Book({\r\n    name: \"Old combat manual\",\r\n    description: \"Old book about combat, worn and outdated, but might still contain something useful\",\r\n    value: 200,\r\n});\r\n\r\nitem_templates[\"Twist liek a snek\"] = new Book({\r\n    name: \"Twist liek a snek\",\r\n    description: \"This book has a terrible grammar, seemingly written by some uneducated bandit, but despite that it quite well details how to properly evade attacks.\",\r\n    value: 200,\r\n});\r\n\r\nitem_templates[\"Medicine for dummies\"] = new Book({\r\n    name: \"Medicine for dummies\",\r\n    description: \"A simple book about healing, describing how to create some basic medicines.\",\r\n    value: 320,\r\n});\r\n\r\nitem_templates[\"Butchering and you\"] = new Book({\r\n    name: \"Butchering and you\",\r\n    description: \"An introductory book to animal butchering, that goes into further detail on how to make a use of animal parts, especially hides and bones.\",\r\n    value: 240,\r\n});\r\n\r\n//miscellaneous and useless loot:\r\n(function(){\r\n    item_templates[\"Rat fang\"] = new OtherItem({\r\n        name: \"Rat fang\", \r\n        description: \"Fang of a huge rat, not very sharp, but can still pierce a human skin if enough force is applied\", \r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n    });\r\n\r\n    item_templates[\"Wolf fang\"] = new OtherItem({\r\n        name: \"Wolf fang\", \r\n        description: \"Fang of a wild wolf. Somewhat sharp, still not very useful. Maybe if it had a bit better quality...\", \r\n        value: 12,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n    });\r\n\r\n    item_templates[\"Boar tusk\"] = new Material({\r\n        name: \"Boar tusk\", \r\n        description: \"Tusk of a wild boar. Visibly used.\",\r\n        value: 20,\r\n        price_recovers: true,\r\n        material_type: \"miscellaneous\",\r\n    });\r\n\r\n    item_templates[\"Rat meat chunks\"] = new OtherItem({\r\n        name: \"Rat meat chunks\", \r\n        description: \"Eww\", \r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n    });\r\n\r\n    item_templates[\"Glass phial\"] = new OtherItem({\r\n        name: \"Glass phial\", \r\n        description: \"Small glass phial, a perfect container for a potion\", \r\n        value: 10,\r\n        saturates_market: false,\r\n    });\r\n\r\n    item_templates[\"Camping supplies\"] = new OtherItem({\r\n        name: \"Camping supplies\", \r\n        description: \"Bedroll, tent, small chest, and generally just anything that could be needed to establish a camp\", \r\n        value: 2000,\r\n        saturates_market: false,\r\n    });\r\n    item_templates[\"Coil of rope\"] = new OtherItem({\r\n        name: \"Coil of rope\", \r\n        description: \"A nice, long coil of rope, for whatever use you might find\",\r\n        value: 400,\r\n        saturates_market: false,\r\n    });\r\n\r\n    item_templates[\"Mountain goat horn\"] = new OtherItem({\r\n        name: \"Mountain goat horn\", \r\n        description: \"A curved and sturdy horn of a mountain goat. While not very useful in itself, it makes for a nice decoration.\", \r\n        value: 30,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n    });\r\n})();\r\n\r\n//lootable materials\r\n(function(){\r\n    item_templates[\"Rat tail\"] = new Material({\r\n        name: \"Rat tail\", \r\n        description: \"Tail of a huge rat. Doesn't seem very useful, but maybe some meat could be recovered from it\", \r\n        value: 4,\r\n        price_recovers: true,\r\n\r\n    });\r\n    item_templates[\"Rat pelt\"] = new Material({\r\n        name: \"Rat pelt\", \r\n        description: \"Pelt of a huge rat. Fur has terrible quality, but maybe leather could be used for something if you gather more?\", \r\n        value: 10,\r\n        price_recovers: true,\r\n        material_type: \"pelt\",\r\n    });\r\n    item_templates[\"High quality wolf fang\"] = new Material({\r\n        name: \"High quality wolf fang\", \r\n        description: \"Fang of a wild wolf. Very sharp, undamaged and surprisingly clean.\", \r\n        value: 15,\r\n        price_recovers: true,\r\n        material_type: \"miscellaneous\",\r\n    });\r\n    item_templates[\"Wolf pelt\"] = new Material({\r\n        name: \"Wolf pelt\", \r\n        description: \"Pelt of a wild wolf. It's a bit damaged so it won't fetch a great price, but the leather itself could be useful.\", \r\n        value: 20,\r\n        price_recovers: true,\r\n        material_type: \"pelt\",\r\n    });\r\n\r\n    item_templates[\"Boar hide\"] = new Material({\r\n        name: \"Boar hide\", \r\n        description: \"Thick hide of a wild boar. Too stiff for clothing, but might be useful for an armor\",\r\n        value: 30,\r\n        price_recovers: true,\r\n        material_type: \"pelt\",\r\n    });\r\n    item_templates[\"Boar meat\"] = new Material({\r\n        name: \"Boar meat\",\r\n        description: \"Fatty meat of a wild boar, all it needs is to be cooked.\",\r\n        value: 20,\r\n        price_recovers: true,\r\n    });\r\n    item_templates[\"High quality boar tusk\"] = new Material({\r\n        name: \"High quality boar tusk\", \r\n        description: \"Tusk of a wild boar. Sharp and long enough to easily kill an adult human\", \r\n        value: 25,\r\n        price_recovers: true,\r\n        material_type: \"miscellaneous\",\r\n    });\r\n\r\n    item_templates[\"Weak monster bone\"] = new Material({\r\n        name: \"Weak monster bone\", \r\n        description: \"Mutated and dark bone of a monster. While on the weaker side, it's still very strong and should be useful for crafting after some processing\",\r\n        value: 30,\r\n        price_recovers: true,\r\n        material_type: \"bone\",\r\n    });\r\n\r\n    item_templates[\"Goat meat\"] = new Material({\r\n        name: \"Goat meat\",\r\n        description: \"Lean meat of a goat, it's pretty tough and needs to be cooked for a long time.\",\r\n        value: 25,\r\n        price_recovers: true,\r\n    });\r\n    item_templates[\"Mountain goat hide\"] = new Material({\r\n        name: \"Mountain goat hide\", \r\n        description: \"Thick hide of a mountain goat hide. Not as strong as boar hide, but this one can actually be turned into clothes after some processing.\",\r\n        value: 30,\r\n        price_recovers: true,\r\n        material_type: \"pelt\",\r\n    });\r\n    item_templates[\"Pristine mountain goat horn\"] = new Material({\r\n        name: \"Pristine mountain goat horn\",\r\n        description: \"Curved and sturdy horn of a mountain goat. It's noticeably bigger than average and seems to be even sturdier.\", \r\n        value: 70,\r\n        price_recovers: true,\r\n        material_type: \"miscellaneous\",\r\n    });\r\n\r\n})();\r\n\r\n//gatherable materials\r\n(function(){\r\n    item_templates[\"Low quality iron ore\"] = new Material({\r\n        name: \"Low quality iron ore\",\r\n        description: \"Iron content is rather low and there are a lot of problematic components that can't be fully removed, which will affect created materials.\", \r\n        value: 3,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw metal\",\r\n    });\r\n    item_templates[\"Iron ore\"] = new Material({\r\n        name: \"Iron ore\", \r\n        description: \"It has a decent iron content and can be smelt into market-quality iron.\",\r\n        value: 5,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw metal\",\r\n    });\r\n    item_templates[\"Atratan ore\"] = new Material({\r\n        name: \"Atratan ore\",\r\n        description: \"A dark-colored ore that's useless by itself but can be mixed with iron to create steel.\",\r\n        value: 6,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw metal\",\r\n    });\r\n    item_templates[\"Coal\"] = new Material({\r\n        name: \"Coal\",\r\n        description: \"A flammable material with extremely high carbon content.\",\r\n        value: 7,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"coal\",\r\n    });\r\n\r\n    item_templates[\"Charcoal\"] = new Material({\r\n        name: \"Charcoal\",\r\n        description: \"A flammable material with extremely high carbon content, created by strongly heating wood.\",\r\n        value: 5,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"coal\",\r\n    });\r\n    item_templates[\"Piece of rough wood\"] = new Material({\r\n        name: \"Piece of rough wood\",\r\n        description: \"Cheapest form of wood. There's a lot of bark and malformed pieces.\",\r\n        value: 2,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw wood\",\r\n    });\r\n    item_templates[\"Piece of wood\"] = new Material({\r\n        name: \"Piece of wood\",\r\n        description: \"Average quality wood. There's a lot of bark and malformed pieces.\",\r\n        value: 4,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw wood\",\r\n    });\r\n    item_templates[\"Piece of ash wood\"] = new Material({\r\n        name: \"Piece of ash wood\",\r\n        description: \"Strong yet elastic, it's best wood you can hope to find around. There's a lot of bark and malformed pieces.\",\r\n        value: 7,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw wood\",\r\n    });\r\n\r\n    item_templates[\"Belmart leaf\"] = new Material({\r\n        name: \"Belmart leaf\",\r\n        description: \"Small, round, dark-green leaves with with very good disinfectant properties\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"disinfectant herb\",\r\n    });\r\n\r\n    item_templates[\"Golmoon leaf\"] = new Material({\r\n        name: \"Golmoon leaf\",\r\n        description: \"Big green-brown leaves that can be applied to wounds to speed up their healing\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"healing herb\",\r\n    });\r\n\r\n    item_templates[\"Oneberry\"] = new Material({\r\n        name: \"Oneberry\",\r\n        description: \"Small blue berries capable of stimulating body's natural healing\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"healing herb\",\r\n    });\r\n\r\n    item_templates[\"Silver thistle\"] = new Material({\r\n        name: \"Silver thistle\",\r\n        description: \"Rare herb that usually grows high up in mountains, a potent healing ingredient\",\r\n        value: 20,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"healing herb\",\r\n    });\r\n\r\n    item_templates[\"Wool\"] = new Material({\r\n        name: \"Wool\",\r\n        description: \"A handful of wool, raw and unprocessed\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"raw fabric\",\r\n    });\r\n})();\r\n\r\n//processed materials\r\n(function(){\r\n    item_templates[\"Low quality iron ingot\"] = new Material({\r\n        id: \"Low quality iron ingot\",\r\n        name: \"Low quality iron ingot\",\r\n        description: \"It has a lot of impurities, resulting in it being noticeably below the market standard\",\r\n        value: 10,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"metal\",\r\n    });\r\n    item_templates[\"Iron ingot\"] = new Material({\r\n        id: \"Iron ingot\",\r\n        name: \"Iron ingot\",\r\n        description: \"It doesn't suffer from any excessive impurities and can be used without worries.\",\r\n        value: 20,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"metal\",\r\n    });\r\n    item_templates[\"Steel ingot\"] = new Material({\r\n        id: \"Steel ingot\",\r\n        name: \"Steel ingot\",\r\n        description: \"Basic alloy of iron, harder and more resistant.\",\r\n        value: 40,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"metal\",\r\n    });\r\n    item_templates[\"Piece of wolf rat leather\"] = new Material({\r\n        name: \"Piece of wolf rat leather\",\r\n        description: \"It's slightly damaged and seems useless for anything that requires precise work.\",\r\n        value: 10,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"piece of leather\",\r\n    });\r\n    item_templates[\"Piece of wolf leather\"] = new Material({\r\n        name: \"Piece of wolf leather\",\r\n        description: \"Somewhat strong, should offer some protection when turned into armor\",\r\n        value: 20,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"piece of leather\",\r\n    });\r\n    item_templates[\"Piece of boar leather\"] = new Material({\r\n        name: \"Piece of boar leather\",\r\n        description: \"Thick and resistant leather, too stiff for clothes but perfect for armor\",\r\n        value: 30,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"piece of leather\",\r\n    });\r\n    item_templates[\"Piece of goat leather\"] = new Material({\r\n        name: \"Piece of goat leather\",\r\n        description: \"Thick and resistant, just barely elastic enough to be used for clothing\",\r\n        value: 40,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"piece of leather\"\r\n    }),\r\n    item_templates[\"Animal fat\"] = new Material({\r\n        name: \"Animal fat\",\r\n        description: \"White, thick, oily substance, rendered from animal tissue.\",\r\n        value: 40,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"fat\",\r\n    });\r\n    item_templates[\"Wool cloth\"] = new Material({\r\n        name: \"Wool cloth\",\r\n        description: \"Thick and warm, might possibly absorb some punches\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"fabric\",\r\n    });\r\n    item_templates[\"Iron chainmail\"] = new Material({\r\n        name: \"Iron chainmail\",\r\n        description: \"Dozens of tiny iron rings linked together. Nowhere near a wearable form, turning it into armor will still take a lot of effort and focus\",\r\n        value: 12,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"chainmail\",\r\n    });\r\n    item_templates[\"Steel chainmail\"] = new Material({\r\n        name: \"Steel chainmail\",\r\n        description: \"Dozens of tiny steel rings linked together. Nowhere near a wearable form, turning it into armor will still take a lot of effort and focus\",\r\n        value: 18,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"chainmail\",\r\n    });\r\n    item_templates[\"Scraps of wolf rat meat\"] = new Material({\r\n        name: \"Scraps of wolf rat meat\",\r\n        description: \"Ignoring where they come from and all the attached diseases, they actually look edible. Just remember to cook it first.\",\r\n        value: 8,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"meat\",\r\n    });\r\n    item_templates[\"Processed rough wood\"] = new Material({\r\n        name: \"Processed rough wood\",\r\n        description: \"Cheapest form of wood, ready to be used. Despite being rather weak, it still has a lot of uses.\",\r\n        value: 6,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"wood\",\r\n    });\r\n\r\n    item_templates[\"Processed wood\"] = new Material({\r\n        name: \"Processed wood\",\r\n        description: \"Average quality wood, ready to be used.\",\r\n        value: 11,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"wood\",\r\n    });\r\n\r\n    item_templates[\"Processed ash wood\"] = new Material({\r\n        name: \"Processed ash wood\",\r\n        description: \"High quality wood, just waiting to be turned into a piece of equipment.\",\r\n        value: 20,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"wood\",\r\n    });\r\n\r\n    item_templates[\"Processed weak monster bone\"] = new Material({\r\n        name: \"Processed weak monster bone\",\r\n        description: \"Polished and cleaned bones of a weak monster, just waiting to be turned into a piece of equipment.\",\r\n        value: 40,\r\n        saturates_market: true,\r\n        price_recovers: true,\r\n        material_type: \"bone\",\r\n    });\r\n\r\n})();\r\n\r\n//spare parts\r\n(function(){\r\n    //currently not in use and not obtainable\r\n    item_templates[\"Basic spare parts\"] = new OtherItem({\r\n        name: \"Basic spare parts\", \r\n        description: \"Some cheap and simple spare parts, like bindings and screws, necessary for crafting equipment\",\r\n        value: 30, \r\n        component_tier: 1,\r\n    });\r\n}());\r\n\r\n//weapon components:\r\n(function(){\r\n    item_templates[\"Cheap short iron blade\"] = new WeaponComponent({\r\n        name: \"Cheap short iron blade\", description: \"Crude blade made of iron. Perfect length for a dagger, but could be also used for a spear\",\r\n        component_type: \"short blade\",\r\n        value: 70,\r\n        component_tier: 1,\r\n        name_prefix: \"Cheap iron\",\r\n        attack_value: 5,\r\n        component_stats: {\r\n            crit_rate: {\r\n                flat: 0.06,\r\n            },\r\n            attack_speed: {\r\n                multiplier: 1.20,\r\n            },\r\n            evasion_points: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Short iron blade\"] = new WeaponComponent({\r\n        name: \"Short iron blade\", description: \"A good iron blade. Perfect length for a dagger, but could be also used for a spear\",\r\n        component_type: \"short blade\",\r\n        value: 160,\r\n        component_tier: 2,\r\n        name_prefix: \"Iron\",\r\n        attack_value: 8,\r\n        component_stats: {\r\n            crit_rate: {\r\n                flat: 0.08,\r\n            },\r\n            attack_speed: {\r\n                multiplier: 1.30,\r\n            },\r\n            evasion_points: {\r\n                multiplier: 1.13,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Short steel blade\"] = new WeaponComponent({\r\n        name: \"Short steel blade\", description: \"A good steel blade. Perfect length for a dagger, but could be also used for a spear\",\r\n        component_type: \"short blade\",\r\n        value: 240,\r\n        component_tier: 3,\r\n        name_prefix: \"Steel\",\r\n        attack_value: 11,\r\n        component_stats: {\r\n            crit_rate: {\r\n                flat: 0.1,\r\n            },\r\n            attack_speed: {\r\n                multiplier: 1.35,\r\n            },\r\n            evasion_points: {\r\n                multiplier: 1.2,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Cheap long iron blade\"] = new WeaponComponent({\r\n        name: \"Cheap long iron blade\", description: \"Crude blade made of iron, with a perfect length for a sword\",\r\n        component_type: \"long blade\",\r\n        value: 100,\r\n        name_prefix: \"Cheap iron\",\r\n        component_tier: 1,\r\n        attack_value: 8,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.10,\r\n            },\r\n            crit_rate: {\r\n                flat: 0.02,\r\n            },\r\n            attack_points: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Long iron blade\"] = new WeaponComponent({\r\n        name: \"Long iron blade\", description: \"Good blade made of iron, with a perfect length for a sword\",\r\n        component_type: \"long blade\",\r\n        value: 210,\r\n        name_prefix: \"Iron\",\r\n        component_tier: 2,\r\n        attack_value: 13,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.15,\r\n            },\r\n            crit_rate: {\r\n                flat: 0.04,\r\n            },\r\n            attack_points: {\r\n                multiplier: 1.13,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Long steel blade\"] = new WeaponComponent({\r\n        name: \"Long steel blade\", description: \"Good blade made of steel, with a perfect length for a sword\",\r\n        component_type: \"long blade\",\r\n        value: 310,\r\n        name_prefix: \"Steel\",\r\n        component_tier: 3,\r\n        attack_value: 18,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.2,\r\n            },\r\n            crit_rate: {\r\n                flat: 0.05,\r\n            },\r\n            attack_points: {\r\n                multiplier: 1.2,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Cheap iron axe head\"] = new WeaponComponent({\r\n        name: \"Cheap iron axe head\", description: \"A heavy axe head made of low quality iron\",\r\n        component_type: \"axe head\",\r\n        value: 100,\r\n        name_prefix: \"Cheap iron\",\r\n        component_tier: 1,\r\n        attack_value: 10,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Iron axe head\"] = new WeaponComponent({\r\n        name: \"Iron axe head\", description: \"A heavy axe head made of steel\",\r\n        component_type: \"axe head\",\r\n        value: 210,\r\n        name_prefix: \"Iron\",\r\n        component_tier: 2,\r\n        attack_value: 16,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel axe head\"] = new WeaponComponent({\r\n        name: \"Steel axe head\", description: \"A heavy axe head made of steel\",\r\n        component_type: \"axe head\",\r\n        value: 310,\r\n        name_prefix: \"Steel\",\r\n        component_tier: 3,\r\n        attack_value: 22,\r\n    });\r\n    item_templates[\"Cheap iron hammer head\"] = new WeaponComponent({\r\n        name: \"Cheap iron hammer head\", description: \"A crude ball made of low quality iron, with a small hole for the handle\",\r\n        component_type: \"hammer head\",\r\n        value: 100,\r\n        name_prefix: \"Cheap iron\",\r\n        component_tier: 1,\r\n        attack_value: 12,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.8,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron hammer head\"] = new WeaponComponent({\r\n        name: \"Iron hammer head\", description: \"A crude ball made of iron, with a small hole for the handle\",\r\n        component_type: \"hammer head\",\r\n        value: 210,\r\n        name_prefix: \"Iron\",\r\n        component_tier: 2,\r\n        attack_value: 19,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.85,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel hammer head\"] = new WeaponComponent({\r\n        name: \"Steel hammer head\", description: \"A blocky piece of steel, with a small hole for the handle\",\r\n        component_type: \"hammer head\",\r\n        value: 300,\r\n        name_prefix: \"Steel\",\r\n        component_tier: 3,\r\n        attack_value: 26,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Simple short wooden hilt\"] = new WeaponComponent({\r\n        name: \"Simple short wooden hilt\", description: \"A short handle for a sword or maybe a dagger\",\r\n        component_type: \"short handle\",\r\n        value: 8,\r\n        component_tier: 1,\r\n    });\r\n\r\n    item_templates[\"Short wooden hilt\"] = new WeaponComponent({\r\n        name: \"Short wooden hilt\", description: \"A short handle for a sword or maybe a dagger\",\r\n        component_type: \"short handle\",\r\n        value: 32,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Short ash wood hilt\"] = new WeaponComponent({\r\n        name: \"Short ash wood hilt\", description: \"A short handle for a sword or maybe a dagger\",\r\n        component_type: \"short handle\",\r\n        value: 48,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.1,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Simple medium wooden handle\"] = new WeaponComponent({\r\n        name: \"Simple medium wooden handle\", description: \"A medium handle for an axe or a hammer\",\r\n        component_type: \"medium handle\",\r\n        value: 16,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Medium wooden handle\"] = new WeaponComponent({\r\n        name: \"Medium wooden handle\", description: \"A medium handle for an axe or a hammer\",\r\n        component_type: \"medium handle\",\r\n        value: 64,\r\n        component_tier: 2,\r\n    });\r\n\r\n    item_templates[\"Medium ash wood handle\"] = new WeaponComponent({\r\n        name: \"Medium ash wood handle\", description: \"A medium handle for an axe or a hammer\",\r\n        component_type: \"medium handle\",\r\n        value: 96,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Simple long wooden shaft\"] = new WeaponComponent({\r\n        name: \"Simple long wooden shaft\", description: \"A long shaft for a spear, somewhat uneven\",\r\n        component_type: \"long handle\",\r\n        value: 24,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.9,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Long wooden shaft\"] = new WeaponComponent({\r\n        name: \"Long wooden shaft\", \r\n        description: \"A long shaft for a spear, somewhat uneven\",\r\n        component_type: \"long handle\",\r\n        value: 100,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            },\r\n        }\r\n    });\r\n    item_templates[\"Long ash wood shaft\"] = new WeaponComponent({\r\n        name: \"Long ash wood shaft\", \r\n        description: \"A long shaft for a spear.\",\r\n        component_type: \"long handle\",\r\n        value: 150,\r\n        component_tier: 3,\r\n    });\r\n\r\n    item_templates[\"Cheap short iron hilt\"] = new WeaponComponent({\r\n        name: \"Cheap short iron hilt\", description: \"A short handle for a sword or maybe a dagger, heavy\",\r\n        component_type: \"short handle\",\r\n        value: 56,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.9,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Short iron hilt\"] = new WeaponComponent({\r\n        name: \"Short iron hilt\", description: \"A short handle for a sword or maybe a dagger, heavy\",\r\n        component_type: \"short handle\",\r\n        value: 80,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_power: {\r\n                multiplier: 1.05,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Short steel hilt\"] = new WeaponComponent({\r\n        name: \"Short steel hilt\", description: \"A short handle for a sword or maybe a dagger, heavy\",\r\n        component_type: \"short handle\",\r\n        value: 120,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_power: {\r\n                multiplier: 1.1,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap medium iron handle\"] = new WeaponComponent({\r\n        name: \"Cheap medium iron handle\", description: \"A medium handle for an axe or a hammer, very heavy\",\r\n        component_type: \"medium handle\",\r\n        value: 64,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.7,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.2,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Medium iron handle\"] = new WeaponComponent({\r\n        name: \"Medium iron handle\", description: \"A medium handle for an axe or a hammer, very heavy\",\r\n        component_type: \"medium handle\",\r\n        value: 100,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.8,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.2,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Medium steel handle\"] = new WeaponComponent({\r\n        name: \"Medium steel handle\", description: \"A medium handle for an axe or a hammer, very heavy\",\r\n        component_type: \"medium handle\",\r\n        value: 150,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.8,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.27,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap long iron shaft\"] = new WeaponComponent({\r\n        name: \"Cheap long iron shaft\", description: \"A long shaft for a spear, extremely heavy\",\r\n        component_type: \"long handle\",\r\n        value: 92,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.5,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.6,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Long iron shaft\"] = new WeaponComponent({\r\n        name: \"Long iron shaft\", \r\n        description: \"A long shaft for a spear,  extremely heavy\",\r\n        component_type: \"long handle\",\r\n        value: 128,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.6,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.6,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Long steel shaft\"] = new WeaponComponent({\r\n        name: \"Long steel shaft\", \r\n        description: \"A long shaft for a spear, extremely heavy\",\r\n        component_type: \"long handle\",\r\n        value: 192,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.6,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.75,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Short weak bone hilt\"] = new WeaponComponent({\r\n        name: \"Short weak bone hilt\", description: \"A short handle for a sword or maybe a dagger, made of a weak monster's bone\",\r\n        component_type: \"short handle\",\r\n        value: 120,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_power: {\r\n                multiplier: 1.05,\r\n            },\r\n            attack_speed: {\r\n                multiplier: 1.05,\r\n            }\r\n        },\r\n    });\r\n\r\n    item_templates[\"Medium weak bone handle\"] = new WeaponComponent({\r\n        name: \"Medium weak bone handle\", description: \"A medium handle for an axe or a hammer, made of a weak monster's bone\",\r\n        component_type: \"medium handle\",\r\n        value: 150,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.1,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Long weak bone shaft\"] = new WeaponComponent({\r\n        name: \"Long weak bone shaft\", \r\n        description: \"A long shaft for a spear, made of weak monster's bone\",\r\n        component_type: \"long handle\",\r\n        value: 192,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.8,\r\n            },\r\n            attack_power: {\r\n                multiplier: 1.5,\r\n            }\r\n        }\r\n    });\r\n\r\n})();\r\n\r\n//weapons:\r\n(function(){\r\n    item_templates[\"Cheap iron spear\"] = new Weapon({\r\n        components: {\r\n            head: \"Cheap short iron blade\",\r\n            handle: \"Simple long wooden shaft\"\r\n        }\r\n    });\r\n    item_templates[\"Iron spear\"] = new Weapon({\r\n        components: {\r\n            head: \"Short iron blade\",\r\n            handle: \"Simple long wooden shaft\"\r\n        }\r\n    });\r\n    item_templates[\"Steel spear\"] = new Weapon({\r\n        components: {\r\n            head: \"Short steel blade\",\r\n            handle: \"Long wooden shaft\"\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap iron dagger\"] = new Weapon({\r\n        components: {\r\n            head: \"Cheap short iron blade\",\r\n            handle: \"Simple short wooden hilt\",\r\n        }\r\n    });\r\n    item_templates[\"Iron dagger\"] = new Weapon({\r\n        components: {\r\n            head: \"Short iron blade\",\r\n            handle: \"Simple short wooden hilt\",\r\n        }\r\n    });\r\n    item_templates[\"Steel dagger\"] = new Weapon({\r\n        components: {\r\n            head: \"Short steel blade\",\r\n            handle: \"Short wooden hilt\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap iron sword\"] = new Weapon({\r\n        components: {\r\n            head: \"Cheap long iron blade\",\r\n            handle: \"Simple short wooden hilt\",\r\n        }\r\n    });\r\n    item_templates[\"Iron sword\"] = new Weapon({\r\n        components: {\r\n            head: \"Long iron blade\",\r\n            handle: \"Simple short wooden hilt\",\r\n        }\r\n    });\r\n    item_templates[\"Steel sword\"] = new Weapon({\r\n        components: {\r\n            head: \"Long steel blade\",\r\n            handle: \"Short wooden hilt\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap iron axe\"] = new Weapon({\r\n        components: {\r\n            head: \"Cheap iron axe head\",\r\n            handle: \"Simple medium wooden handle\",\r\n        }\r\n    });\r\n    item_templates[\"Iron axe\"] = new Weapon({\r\n        components: {\r\n            head: \"Iron axe head\",\r\n            handle: \"Simple medium wooden handle\",\r\n        }\r\n    });\r\n    item_templates[\"Steel axe\"] = new Weapon({\r\n        components: {\r\n            head: \"Steel axe head\",\r\n            handle: \"Medium wooden handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Cheap iron battle hammer\"] = new Weapon({\r\n        components: {\r\n            head: \"Cheap iron hammer head\",\r\n            handle: \"Simple medium wooden handle\",\r\n        }\r\n    });\r\n    item_templates[\"Iron battle hammer\"] = new Weapon({\r\n        components: {\r\n            head: \"Iron hammer head\",\r\n            handle: \"Simple medium wooden handle\",\r\n        }\r\n    });\r\n    item_templates[\"Steel battle hammer\"] = new Weapon({\r\n        components: {\r\n            head: \"Steel hammer head\",\r\n            handle: \"Medium wooden handle\",\r\n        }\r\n    });\r\n})();\r\n\r\n//armor components:\r\n(function(){\r\n    item_templates[\"Wolf leather helmet armor\"] = new ArmorComponent({\r\n        name: \"Wolf leather helmet armor\", \r\n        description: \"Strenghtened wolf leather, ready to be used as a part of a helmet\",\r\n        component_type: \"helmet exterior\",\r\n        value: 240,\r\n        component_tier: 2,\r\n        full_armor_name: \"Wolf leather helmet\",\r\n        defense_value: 2,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Boar leather helmet armor\"] = new ArmorComponent({\r\n        name: \"Boar leather helmet armor\", \r\n        description: \"Strong boar leather, ready to be used as a part of a helmet\",\r\n        component_type: \"helmet exterior\",\r\n        value: 400,\r\n        component_tier: 3,\r\n        full_armor_name: \"Boar leather helmet\",\r\n        defense_value: 3,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Wolf leather chestplate armor\"] = new ArmorComponent({\r\n        id: \"Wolf leather chestplate armor\",\r\n        name: \"Wolf leather cuirass\",\r\n        description: \"Simple cuirass made of solid wolf leather, all it needs now is something softer to wear under it.\",\r\n        component_type: \"chestplate exterior\",\r\n        value: 480,\r\n        component_tier: 2,\r\n        full_armor_name: \"Wolf leather armor\",\r\n        defense_value: 4,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Boar leather chestplate armor\"] = new ArmorComponent({\r\n        id: \"Boar leather chestplate armor\",\r\n        name: \"Boar leather cuirass\",\r\n        description: \"String cuirass made of boar leather.\",\r\n        component_type: \"chestplate exterior\",\r\n        value: 800,\r\n        component_tier: 3,\r\n        full_armor_name: \"Boar leather armor\",\r\n        defense_value: 6,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Wolf leather greaves\"] = new ArmorComponent({\r\n        name: \"Wolf leather greaves\",\r\n        description: \"Greaves made of wolf leather. Just attach them onto some pants and you are ready to go.\",\r\n        component_type: \"leg armor exterior\",\r\n        value: 240,\r\n        component_tier: 2,\r\n        full_armor_name: \"Wolf leather armored pants\",\r\n        defense_value: 2,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Boar leather greaves\"] = new ArmorComponent({\r\n        name: \"Boar leather greaves\",\r\n        description: \"Greaves made of thick boar leather. Just attach them onto some pants and you are ready to go.\",\r\n        component_type: \"leg armor exterior\",\r\n        value: 400,\r\n        component_tier: 3,\r\n        full_armor_name: \"Boar leather armored pants\",\r\n        defense_value: 3,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Wolf leather glove armor\"] = new ArmorComponent({\r\n        name: \"Wolf leather glove armor\",\r\n        description: \"Pieces of wolf leather shaped for gloves.\",\r\n        component_type: \"glove exterior\",\r\n        value: 240,\r\n        component_tier: 2,\r\n        full_armor_name: \"Wolf leather gloves\",\r\n        defense_value: 2,\r\n    });\r\n\r\n    item_templates[\"Boar leather glove armor\"] = new ArmorComponent({\r\n        name: \"Boar leather glove armor\",\r\n        description: \"Pieces of boar leather shaped for gloves.\",\r\n        component_type: \"glove exterior\",\r\n        value: 400,\r\n        component_tier: 3,\r\n        full_armor_name: \"Boar leather gloves\",\r\n        defense_value: 3,\r\n    });\r\n\r\n    item_templates[\"Wolf leather shoe armor\"] = new ArmorComponent({\r\n        name: \"Wolf leather shoe armor\",\r\n        description: \"Pieces of wolf leather shaped for shoes.\",\r\n        component_type: \"shoes exterior\",\r\n        value: 240,\r\n        component_tier: 2,\r\n        full_armor_name: \"Wolf leather shoes\",\r\n        defense_value: 2,\r\n    });\r\n\r\n    item_templates[\"Boar leather shoe armor\"] = new ArmorComponent({\r\n        name: \"Boar leather shoe armor\",\r\n        description: \"Pieces of boar leather shaped for shoes.\",\r\n        component_type: \"shoes exterior\",\r\n        value: 400,\r\n        component_tier: 3,\r\n        full_armor_name: \"Boar leather shoes\",\r\n        defense_value: 3,\r\n    });\r\n\r\n    item_templates[\"Iron chainmail helmet armor\"] = new ArmorComponent({\r\n        name: \"Iron chainmail helmet armor\",\r\n        description: \"Best way to keep your head in one piece\",\r\n        component_type: \"helmet exterior\",\r\n        value: 320,\r\n        component_tier: 2,\r\n        full_armor_name: \"Iron chainmail helmet\",\r\n        defense_value: 4,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail helmet armor\"] = new ArmorComponent({\r\n        name: \"Steel chainmail helmet armor\",\r\n        description: \"Best way to keep your head in one piece\",\r\n        component_type: \"helmet exterior\",\r\n        value: 480,\r\n        component_tier: 3,\r\n        full_armor_name: \"Steel chainmail helmet\",\r\n        defense_value: 6,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chainmail vest\"] = new ArmorComponent({\r\n        name: \"Iron chainmail vest\",\r\n        description: \"Basic iron chainmail. Nowhere near as strong as a plate armor\",\r\n        component_type: \"chestplate exterior\",\r\n        value: 640,\r\n        component_tier: 2,\r\n        full_armor_name: \"Iron chainmail armor\",\r\n        defense_value: 8,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail vest\"] = new ArmorComponent({\r\n        name: \"Steel chainmail vest\",\r\n        description: \"Basic steel chainmail. Nowhere near as strong as a plate armor\",\r\n        component_type: \"chestplate exterior\",\r\n        value: 960,\r\n        component_tier: 3,\r\n        full_armor_name: \"Steel chainmail armor\",\r\n        defense_value: 11,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chainmail greaves\"] = new ArmorComponent({\r\n        name: \"Iron chainmail greaves\",\r\n        description: \"Greaves made of iron chainmail. Just attach them onto some pants and you are ready to go.\",\r\n        component_type: \"leg armor exterior\",\r\n        value: 320,\r\n        component_tier: 2,\r\n        full_armor_name: \"Iron chainmail pants\",\r\n        defense_value: 4,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail greaves\"] = new ArmorComponent({\r\n        name: \"Steel chainmail greaves\",\r\n        description: \"Greaves made of steel chainmail. Just attach them onto some pants and you are ready to go.\",\r\n        component_type: \"leg armor exterior\",\r\n        value: 480,\r\n        component_tier: 3,\r\n        full_armor_name: \"Steel chainmail pants\",\r\n        defense_value: 6,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chainmail glove\"] = new ArmorComponent({\r\n        name: \"Iron chainmail glove\",\r\n        description: \"Iron chainmail in a form ready to be applied onto a glove.\",\r\n        component_type: \"glove exterior\",\r\n        value: 320,\r\n        component_tier: 2,\r\n        full_armor_name: \"Iron chainmail gloves\",\r\n        defense_value: 4,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail glove\"] = new ArmorComponent({\r\n        name: \"Steel chainmail glove\",\r\n        description: \"Steel chainmail in a form ready to be applied onto a glove.\",\r\n        component_type: \"glove exterior\",\r\n        value: 480,\r\n        component_tier: 3,\r\n        full_armor_name: \"Steel chainmail gloves\",\r\n        defense_value: 6,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.98,\r\n            },\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chainmail shoes\"] = new ArmorComponent({\r\n        name: \"Iron chainmail shoes\",\r\n        description: \"Iron chainmail in a form ready to be applied onto a pair of shoes.\",\r\n        component_type: \"shoes exterior\",\r\n        value: 320,\r\n        component_tier: 2,\r\n        full_armor_name: \"Iron chainmail boots\",\r\n        defense_value: 4,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail shoes\"] = new ArmorComponent({\r\n        name: \"Steel chainmail shoes\",\r\n        description: \"Steel chainmail in a form ready to be applied onto a pair of shoes.\",\r\n        component_type: \"shoes exterior\",\r\n        value: 480,\r\n        component_tier: 3,\r\n        full_armor_name: \"Steel chainmail boots\",\r\n        defense_value: 6,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 0.9,\r\n            }\r\n        }\r\n    });\r\n\r\n})();\r\n\r\n//clothing (functions both as weak armor and as an armor component):\r\n(function(){\r\n    item_templates[\"Cheap leather vest\"] = new Armor({\r\n        name: \"Cheap leather vest\", \r\n        description: \"Vest providing very low protection. Better not to know what's it made from\", \r\n        value: 100,\r\n        component_type: \"chestplate interior\",\r\n        base_defense: 2,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.99,\r\n            },\r\n        }\r\n    });\r\n    item_templates[\"Leather vest\"] = new Armor({\r\n        name: \"Leather vest\", \r\n        description: \"Comfortable leather vest, offering a low protection.\", \r\n        value: 300,\r\n        component_type: \"chestplate interior\",\r\n        base_defense: 2,\r\n        component_tier: 2,\r\n    });\r\n    item_templates[\"Goat leather vest\"] = new Armor({\r\n        name: \"Goat leather vest\", \r\n        description: \"Comfortable leather vest, offering a mediocre protection.\", \r\n        value: 450,\r\n        component_type: \"chestplate interior\",\r\n        base_defense: 3,\r\n        component_tier: 3,\r\n    });\r\n\r\n    item_templates[\"Cheap leather pants\"] = new Armor({\r\n        name: \"Cheap leather pants\", \r\n        description: \"Leather pants made from cheapest resources available.\", \r\n        value: 100,\r\n        component_type: \"leg armor interior\",\r\n        base_defense: 1,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.99,\r\n            },\r\n        }\r\n    });\r\n    item_templates[\"Leather pants\"] = new Armor({\r\n        name: \"Leather pants\", \r\n        description: \"Solid leather pants.\", \r\n        value: 300,\r\n        component_type: \"leg armor interior\",\r\n        base_defense: 2,\r\n        component_tier: 2,\r\n    });\r\n    item_templates[\"Goat leather pants\"] = new Armor({\r\n        name: \"Goat leather pants\", \r\n        description: \"Solid leather pants.\",\r\n        value: 450,\r\n        component_type: \"leg armor interior\",\r\n        base_defense: 3,\r\n        component_tier: 3,\r\n    });\r\n\r\n    item_templates[\"Cheap leather hat\"] = new Armor({\r\n        name: \"Cheap leather hat\", \r\n        description: \"A cheap leather hat to protect your head.\", \r\n        value: 100,\r\n        component_type: \"helmet interior\",\r\n        base_defense: 1,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.99,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Leather hat\"] = new Armor({\r\n        name: \"Leather hat\", \r\n        description: \"A nice leather hat to protect your head.\", \r\n        value: 300,\r\n        component_type: \"helmet interior\",\r\n        base_defense: 2,\r\n        component_tier: 2,\r\n    });\r\n\r\n    item_templates[\"Goat leather hat\"] = new Armor({\r\n        name: \"Goat leather hat\", \r\n        description: \"A solid leather hat to protect your head.\", \r\n        value: 450,\r\n        component_type: \"helmet interior\",\r\n        base_defense: 3,\r\n        component_tier: 3,\r\n    });\r\n\r\n    item_templates[\"Leather gloves\"] = new Armor({\r\n        name: \"Leather gloves\", \r\n        description: \"Strong leather gloves, perfect for handling rough and sharp objects.\", \r\n        value: 300,\r\n        component_type: \"glove interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n    });\r\n    item_templates[\"Goat leather gloves\"] = new Armor({\r\n        name: \"Goat leather gloves\", \r\n        description: \"Strong leather gloves, perfect for handling rough and sharp objects.\", \r\n        value: 450,\r\n        component_type: \"glove interior\",\r\n        base_defense: 2,\r\n        component_tier: 3,\r\n    });\r\n\r\n    item_templates[\"Cheap leather shoes\"] = new Armor({\r\n        name: \"Cheap leather shoes\",\r\n        description: \"Shoes made of thin and cheap leather. Even then, they are in every single aspect better than not having any.\", \r\n        value: 100,\r\n        component_type: \"shoes interior\",\r\n        base_defense: 0,\r\n        component_tier: 1,\r\n        component_stats: {\r\n            agility: {\r\n                multiplier: 1.05,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Leather shoes\"] = new Armor({\r\n        name: \"Leather shoes\", \r\n        description: \"Solid shoes made of leather, a must have for any traveler\", \r\n        value: 300,\r\n        component_type: \"shoes interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.02,\r\n            },\r\n            agility: {\r\n                multiplier: 1.1,\r\n            },\r\n        }\r\n    });\r\n    item_templates[\"Goat leather shoes\"] = new Armor({\r\n        name: \"Goat leather shoes\", \r\n        description: \"Strong shoes made of leather, a must have for any traveler\", \r\n        value: 450,\r\n        component_type: \"shoes interior\",\r\n        base_defense: 2,\r\n        component_tier: 3,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.02,\r\n            },\r\n            agility: {\r\n                multiplier: 1.15,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Wool shirt\"] = new Armor({\r\n        name: \"Wool shirt\",\r\n        description: \"It's thick enough to weaken a blow, but you shouldn't hope for much. On the plus side, it's light and doesn't block your moves.\", \r\n        value: 300,\r\n        component_type: \"chestplate interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.01,\r\n            },\r\n            agility: {\r\n                multiplier: 1.02,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Wool pants\"] = new Armor({\r\n        name: \"Wool pants\", \r\n        description: \"Nice woollen pants. Slightly itchy.\",\r\n        value: 100,\r\n        component_type: \"leg armor interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n    });\r\n\r\n    item_templates[\"Wool hat\"] = new Armor({\r\n        name: \"Wool hat\", \r\n        description: \"Simple woollen hat to protect your head.\",\r\n        value: 300,\r\n        component_type: \"helmet interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 1.01,\r\n            },\r\n            agility: {\r\n                multiplier: 1.01,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Wool gloves\"] = new Armor({\r\n        name: \"Wool gloves\",\r\n        description: \"Warm and comfy, but they don't provide much protection.\",\r\n        value: 300,\r\n        component_type: \"glove interior\",\r\n        base_defense: 1,\r\n        component_tier: 2,\r\n    });\r\n})();\r\n\r\n//armors:\r\n(function(){\r\n    //predefined full (int+ext) armors go here\r\n    item_templates[\"Wolf leather armor\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather vest\",\r\n            external: \"Wolf leather chestplate armor\",\r\n        }\r\n    });\r\n    item_templates[\"Wolf leather helmet\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather hat\",\r\n            external: \"Wolf leather helmet armor\",\r\n        }\r\n    });\r\n    item_templates[\"Wolf leather armored pants\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather pants\",\r\n            external: \"Wolf leather greaves\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chainmail armor\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather vest\",\r\n            external: \"Iron chainmail vest\",\r\n        }\r\n    });\r\n    item_templates[\"Iron chainmail helmet\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather hat\",\r\n            external: \"Iron chainmail helmet armor\",\r\n        }\r\n    });\r\n    item_templates[\"Iron chainmail pants\"] = new Armor({\r\n        components: {\r\n            internal: \"Leather pants\",\r\n            external: \"Iron chainmail greaves\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Steel chainmail armor\"] = new Armor({\r\n        components: {\r\n            internal: \"Goat leather vest\",\r\n            external: \"Steel chainmail vest\",\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail helmet\"] = new Armor({\r\n        components: {\r\n            internal: \"Goat leather hat\",\r\n            external: \"Steel chainmail helmet armor\",\r\n        }\r\n    });\r\n    item_templates[\"Steel chainmail pants\"] = new Armor({\r\n        components: {\r\n            internal: \"Goat leather pants\",\r\n            external: \"Steel chainmail greaves\",\r\n        }\r\n    });\r\n})();\r\n\r\n//shield components:\r\n(function(){\r\n    item_templates[\"Cheap wooden shield base\"] = new ShieldComponent({\r\n        name: \"Cheap wooden shield base\", description: \"Cheap shield component made of wood, basically just a few planks barely holding together\", \r\n        value: 16, \r\n        shield_strength: 1, \r\n        shield_name: \"Cheap wooden shield\",\r\n        component_tier: 1,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Crude wooden shield base\"] = new ShieldComponent({\r\n        name: \"Crude wooden shield base\", description: \"A shield base of rather bad quality, but at least it won't fall apart by itself\", \r\n        value: 32,\r\n        shield_strength: 3,\r\n        shield_name: \"Crude wooden shield\",\r\n        component_tier: 1,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Wooden shield base\"] = new ShieldComponent({\r\n        name: \"Wooden shield base\", description: \"Proper wooden shield base, although it could use some additional reinforcement\", \r\n        value: 80,\r\n        shield_strength: 5,\r\n        shield_name: \"Wooden shield\",\r\n        component_tier: 2,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Ash wood shield base\"] = new ShieldComponent({\r\n        name: \"Ash wood shield base\", description: \"Solid wooden shield base, although still nowhere near as resistant as metal\", \r\n        value: 120,\r\n        shield_strength: 8,\r\n        shield_name: \"Ash wood shield\",\r\n        component_tier: 3,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.95,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Crude iron shield base\"] = new ShieldComponent({\r\n        name: \"Crude iron shield base\", description: \"Heavy shield base made of low quality iron.\", \r\n        value: 128,\r\n        shield_strength: 6,\r\n        shield_name: \"Crude iron shield\",\r\n        component_tier: 1,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.75,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Iron shield base\"] = new ShieldComponent({\r\n        name: \"Iron shield base\", \r\n        description: \"Solid and strong shield base, although it's quite heavy\", \r\n        value: 210,\r\n        shield_strength: 10,\r\n        shield_name: \"Iron shield\",\r\n        component_tier: 2,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.8,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Steel shield base\"] = new ShieldComponent({\r\n        name: \"Steel shield base\", \r\n        description: \"Mighty shield base, although it's quite heavy\", \r\n        value: 300,\r\n        shield_strength: 14,\r\n        shield_name: \"Steel shield\",\r\n        component_tier: 3,\r\n        component_type: \"shield base\",\r\n        component_stats: {\r\n            attack_speed: {\r\n                multiplier: 0.85, //don't make speed penalty for heavy shields weaker than this\r\n            }\r\n        }\r\n    });\r\n\r\n    item_templates[\"Basic shield handle\"] = new ShieldComponent({\r\n        id: \"Basic shield handle\",\r\n        name: \"Crude wooden shield handle\", \r\n        description: \"A simple handle for holding the shield\", \r\n        value: 10,\r\n        component_tier: 1,\r\n        component_type: \"shield handle\",\r\n    });\r\n\r\n    item_templates[\"Wooden shield handle\"] = new ShieldComponent({\r\n        name: \"Wooden shield handle\", \r\n        description: \"A decent wooden handle for holding the shield\", \r\n        value: 32,\r\n        component_tier: 2,\r\n        component_type: \"shield handle\",\r\n        component_stats: {\r\n            block_strength: {\r\n                multiplier: 1.1,\r\n            }\r\n        }\r\n    });\r\n    item_templates[\"Ash wood shield handle\"] = new ShieldComponent({\r\n        name: \"Ash wood shield handle\", \r\n        description: \"A solid wooden handle for holding the shield\", \r\n        value: 48,\r\n        component_tier: 3,\r\n        component_type: \"shield handle\",\r\n        component_stats: {\r\n            block_strength: {\r\n                multiplier: 1.2,\r\n            }\r\n        }\r\n    });\r\n\r\n})();\r\n\r\n//shields:\r\n(function(){\r\n    item_templates[\"Cheap wooden shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Cheap wooden shield base\",\r\n            handle: \"Basic shield handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Crude wooden shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Crude wooden shield base\",\r\n            handle: \"Basic shield handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Wooden shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Wooden shield base\",\r\n            handle: \"Wooden shield handle\",\r\n        }\r\n    });\r\n    item_templates[\"Ash wood shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Ash wood shield base\",\r\n            handle: \"Ash wood shield handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Crude iron shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Crude iron shield base\",\r\n            handle: \"Basic shield handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Iron shield base\",\r\n            handle: \"Wooden shield handle\",\r\n        }\r\n    });\r\n\r\n    item_templates[\"Steel shield\"] = new Shield({\r\n        components: {\r\n            shield_base: \"Steel shield base\",\r\n            handle: \"Ash wood shield handle\",\r\n        }\r\n    });\r\n})();\r\n\r\n//trinkets:\r\n(function(){\r\n    item_templates[\"Wolf trophy\"] = new Artifact({\r\n        name: \"Wolf trophy\",\r\n        value: 50,\r\n        stats: {\r\n            attack_speed: {\r\n                multiplier: 1.1,\r\n            },\r\n            crit_rate: {\r\n                flat: 0.02,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Boar trophy\"] = new Artifact({\r\n        name: \"Boar trophy\",\r\n        value: 80,\r\n        stats: {\r\n            attack_power: {\r\n                multiplier: 1.1,\r\n            },\r\n            crit_multiplier: {\r\n                flat: 0.2,\r\n            },\r\n        }\r\n    });\r\n\r\n    item_templates[\"Mountain goat trophy\"] = new Artifact({\r\n        name: \"Mountain goat trophy\",\r\n        value: 150,\r\n        stats: {\r\n            attack_power: {\r\n                multiplier: 1.05,\r\n            },\r\n            defense: {\r\n                flat: 5,\r\n                multiplier: 1.05,\r\n            },\r\n        }\r\n    });\r\n})();\r\n\r\n//tools:\r\n(function(){\r\n    item_templates[\"Old pickaxe\"] = new Tool({\r\n        name: \"Old pickaxe\",\r\n        description: \"An old pickaxe that has seen better times, but is still usable\",\r\n        value: 10,\r\n        equip_slot: \"pickaxe\",\r\n    });\r\n\r\n    item_templates[\"Old axe\"] = new Tool({\r\n        name: \"Old axe\",\r\n        description: \"An old axe that has seen better times, but is still usable\",\r\n        value: 10,\r\n        equip_slot: \"axe\",\r\n    });\r\n\r\n    item_templates[\"Old sickle\"] = new Tool({\r\n        name: \"Old sickle\",\r\n        description: \"And old herb sickle that has seen better time, but is still usable\",\r\n        value: 10,\r\n        equip_slot: \"sickle\",\r\n    });\r\n\r\n    item_templates[\"Iron pickaxe\"] = new Tool({\r\n        name: \"Iron pickaxe\",\r\n        description: \"A decent pickaxe made of iron, strong enough for most ores\",\r\n        value: 1000,\r\n        equip_slot: \"pickaxe\",\r\n        bonus_skill_levels: {\r\n            \"Mining\": 3,\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron chopping axe\"] = new Tool({\r\n        name: \"Iron chopping axe\",\r\n        description: \"A decent axe made of iron, hard and sharp enough for most of trees, even if they will still require an effort\",\r\n        value: 1000,\r\n        equip_slot: \"axe\",\r\n        bonus_skill_levels: {\r\n            \"Woodcutting\": 3,\r\n        }\r\n    });\r\n\r\n    item_templates[\"Iron sickle\"] = new Tool({\r\n        name: \"Iron sickle\",\r\n        description: \"A decent sickle made of iron, sharp enough for most of plants\",\r\n        value: 1000,\r\n        equip_slot: \"sickle\",\r\n        bonus_skill_levels: {\r\n            \"Herbalism\": 3,\r\n        }\r\n    });\r\n})();\r\n\r\n//usables:\r\n(function(){\r\n    item_templates[\"Stale bread\"] = new UsableItem({\r\n        name: \"Stale bread\", description: \"Big piece of an old bread, still edible.\", \r\n        value: 20,\r\n        effects: [{effect: \"Basic meal\", duration: 60}],\r\n    });\r\n\r\n    item_templates[\"Fresh bread\"] = new UsableItem({\r\n        name: \"Fresh bread\", \r\n        description: \"Freshly baked bread, delicious.\", \r\n        value: 40,\r\n        effects: [{effect: \"Basic meal\", duration: 150}],\r\n    });\r\n\r\n    item_templates[\"Carrot\"] = new UsableItem({\r\n        name: \"Carrot\", description: \"A delicious root that can be eaten raw.\", \r\n        value: 20,\r\n        effects: [{effect: \"Basic meal\", duration: 10}],\r\n    });\r\n\r\n    item_templates[\"Cooked carrot\"] = new UsableItem({\r\n        name: \"Cooked carrot\", description: \"A delicious root, cooked.\",\r\n        value: 30,\r\n        effects: [{effect: \"Basic meal\", duration: 150}],\r\n    });\r\n\r\n    item_templates[\"Potato\"] = new UsableItem({\r\n        name: \"Potato\", description: \"A common tuber with versatile culinary usage. Just remember to cook it first.\", \r\n        value: 15,\r\n        effects: [{effect: \"Slight food poisoning\", duration: 20}],\r\n    });\r\n    item_templates[\"Cooked potato\"] = new UsableItem({\r\n        name: \"Potato\", description: \"A common tuber with versatile culinary usage, though this one was simply cooked.\", \r\n        value: 40,\r\n        effects: [{effect: \"Basic meal\", duration: 150}],\r\n    });\r\n\r\n    item_templates[\"Weak healing powder\"] = new UsableItem({\r\n        name: \"Weak healing powder\", \r\n        description: \"Not very potent, but can still make body heal noticeably faster for quite a while\", \r\n        value: 40,\r\n        effects: [{effect: \"Weak healing powder\", duration: 120}],\r\n        tags: {\"medicine\": true},\r\n    });\r\n\r\n    item_templates[\"Healing powder\"] = new UsableItem({\r\n        name: \"Healing powder\", \r\n        description: \"Not exactly powerful in its effects, but still makes the body heal noticeably faster and for a long time\",\r\n        value: 100,\r\n        effects: [{effect: \"Healing powder\", duration: 150}],\r\n        tags: {\"medicine\": true},\r\n    });\r\n\r\n    item_templates[\"Oneberry juice\"] = new UsableItem({\r\n        name: \"Oneberry juice\", \r\n        description: \"Tastes kinda nice and provides a quick burst of healing\", \r\n        value: 80,\r\n        effects: [{effect: \"Weak healing potion\", duration: 10}],\r\n        recovery_chances: {\"Glass phial\": 0.75},\r\n        tags: {\"medicine\": true},\r\n    });\r\n    item_templates[\"Healing potion\"] = new UsableItem({\r\n        name: \"Healing potion\", \r\n        description: \"Tastes nice at first but has a bitter aftertase. Povides a quick burst of healing\", \r\n        value: 200,\r\n        effects: [{effect: \"Healing potion\", duration: 10}],\r\n        recovery_chances: {\"Glass phial\": 0.75},\r\n        tags: {\"medicine\": true},\r\n    });\r\n    item_templates[\"Healing balm\"] = new UsableItem({\r\n        name: \"Healing balm\", \r\n        description: \"Simply apply it to your wound and watch it heal\", \r\n        value: 120,\r\n        effects: [{effect: \"Weak healing balm\", duration: 90}],\r\n        tags: {\"medicine\": true},\r\n    });\r\n\r\n    item_templates[\"Roasted rat meat\"] = new UsableItem({\r\n        name: \"Roasted rat meat\", \r\n        description: \"Smell might be fine now, but it still seems like a bad idea to eat it\",\r\n        value: 10,\r\n        effects: [{effect: \"Cheap meat meal\", duration: 45}, {effect: \"Slight food poisoning\", duration: 45}],\r\n    });\r\n\r\n    item_templates[\"Roasted purified rat meat\"] = new UsableItem({\r\n        name: \"Roasted purified rat meat\", \r\n        description: \"Smells alright and should be safe to eat, yet you still have some doubts\",\r\n        value: 20,\r\n        effects: [{effect: \"Cheap meat meal\", duration: 45}],\r\n    });\r\n\r\n    item_templates[\"Fried pork\"] = new UsableItem({\r\n        name: \"Fried pork\",\r\n        description: \"It's dripping with fat and smells fantastic, all it lacks is some spices and a good side dish.\",\r\n        value: 40,\r\n        effects: [{effect: \"Simple meat meal\", duration: 90}],\r\n    });\r\n\r\n    item_templates[\"Fried goat meat\"] = new UsableItem({\r\n        name: \"Fried goat meat\",\r\n        description: \"It has a nice aroma, but is a bit too tough. Perhaps a stew would have been a better choice.\",\r\n        value: 40,\r\n        effects: [{effect: \"Simple meat meal\", duration: 90}],\r\n    });\r\n\r\n})();\r\n\r\nObject.keys(item_templates).forEach(id => {\r\n    item_templates[id].id = id;\r\n})\r\n\r\nexport {\r\n    item_templates, \r\n    Item, OtherItem, UsableItem, \r\n    Armor, Shield, Weapon, Artifact, Book, \r\n    WeaponComponent, ArmorComponent, ShieldComponent,\r\n    getItem, getItemFromKey,\r\n    setLootSoldCount, recoverItemPrices, round_item_price, getArmorSlot, getEquipmentValue,\r\n    book_stats, loot_sold_count,\r\n    rarity_multipliers,\r\n    getItemRarity\r\n};", "\"use strict\";\r\n\r\nlet enemy_templates = {};\r\nlet enemy_killcount = {};\r\n//enemy templates; locations create new enemies based on them\r\n\r\nclass Enemy {\r\n    constructor({\r\n        name, \r\n        id,\r\n        description, \r\n        xp_value = 1, \r\n        stats, \r\n        rank,\r\n        loot_list = [], \r\n        size = \"small\",\r\n        add_to_bestiary = true,\r\n        tags = [],\r\n    }) {\r\n                    \r\n        this.name = name;\r\n        this.id = id || name;\r\n        this.rank = rank; //only for the bestiary order; higher rank => higher in display\r\n        this.description = description; //try to keep it short\r\n        this.xp_value = xp_value;\r\n        this.stats = stats;\r\n        //only magic & defense can be 0 in stats, other things will cause issues\r\n        this.stats.max_health = stats.health;\r\n        this.loot_list = loot_list;\r\n        this.tags = {};\r\n        for(let i = 0; i <tags.length; i++) {\r\n            this.tags[tags[i]] = true;\r\n        }\r\n        this.tags[size] = true;\r\n\r\n        this.add_to_bestiary = add_to_bestiary; //generally set it false only for SOME of challenges and keep true for everything else\r\n\r\n        if(size !== \"small\" && size !== \"medium\" && size !== \"large\") {\r\n            throw new Error(`No such enemy size option as \"${size}\"!`);\r\n        } else {\r\n            this.size = size;\r\n        }\r\n\r\n    }\r\n    get_loot() {\r\n        // goes through items and calculates drops\r\n        // result is in form [{item: Item, count: item_count}, {...}, {...}]\r\n        let loot = [];\r\n        let item;\r\n        \r\n        for (let i = 0; i < this.loot_list.length; i++) {\r\n            item = this.loot_list[i];\r\n            if (item.chance * this.get_droprate_modifier() >= Math.random()) {\r\n                // checks if it should drop\r\n                let item_count = 1;\r\n                if (\"count\" in item) {\r\n                    item_count = Math.round(Math.random() * (item[\"count\"][\"max\"] - item[\"count\"][\"min\"]) + item[\"count\"][\"min\"]);\r\n                    // calculates how much drops (from range min-max, both inclusive)\r\n                }\r\n                loot.push({item_id: item.item_name, \"count\": item_count });\r\n            }\r\n        }\r\n\r\n        return loot;\r\n    }\r\n\r\n    get_droprate_modifier() {\r\n        let droprate_modifier = 1;\r\n        /*\r\n        if(enemy_killcount[this.name] >= 999) {\r\n            droprate_modifier = 0.1;\r\n        } else if(enemy_killcount[this.name]) {\r\n            droprate_modifier = 111/(111+enemy_killcount[this.name]);\r\n        }\r\n        */\r\n        return droprate_modifier;\r\n    }\r\n}\r\n\r\n//regular enemies\r\n(function(){\r\n    /*\r\n    lore note:\r\n    wolf rats are semi-magical creatures that feed on natural magical energy; cave near the village, where they live, is filled up with it on lower levels, \r\n    providing them with a perfect environment;\r\n    rats on the surface are ones that were kicked out (because space is limited and they were weak), half starving and trying to quench their hunger by eating plants and stuff\r\n    \r\n\r\n    */\r\n    enemy_templates[\"Starving wolf rat\"] = new Enemy({\r\n        name: \"Starving wolf rat\",\r\n        description: \"Rat with size of a dog, starved and weakened\",\r\n        xp_value: 1,\r\n        rank: 1,\r\n        size: \"small\",\r\n        tags: [\"living\", \"beast\", \"wolf rat\"],\r\n        stats: {health: 20, attack: 4, agility: 5, dexterity: 4, magic: 0, intuition: 5, attack_speed: 0.8, defense: 1},\r\n        loot_list: [\r\n            {item_name: \"Rat tail\", chance: 0.04},\r\n            {item_name: \"Rat fang\", chance: 0.04},\r\n            {item_name: \"Rat pelt\", chance: 0.01}\r\n        ]\r\n    });\r\n\r\n    enemy_templates[\"Wolf rat\"] = new Enemy({\r\n        name: \"Wolf rat\",\r\n        description: \"Rat with size of a dog\",\r\n        xp_value: 1,\r\n        rank: 1,\r\n        size: \"small\",\r\n        tags: [\"living\", \"beast\", \"wolf rat\"],\r\n        stats: {health: 30, attack: 6, agility: 6, dexterity: 5, intuition: 6, magic: 0, attack_speed: 1, defense: 2},\r\n        loot_list: [\r\n            {item_name: \"Rat tail\", chance: 0.04},\r\n            {item_name: \"Rat fang\", chance: 0.04},\r\n            {item_name: \"Rat pelt\", chance: 0.01},\r\n        ]\r\n    });\r\n    enemy_templates[\"Elite wolf rat\"] = new Enemy({\r\n        name: \"Elite wolf rat\",\r\n        description: \"Rat with size of a dog, much more ferocious than its relatives\",\r\n        xp_value: 4,\r\n        rank: 1,\r\n        size: \"small\",\r\n        tags: [\"living\", \"beast\", \"wolf rat\"],\r\n        stats: {health: 80, attack: 32, agility: 30, dexterity: 24, intuition: 24, magic: 0, attack_speed: 1.5, defense: 8},\r\n        loot_list: [\r\n            {item_name: \"Rat tail\", chance: 0.04},\r\n            {item_name: \"Rat fang\", chance: 0.04},\r\n            {item_name: \"Rat pelt\", chance: 0.02},\r\n        ]\r\n    });\r\n    enemy_templates[\"Elite wolf rat guardian\"] = new Enemy({\r\n        name: \"Elite wolf rat guardian\",\r\n        description: \"It's no longer dog-sized, but rather around the size of an average wolf, with thicker skin, longer claws and pure insanity in the eyes\",\r\n        xp_value: 10,\r\n        rank: 4,\r\n        size: \"medium\",\r\n        tags: [\"living\", \"beast\", \"wolf rat\", \"monster\"],\r\n        stats: {health: 250, attack: 50, agility: 40, dexterity: 40, intuition: 50, magic: 0, attack_speed: 1.2, defense: 30},\r\n        loot_list: [\r\n            {item_name: \"Rat tail\", chance: 0.04},\r\n            {item_name: \"Rat fang\", chance: 0.04},\r\n            {item_name: \"Rat pelt\", chance: 0.02},\r\n            {item_name: \"Weak monster bone\", chance: 0.005},\r\n        ]\r\n    });\r\n    enemy_templates[\"Wall rat\"] = new Enemy({\r\n        name: \"Wall rat\",\r\n        description: \"They don't live in the walls, they ARE the walls. Insane writhing masses of teeth, fangs, and tails, that make no logical sense. An abomination that cannot exist, and yet it does.\",\r\n        xp_value: 20,\r\n        rank: 6,\r\n        size: \"large\",\r\n        tags: [\"living\", \"beast\", \"wolf rat\", \"monster\", \"eldritch\"],\r\n        stats: {health: 1000, attack: 70, agility: 20, dexterity: 90, intuition: 90, magic: 0, attack_speed: 2, attack_count: 3, defense: 20},\r\n        loot_list: [\r\n            {item_name: \"Rat tail\", chance: 0.08},\r\n            {item_name: \"Rat fang\", chance: 0.08},\r\n        ]\r\n    });\r\n\r\n    enemy_templates[\"Starving wolf\"] = new Enemy({\r\n        name: \"Starving wolf\", description: \"A big, wild and hungry canine\", \r\n        xp_value: 3,\r\n        rank: 2,\r\n        tags: [\"living\", \"beast\"],\r\n        stats: {health: 150, attack: 22, agility: 34, dexterity: 34, intuition: 32, magic: 0, attack_speed: 1, defense: 12},\r\n        loot_list: [\r\n            {item_name: \"Wolf fang\", chance: 0.03},\r\n            {item_name: \"Wolf pelt\", chance: 0.01},\r\n        ],\r\n        size: \"medium\",\r\n    });\r\n\r\n    enemy_templates[\"Young wolf\"] = new Enemy({\r\n        name: \"Young wolf\",\r\n        description: \"A small, wild canine\",\r\n        xp_value: 3,\r\n        rank: 2,\r\n        tags: [\"living\", \"beast\"],\r\n        stats: {health: 120, attack: 25, agility: 34, dexterity: 30, intuition: 24, magic: 0, attack_speed: 1.4, defense: 6},\r\n        loot_list: [\r\n            {item_name: \"Wolf fang\", chance: 0.03},\r\n            {item_name: \"Wolf pelt\", chance: 0.01},\r\n        ],\r\n        size: \"small\",\r\n    });\r\n\r\n    enemy_templates[\"Wolf\"] = new Enemy({\r\n        name: \"Wolf\",\r\n        description: \"A large, wild canine\",\r\n        xp_value: 4,\r\n        rank: 3,\r\n        tags: [\"living\", \"beast\"],\r\n        stats: {health: 200, attack: 32, agility: 42, dexterity: 42, intuition: 32, magic: 0, attack_speed: 1.3, defense: 20},\r\n        loot_list: [\r\n            {item_name: \"Wolf fang\", chance: 0.04},\r\n            {item_name: \"Wolf pelt\", chance: 0.02},\r\n            {item_name: \"High quality wolf fang\", chance: 0.0005}\r\n        ],\r\n        size: \"medium\"\r\n    });\r\n\r\n    enemy_templates[\"Boar\"] = new Enemy({\r\n        name: \"Boar\",\r\n        description: \"A big wild creature, with thick skin and large tusks\",\r\n        xp_value: 8,\r\n        rank: 4,\r\n        tags: [\"living\", \"beast\"],\r\n        stats: {health: 300, attack: 50, agility: 30, dexterity: 40, intuition: 40, magic: 0, attack_speed: 1, defense: 25},\r\n        loot_list: [\r\n            {item_name: \"Boar hide\", chance: 0.04},\r\n            {item_name: \"Boar meat\", chance: 0.02},\r\n            {item_name: \"Boar tusk\", chance: 0.02},\r\n            {item_name: \"High quality boar tusk\", chance: 0.0005},\r\n        ],\r\n        size: \"medium\"\r\n    });\r\n\r\n    enemy_templates[\"Angry mountain goat\"] = new Enemy({\r\n        name: \"Angry mountain goat\",\r\n        description: \"It's a mountain goat and it's angry\",\r\n        xp_value: 15,\r\n        rank: 6,\r\n        tags: [\"living\", \"beast\"],\r\n        size: \"medium\",\r\n        stats: {health: 600, attack: 120, agility: 100, dexterity: 60, magic: 0, intuition: 60, attack_speed: 0.5, defense: 30},\r\n        loot_list: [\r\n            {item_name: \"Mountain goat hide\", chance: 0.04},\r\n            {item_name: \"Goat meat\", chance: 0.02},\r\n            {item_name: \"Mountain goat horn\", chance: 0.02},\r\n            {item_name: \"Pristine mountain goat horn\", chance: 0.0005},\r\n        ],\r\n    });\r\n\r\n    enemy_templates[\"Slums thug\"] = new Enemy({\r\n        name: \"Slums thug\",\r\n        description: \"A nasty thug with shabby equipment\",\r\n        xp_value: 10,\r\n        rank: 5,\r\n        tags: [\"living\", \"human\"],\r\n        size: \"medium\",\r\n        stats: {health: 500, attack: 60, agility: 60, dexterity: 60, magic: 0, intuition: 60, attack_speed: 1.7, defense: 25},\r\n    });\r\n})();\r\n\r\n\r\n//challenge enemies\r\n(function(){\r\n    enemy_templates[\"Village guard (heavy)\"] = new Enemy({\r\n        name: \"Village guard (heavy)\", \r\n        description: \"\", \r\n        add_to_bestiary: false,\r\n        xp_value: 1,\r\n        rank: 4,\r\n        tags: [\"living\", \"human\"],\r\n        size: \"medium\",\r\n        stats: {health: 300, attack: 50, agility: 20, dexterity: 80, magic: 0, intuition: 20, attack_speed: 0.2, defense: 30},\r\n    });\r\n    enemy_templates[\"Village guard (quick)\"] = new Enemy({\r\n        name: \"Village guard (quick)\", \r\n        description: \"\", \r\n        add_to_bestiary: false,\r\n        xp_value: 1,\r\n        rank: 4,\r\n        tags: [\"living\", \"human\"],\r\n        size: \"medium\",\r\n        stats: {health: 300, attack: 20, agility: 20, dexterity: 50, magic: 0, intuition: 20, attack_speed: 2, defense: 10},\r\n    });\r\n    enemy_templates[\"Suspicious wall\"] = new Enemy({\r\n        name: \"Suspicious wall\", \r\n        description: \"\", \r\n        add_to_bestiary: false,\r\n        xp_value: 1,\r\n        rank: 1,\r\n        tags: [\"unanimate\"],\r\n        size: \"large\",\r\n        stats: {health: 10000, attack: 0, agility: 0, dexterity: 0, magic: 0, intuition: 0, attack_speed: 0.000001, defense: 100},\r\n    });\r\n\r\n    enemy_templates[\"Suspicious man\"] = new Enemy({\r\n        name: \"Suspicious man\", \r\n        description: \"\", \r\n        add_to_bestiary: false,\r\n        xp_value: 1,\r\n        rank: 5,\r\n        tags: [\"living\", \"human\"],\r\n        size: \"medium\",\r\n        stats: {health: 400, attack: 60, agility: 60, dexterity: 60, magic: 0, intuition: 60, attack_speed: 2, defense: 30},\r\n    });\r\n\r\n    enemy_templates[\"Angry-looking mountain goat\"] = new Enemy({\r\n        name: \"Angry-looking mountain goat\", \r\n        description: \"It's a mountain goat and it's angry\", \r\n        add_to_bestiary: false,\r\n        xp_value: 1,\r\n        rank: 6,\r\n        tags: [\"living\", \"beast\"],\r\n        size: \"medium\",\r\n        stats: {health: 1200, attack: 150, agility: 100, dexterity: 70, magic: 0, intuition: 60, attack_speed: 0.5, defense: 30},\r\n    });\r\n})()\r\n\r\nexport {Enemy, enemy_templates, enemy_killcount};", "\"use strict\";\r\n\r\nimport { getItem, getItemFromKey, item_templates } from \"./items.js\";\r\n\r\n//extended by character and traders, as their inventories are supposed to work the same way\r\nclass InventoryHaver {\r\n    \r\n    constructor() {\r\n        this.inventory = {}; //currently items are stored separately and are re-added on load\r\n    }\r\n\r\n    /**\r\n     * @description adds items from the list to inventory; don't use this method directly, there are other methods that call this one and take care of display\r\n     * @param {Array} items - [{item_key, count, item_id (if no key), quality (optional if no key)},...]\r\n     */\r\n    add_to_inventory(items) {\r\n        let anything_new = false;\r\n        \r\n        for(let i = 0; i < items.length; i++){\r\n            let item_key;\r\n            if(items[i].item_key){\r\n                item_key = items[i].item_key;\r\n            } else {\r\n                //this part is so stupid (recreating item just to grab it's key)\r\n                //but at least it wont break if code for creating inventory keys changes\r\n                let item;\r\n                if(items[i].quality) {\r\n                    item = getItem({...item_templates[items[i].item_id], quality:items[i].quality});\r\n                } else {\r\n                    item = getItem({...item_templates[items[i].item_id]});\r\n                }\r\n                item_key = item.getInventoryKey();\r\n            } \r\n\r\n            if(!(item_key in this.inventory)) {//not in inventory\r\n                if(!items[i].count) {\r\n                    items[i].count = 1;\r\n                }\r\n                const item = getItemFromKey(item_key);\r\n                this.inventory[item_key] = {item, count: items[i].count};\r\n                anything_new = true;\r\n            } else { //in inventory\r\n                if(items[i].count === undefined) {\r\n                    this.inventory[item_key].count += 1;\r\n                } else if(typeof items[i].count === \"number\" && !isNaN(items[i].count)){\r\n                    this.inventory[item_key].count += items[i].count;\r\n                } else {\r\n                    throw new TypeError(`Tried to add \"${items[i].count}\" items, which is not a valid number!`);\r\n                }\r\n            }\r\n        }\r\n        return anything_new;\r\n    }\r\n\r\n    /**\r\n     * @description removes specified items (array of {item_key, count}) from the inventory; don't use this method directly, there are other methods that call this one and take care of display\r\n     * @param {Array} items [{item_key, item_count}]\r\n     **/\r\n    remove_from_inventory(items) {\r\n        for(let i = 0; i < items.length; i++){       \r\n            if(items[i].item_key in this.inventory) { //check if its in inventory, just in case, probably not needed\r\n\r\n                if(typeof items[i].item_count === \"number\" && Number.isInteger(items[i].item_count) && items[i].item_count >= 1)  {\r\n                    this.inventory[items[i].item_key].count -= items[i].item_count;\r\n                }  else {\r\n                    this.inventory[items[i].item_key].count -= 1; //remove one if count was not passed\r\n                }\r\n    \r\n                if(this.inventory[items[i].item_key].count == 0) {\r\n                    delete this.inventory[items[i].item_key]; \r\n                    //removes item from inventory if it's county is 0\r\n                } else if(this.inventory[items[i].item_key].count < 0 || isNaN(this.inventory[items[i].item_key].count)) {\r\n                    throw new Error(`Item count for key \"${items[i].item_key}\" reached an illegal value of \"${this.inventory[items[i].item_key].count}\"`);\r\n                }\r\n                \r\n            } else { \r\n                    throw new Error(\"Tried to remove item that was not present in inventory\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {InventoryHaver};", "\"use strict\";\r\n\r\nimport { get_total_level_bonus } from \"./character.js\";\r\nimport { current_game_time } from \"./game_time.js\";\r\nimport { InventoryHaver } from \"./inventory.js\";\r\nimport { item_templates, getItem} from \"./items.js\";\r\n\r\nconst traders = {};\r\nconst inventory_templates = {};\r\n\r\n\r\nclass Trader extends InventoryHaver {\r\n    constructor({\r\n                name,\r\n                display_name,\r\n                trade_text,\r\n                location_name,\r\n                refresh_time = 4,\r\n                refresh_shift = 0,\r\n                inventory_template,\r\n                profit_margin = 2,\r\n                is_unlocked = true,\r\n            }) \r\n    {\r\n        super();\r\n        this.name = name;\r\n        this.display_name = display_name || name;\r\n        this.trade_text = trade_text || `Trade with ${this.display_name}`;\r\n        this.location_name = location_name;\r\n        this.last_refresh = -1;  \r\n        //just the day_count from game_time at which trader was supposedly last refreshed\r\n\r\n        this.refresh_time = refresh_time; \r\n        //7 would mean it's refreshed every 7 days (with shift at 0 it's every monday)\r\n        \r\n        this.refresh_shift = refresh_shift; \r\n        //shift refreshing days, e.g. time 7 + shift 2 would be every wednesday, shift 4 would push it to every friday\r\n        //pretty much pointless if refresh time is not N*7\r\n        \r\n        this.inventory_template = inventory_template;\r\n        //a template for the trader to use, so multiple traders can have same predefined item selection (but still separate and with certain randomness)\r\n\r\n        this.profit_margin = profit_margin;\r\n        //how much more expensive are the trader's items than their actual value, with default being 2 (so 2x more)\r\n        //don't make it too low to prevent easy xp grinding for the haggling skill\r\n        this.is_unlocked = is_unlocked;\r\n\r\n        this.is_finished = false; \r\n        //for permalocking a trader; named like this for consistency with other things that can get locked; only for some fringe situations (e.g. swapping some trader for a better one instead of simply unlocking another)\r\n    }\r\n    \r\n    /**\r\n     * refreshes trader inventory\r\n     * @returns boolean informing if it was able to refresh\r\n     */\r\n    refresh() {\r\n        if (this.can_refresh()) {\r\n            //refresh inventory\r\n            this.inventory = this.get_inventory_from_template();\r\n\r\n            this.last_refresh = (current_game_time.day_count + 1 - current_game_time.day_count % this.refresh_time);\r\n            return true;\r\n        }\r\n        //otherwise do nothing\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * checks if enough time passed since last refresh\r\n     * @returns {Boolean}\r\n     */\r\n    can_refresh() {\r\n        return (this.last_refresh < 0 || current_game_time.day_count - (this.last_refresh + this.refresh_shift) >= this.refresh_time);\r\n    }\r\n\r\n    /**\r\n     * creates new choice of items for the trader, based on assigned inventory template\r\n     * @returns {null}\r\n     */\r\n    get_inventory_from_template() {\r\n        const inventory = {};\r\n        const inventory_template = inventory_templates[this.inventory_template];\r\n\r\n        for (let i = 0; i < inventory_template.length; i++) {\r\n            if (inventory_template[i].chance >= Math.random()) {\r\n                let item_count = inventory_template[i].count.length == 1 ?\r\n                inventory_template[i].count[0] : Math.round(Math.random() *\r\n                    (inventory_template[i].count[1] - inventory_template[i].count[0]) + inventory_template[i].count[0]);\r\n                \r\n                if(inventory_template[i].quality) {\r\n                    let quality = Math.round(Math.random() *\r\n                        (inventory_template[i].quality[1] - inventory_template[i].quality[0]) + inventory_template[i].quality[0]);\r\n\r\n                    const item = getItem({...item_templates[inventory_template[i].item_name], quality});\r\n                    inventory[item.getInventoryKey()] = { item: item, count: item_count };\r\n                } else {\r\n                    inventory[item_templates[inventory_template[i].item_name].getInventoryKey()] = { item: getItem(item_templates[inventory_template[i].item_name]), count: item_count }; \r\n                }\r\n            }\r\n        }\r\n\r\n        //just add items based on their chances and counts in inventory_template\r\n        return inventory;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {Number} trader's profit margin multiplied by bonus from the haggling skill\r\n     */\r\n    getProfitMargin() {\r\n        return 1 + (this.profit_margin - 1) * (1 - get_total_level_bonus(\"Haggling\"));\r\n    }\r\n\r\n    getItemPrice(value) {\r\n        let price = Math.ceil(value*this.getProfitMargin());\r\n        if(price >= 100) {\r\n            return Math.round(price/10)*10;\r\n        } else if(price >= 1000) {\r\n            return Math.round(price/100)*100;\r\n        } else {\r\n            return price;\r\n        }\r\n    }\r\n}\r\n\r\nclass TradeItem {\r\n    constructor({ item_name,\r\n                  chance = 1,\r\n                  count = [1],\r\n                  quality = [20, 80]\r\n                }) \r\n    {\r\n        this.item_name = item_name;\r\n        this.chance = chance; //chance for item to appear, 1 is 100%\r\n        this.count = count; \r\n        //how many can appear, will randomly choose something between min and max if specificed, otherwise will go with specific ammount\r\n        \r\n        this.quality = quality; //min and max quality of item\r\n    }\r\n}\r\n\r\n//create traders\r\n(function(){\r\n    traders[\"village trader\"] = new Trader({\r\n        name: \"village trader\",\r\n        inventory_template: \"Basic\",\r\n        is_unlocked: false,\r\n        location_name: \"Village\",\r\n    });\r\n    traders[\"suspicious trader\"] = new Trader({\r\n        name: \"suspicious trader\",\r\n        inventory_template: \"Basic plus\",\r\n        is_unlocked: true,\r\n        location_name: \"Slums\",\r\n        profit_margin: 3,\r\n    });\r\n    traders[\"suspicious trader 2\"] = new Trader({\r\n        name: \"suspicious trader 2\",\r\n        display_name: \"suspicious trader\",\r\n        inventory_template: \"Intermediate\",\r\n        is_unlocked: false,\r\n        location_name: \"Slums\",\r\n        profit_margin: 2.8, //rise back to 3 once reputation is implemented\r\n    });\r\n})();\r\n\r\n//create inventory templates\r\n(function(){\r\n    inventory_templates[\"Basic\"] = \r\n    [\r\n            new TradeItem({item_name: \"Cheap iron spear\", count: [1], quality: [40, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Cheap iron dagger\", count: [1], quality: [40, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Cheap iron sword\", count: [1], quality: [40, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Cheap iron axe\", count: [1], quality: [40, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Cheap iron battle hammer\", count: [1], quality: [40, 90], chance: 0.8}),\r\n\r\n            new TradeItem({item_name: \"Cheap iron spear\", count: [1], quality: [91, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Cheap iron dagger\", count: [1], quality: [91, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Cheap iron sword\", count: [1], quality: [91, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Cheap iron axe\", count: [1], quality: [91, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Cheap iron battle hammer\", count: [1], quality: [91, 120], chance: 0.4}),\r\n\r\n            new TradeItem({item_name: \"Cheap wooden shield\", count: [1], quality: [40, 90]}),\r\n            new TradeItem({item_name: \"Cheap wooden shield\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Crude wooden shield\", count: [1], chance: 0.7, quality: [40, 90]}),\r\n            new TradeItem({item_name: \"Crude wooden shield\", count: [1], chance: 0.4, quality: [91, 120]}),\r\n\r\n            new TradeItem({item_name: \"Cheap leather vest\", count: [1], quality: [40, 90]}),\r\n            new TradeItem({item_name: \"Cheap leather vest\", count: [1], chance: 0.5, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Cheap leather pants\", count: [1], quality: [40, 90]}),\r\n            new TradeItem({item_name: \"Cheap leather pants\", count: [1], chance: 0.5, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Cheap leather hat\", count: [1], quality: [40, 90]}),\r\n            new TradeItem({item_name: \"Cheap leather hat\", count: [1], chance: 0.5, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Cheap leather shoes\", count: [1], chance: 0.5, quality: [91, 120]}),\r\n\r\n            new TradeItem({item_name: \"Leather shoes\", count: [1], chance: 0.4, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Leather vest\", count: [1], chance: 0.7, quality: [70, 120]}),\r\n            new TradeItem({item_name: \"Leather pants\", count: [1], chance: 0.7, quality: [70, 120]}),\r\n            new TradeItem({item_name: \"Leather hat\", count: [1], chance: 0.7, quality: [70, 120]}),\r\n            new TradeItem({item_name: \"Leather gloves\", count: [1], chance: 0.7, quality: [70, 120]}),\r\n\r\n\r\n            new TradeItem({item_name: \"Wolf leather armor\", count: [1], chance: 0.3, quality: [60, 120]}),\r\n            new TradeItem({item_name: \"Wolf leather armored pants\", count: [1], chance: 0.3, quality: [60, 120]}),\r\n            new TradeItem({item_name: \"Wolf leather helmet\", count: [1], chance: 0.3, quality: [60, 120]}),\r\n\r\n            new TradeItem({item_name: \"Stale bread\", count: [4,10]}),\r\n            new TradeItem({item_name: \"Fresh bread\", count: [2,5]}),\r\n            new TradeItem({item_name: \"Weak healing powder\", count: [2,5]}),\r\n\r\n            new TradeItem({item_name: \"ABC for kids\", count: [1], chance: 1}),\r\n            new TradeItem({item_name: \"Old combat manual\", count: [1], chance: 0.5}),\r\n            new TradeItem({item_name: \"Butchering and you\", count: [1], chance: 0.2}),\r\n            new TradeItem({item_name: \"Medicine for dummies\", count: [1], chance: 0.2}),\r\n            \r\n            new TradeItem({item_name: \"Glass phial\", count: [5,10], chance: 1}),\r\n\r\n            new TradeItem({item_name: \"Camping supplies\", count: [1], chance: 1}),\r\n            new TradeItem({item_name: \"Coil of rope\", count: [1], chance: 1}),\r\n    ];\r\n\r\n    inventory_templates[\"Basic plus\"] = \r\n    [\r\n            new TradeItem({item_name: \"Iron spear\", count: [1], quality: [70, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron dagger\", count: [1], quality: [70, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron sword\", count: [1], quality: [70, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron axe\", count: [1], quality: [70, 90], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron battle hammer\", count: [1], quality: [40, 80], chance: 0.8}),\r\n\r\n            new TradeItem({item_name: \"Iron spear\", count: [1], quality: [81, 120], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron dagger\", count: [1], quality: [81, 120], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron sword\", count: [1], quality: [81, 120], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron axe\", count: [1], quality: [81, 120], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron battle hammer\", count: [1], quality: [81, 120], chance: 0.8}),\r\n\r\n            new TradeItem({item_name: \"Steel spear\", count: [1], quality: [70, 100], chance: 0.6}),\r\n            new TradeItem({item_name: \"Steel dagger\", count: [1], quality: [70, 100], chance: 0.6}),\r\n            new TradeItem({item_name: \"Steel sword\", count: [1], quality: [70, 100], chance: 0.6}),\r\n            new TradeItem({item_name: \"Steel axe\", count: [1], quality: [70, 100], chance: 0.6}),\r\n            new TradeItem({item_name: \"Steel battle hammer\", count: [1], quality: [70, 100], chance: 0.6}),\r\n            \r\n            new TradeItem({item_name: \"Steel spear\", count: [1], quality: [81, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Steel dagger\", count: [1], quality: [81, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Steel sword\", count: [1], quality: [81, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Steel axe\", count: [1], quality: [81, 120], chance: 0.4}),\r\n            new TradeItem({item_name: \"Steel battle hammer\", count: [1], quality: [81, 120], chance: 0.4}),\r\n\r\n            new TradeItem({item_name: \"Wooden shield\", count: [1], quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Wooden shield\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Crude iron shield\", count: [1], quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Crude iron shield\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Iron shield\", count: [1], chance: 0.6, quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Iron shield\", count: [1], chance: 0.4, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Steel shield\", count: [1], chance: 0.3, quality: [81, 100]}),\r\n            new TradeItem({item_name: \"Ash wood shield\", count: [1], chance: 0.3, quality: [81, 100]}),\r\n\r\n            new TradeItem({item_name: \"Leather vest\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Leather pants\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Leather hat\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Leather shoes\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Leather gloves\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n\r\n            new TradeItem({item_name: \"Wolf leather armor\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Wolf leather armored pants\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n            new TradeItem({item_name: \"Wolf leather helmet\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n            \r\n            new TradeItem({item_name: \"Iron chainmail armor\", count: [1], chance: 0.8, quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Iron chainmail armor\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Iron chainmail pants\", count: [1], chance: 0.8, quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Iron chainmail pants\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n            new TradeItem({item_name: \"Iron chainmail helmet\", count: [1], chance: 0.8, quality: [40, 80]}),\r\n            new TradeItem({item_name: \"Iron chainmail helmet\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n            \r\n            new TradeItem({item_name: \"Stale bread\", count: [4,10]}),\r\n            new TradeItem({item_name: \"Fresh bread\", count: [2,5]}),\r\n            new TradeItem({item_name: \"Weak healing powder\", count: [2,5]}),\r\n            new TradeItem({item_name: \"Oneberry juice\", count: [2,5]}),\r\n\r\n            new TradeItem({item_name: \"Twist liek a snek\", count: [1], chance: 0.8}),\r\n            new TradeItem({item_name: \"Butchering and you\", count: [1], chance: 0.6}),\r\n            new TradeItem({item_name: \"Medicine for dummies\", count: [1], chance: 0.6}),\r\n\r\n            new TradeItem({item_name: \"Glass phial\", count: [5,10], chance: 1}),\r\n\r\n            new TradeItem({item_name: \"Camping supplies\", count: [1], chance: 1}),\r\n            new TradeItem({item_name: \"Coil of rope\", count: [1], chance: 1}),\r\n\r\n            new TradeItem({item_name: \"Iron sickle\", count: [1], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron pickaxe\", count: [1], chance: 0.8}),\r\n            new TradeItem({item_name: \"Iron chopping axe\", count: [1], chance: 0.8}),\r\n            \r\n    ];\r\n\r\n    inventory_templates[\"Intermediate\"] = \r\n    [\r\n        new TradeItem({item_name: \"Iron spear\", count: [1], quality: [100, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Iron dagger\", count: [1], quality: [100, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Iron sword\", count: [1], quality: [100, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Iron axe\", count: [1], quality: [100, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Iron battle hammer\", count: [1], quality: [100, 120], chance: 0.8}),\r\n\r\n        new TradeItem({item_name: \"Steel spear\", count: [1], quality: [80, 100], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel dagger\", count: [1], quality: [80, 100], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel sword\", count: [1], quality: [80, 100], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel axe\", count: [1], quality: [80, 100], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel battle hammer\", count: [1], quality: [80, 100], chance: 0.8}),\r\n\r\n        new TradeItem({item_name: \"Steel spear\", count: [1], quality: [81, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel dagger\", count: [1], quality: [81, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel sword\", count: [1], quality: [81, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel axe\", count: [1], quality: [81, 120], chance: 0.8}),\r\n        new TradeItem({item_name: \"Steel battle hammer\", count: [1], quality: [81, 120], chance: 0.8}),\r\n\r\n        new TradeItem({item_name: \"Wooden shield\", count: [1], quality: [40, 80]}),\r\n        new TradeItem({item_name: \"Wooden shield\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Crude iron shield\", count: [1], quality: [40, 80]}),\r\n        new TradeItem({item_name: \"Crude iron shield\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Iron shield\", count: [1], chance: 0.6, quality: [40, 80]}),\r\n        new TradeItem({item_name: \"Iron shield\", count: [1], chance: 0.4, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Steel shield\", count: [1], chance: 0.4, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Ash wood shield\", count: [1], chance: 0.4, quality: [81, 120]}),\r\n\r\n        new TradeItem({item_name: \"Leather vest\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Leather pants\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Leather hat\", count: [1], chance: 0.9, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Leather shoes\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n        new TradeItem({item_name: \"Leather gloves\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n\r\n        new TradeItem({item_name: \"Goat leather vest\", count: [1], chance: 0.5, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Goat leather pants\", count: [1], chance: 0.5, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Goat leather hat\", count: [1], chance: 0.5, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Goat leather shoes\", count: [1], chance: 0.5, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Goat leather gloves\", count: [1], chance: 0.5, quality: [81, 120]}),\r\n\r\n        new TradeItem({item_name: \"Wolf leather armor\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n        new TradeItem({item_name: \"Wolf leather armored pants\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n        new TradeItem({item_name: \"Wolf leather helmet\", count: [1], chance: 0.8, quality: [91, 120]}),\r\n        \r\n        new TradeItem({item_name: \"Iron chainmail armor\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Iron chainmail pants\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Iron chainmail helmet\", count: [1], chance: 0.8, quality: [81, 120]}),\r\n\r\n        new TradeItem({item_name: \"Steel chainmail armor\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Steel chainmail pants\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n        new TradeItem({item_name: \"Steel chainmail helmet\", count: [1], chance: 0.6, quality: [81, 120]}),\r\n        \r\n        \r\n        new TradeItem({item_name: \"Fresh bread\", count: [4,10]}),\r\n        new TradeItem({item_name: \"Weak healing powder\", count: [2,5]}),\r\n        new TradeItem({item_name: \"Oneberry juice\", count: [2,5]}),\r\n        new TradeItem({item_name: \"Healing powder\", count: [2,5]}),\r\n        new TradeItem({item_name: \"Healing potion\", count: [2,5]}),\r\n\r\n        new TradeItem({item_name: \"Twist liek a snek\", count: [1], chance: 1}),\r\n        new TradeItem({item_name: \"Butchering and you\", count: [1], chance: 1}),\r\n        new TradeItem({item_name: \"Medicine for dummies\", count: [1], chance: 1}),\r\n\r\n        new TradeItem({item_name: \"Glass phial\", count: [10,16], chance: 1}),\r\n\r\n        new TradeItem({item_name: \"Camping supplies\", count: [1], chance: 1}),\r\n        new TradeItem({item_name: \"Coil of rope\", count: [1], chance: 1}),\r\n\r\n        new TradeItem({item_name: \"Iron sickle\", count: [1], chance: 1}),\r\n        new TradeItem({item_name: \"Iron pickaxe\", count: [1], chance: 1}),\r\n        new TradeItem({item_name: \"Iron chopping axe\", count: [1], chance: 1}),\r\n    ];\r\n})();\r\nexport {traders};", "\"use strict\";\r\n\r\nimport { traders } from \"./traders.js\";\r\nimport { \r\n    update_displayed_trader, update_displayed_trader_inventory, update_displayed_character_inventory, exit_displayed_trade, update_displayed_money } from \"./display.js\";\r\nimport { add_to_character_inventory, remove_from_character_inventory } from \"./character.js\";\r\nimport { skills } from \"./skills.js\";\r\nimport { getEquipmentValue, item_templates, loot_sold_count } from \"./items.js\";\r\nimport { character } from \"./character.js\";\r\nimport { add_xp_to_skill } from \"./main.js\";\r\nimport { round_item_price } from \"./misc.js\";\r\n\r\nlet current_trader = null;\r\nconst to_sell = {value: 0, items: []};\r\nconst to_buy = {value: 0, items: []};\r\n\r\nfunction set_current_trader(trader_key) {\r\n    current_trader = trader_key;\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} trader_key \r\n */\r\nfunction start_trade(trader_key) {\r\n    traders[trader_key].refresh();\r\n    current_trader = trader_key;\r\n    \r\n    update_displayed_trader(true);\r\n}\r\n\r\nfunction cancel_trade() {\r\n\r\n    to_buy.items = [];\r\n    to_buy.value = 0;\r\n    to_sell.items = [];\r\n    to_sell.value = 0;\r\n\r\n    update_displayed_character_inventory();\r\n    update_displayed_trader_inventory();\r\n}\r\n\r\nfunction accept_trade() {\r\n\r\n    let new_balance;\r\n    \r\n    if(to_sell.items.length == 0 && to_buy.items.length == 0) {\r\n        new_balance = character.money;\r\n    }\r\n    else {\r\n        new_balance = character.money + to_sell.value - to_buy.value;\r\n    }\r\n\r\n    if(new_balance < 0) { //button shouldn't be clickable if trade is not affordable, so this is just in case\r\n        throw new Error(\"Trying to make a trade that can't be afforded\");\r\n    } else {\r\n\r\n        character.money = new_balance;\r\n\r\n        let item_list = [];\r\n        let to_remove = [];\r\n        while(to_buy.items.length > 0) {\r\n            //add to character inventory\r\n            //remove from trader inventory\r\n\r\n            const item = to_buy.items.pop();\r\n            \r\n            item.item_count = item.count;\r\n            to_remove.push(item);\r\n\r\n            item_list.push({item_key: item.item_key, count: item.count});\r\n        }\r\n        \r\n        if(to_remove.length > 0) {\r\n            add_to_character_inventory(item_list);\r\n            remove_from_trader_inventory(current_trader,to_remove);\r\n\r\n            for(let i = 0; i < item_list.length; i++) {\r\n                update_displayed_character_inventory({item_key: item_list[i].item_key});\r\n            }\r\n        }\r\n        \r\n\r\n        item_list = []; //totally could reduce it to 1 array instead of 2 if I made param naming more consistent, maybe one day\r\n        to_remove = [];\r\n\r\n        while(to_sell.items.length > 0) {\r\n            //remove from character inventory\r\n            //add to trader inventory\r\n            \r\n            const item = to_sell.items.pop();\r\n            \r\n            item.item_count = item.count;\r\n            to_remove.push(item);\r\n\r\n            item_list.push({item_key: item.item_key, count: item.count});\r\n        \r\n            const {id} = JSON.parse(item.item_key);\r\n            if(id && item_templates[id]?.saturates_market) {\r\n                if(!loot_sold_count[id]) {\r\n                    loot_sold_count[id] = {sold: 0, recovered: 0};\r\n                }\r\n                loot_sold_count[id].sold = loot_sold_count[id]?.sold + (item.count || 1);\r\n            }\r\n        }\r\n        \r\n        if(to_remove.length > 0) {\r\n            add_to_trader_inventory(current_trader,item_list);\r\n            remove_from_character_inventory(to_remove);\r\n\r\n            for(let i = 0; i < item_list.length; i++) {\r\n                update_displayed_trader_inventory({item_key: item_list[i].item_key});\r\n            }\r\n        }\r\n    }\r\n\r\n    add_xp_to_skill({skill: skills[\"Haggling\"], xp_to_add: (to_sell.value + to_buy.value)/10});\r\n\r\n    to_buy.value = 0;\r\n    to_sell.value = 0;\r\n\r\n    update_displayed_character_inventory();\r\n    update_displayed_trader_inventory();\r\n    update_displayed_money();\r\n}\r\n\r\nfunction exit_trade() {\r\n    current_trader = null;\r\n    to_buy.items = [];\r\n    to_buy.value = 0;\r\n    to_sell.items = [];\r\n    to_sell.value = 0;\r\n    exit_displayed_trade();\r\n    update_displayed_character_inventory();\r\n}\r\n\r\n/**\r\n * @param {} selected_item \r\n * {item_key: {string with value of data- attribute, which is supposed to be an inventory key}, count: Number}\r\n * @returns {Number} change of trade value\r\n */\r\nfunction add_to_buying_list(selected_item) {\r\n    const present_item = to_buy.items.find(a => a.item_key === selected_item.item_key);\r\n    \r\n    let item_count_in_trader = traders[current_trader].inventory[selected_item.item_key].count;\r\n\r\n    if(present_item) { //there's already some in inventory\r\n        if(item_count_in_trader - present_item.count < selected_item.count) {\r\n            //trying to buy more than trader has left, so just put all in the buy list\r\n            selected_item.count = item_count_in_trader - present_item.count;\r\n            present_item.count = item_count_in_trader;\r\n        } else {\r\n            present_item.count += selected_item.count;\r\n        }\r\n\r\n    } else { \r\n        if(item_count_in_trader < selected_item.count) { \r\n            //trader has not enough: buy all available\r\n            selected_item.count = item_count_in_trader;\r\n        }\r\n\r\n        to_buy.items.push(selected_item);\r\n    }\r\n\r\n    const value = get_item_value(selected_item, true);\r\n    to_buy.value += value;\r\n    return -value;\r\n}\r\n\r\n/**\r\n * @param {} selected_item \r\n * {item_key: {string with value of data- attribute}, count: Number}\r\n * @returns {Number} change of trade value\r\n */\r\nfunction remove_from_buying_list(selected_item) {\r\n\r\n    const present_item = to_buy.items.find(a => a.item_key === selected_item.item_key);\r\n    if(present_item?.count > selected_item.count) { //there's enough\r\n        present_item.count -= selected_item.count;\r\n    } else { //there's not enough, remove them all\r\n        selected_item.count = present_item.count;\r\n        to_buy.items.splice(to_buy.items.indexOf(present_item),1);\r\n    }\r\n\r\n    const value = get_item_value(selected_item, true);\r\n    to_buy.value -= value;\r\n    return value;\r\n}\r\n\r\nfunction is_in_trade() {\r\n    return Boolean(current_trader);\r\n}\r\n\r\nfunction add_to_selling_list(selected_item) {\r\n\r\n    const present_item = to_sell.items.find(a => a.item_key === selected_item.item_key);\r\n    //find if item is already present in the sell list\r\n    let item_count_in_player = character.inventory[selected_item.item_key].count;\r\n\r\n    if(present_item) {\r\n        //item present in the list -> increase its count, up to what player has in inventory\r\n\r\n        if(item_count_in_player - present_item.count < selected_item.count) {\r\n            //trying to sell more that remains in inventory, so just add everything\r\n            selected_item.count = item_count_in_player - present_item.count;\r\n            present_item.count = item_count_in_player;\r\n        } else {\r\n            present_item.count += selected_item.count;\r\n        }\r\n\r\n    } else { \r\n        if(item_count_in_player < selected_item.count) { \r\n            //character has not enough: sell all available\r\n            selected_item.count = item_count_in_player;\r\n        }\r\n\r\n        to_sell.items.push(selected_item);\r\n    }\r\n\r\n    let {id, components, quality} = JSON.parse(selected_item.item_key);\r\n    let value;\r\n\r\n    if(id && item_templates[id].saturates_market) {\r\n        value = item_templates[id].getValueOfMultiple({additional_count_of_sold: (present_item?.count - selected_item.count || 0), count: selected_item.count});\r\n    } else if(id && !item_templates[id].saturates_market) { \r\n        value = item_templates[id].getValue(quality) * selected_item.count;\r\n    } else {\r\n        value = getEquipmentValue(components, quality) * selected_item.count;\r\n    }\r\n    \r\n    to_sell.value += value;\r\n    return value;\r\n}\r\n\r\nfunction remove_from_selling_list(selected_item) {\r\n    let actual_number_to_remove = selected_item.count;\r\n\r\n    const present_item = to_sell.items.find(a => a.item_key === selected_item.item_key);\r\n    if(present_item?.count > selected_item.count) { //more than to remove\r\n        present_item.count -= selected_item.count;\r\n    } else { //less than to remove, so just remove all\r\n        actual_number_to_remove = present_item.count;\r\n        present_item.count = 0;\r\n        to_sell.items.splice(to_sell.items.indexOf(present_item), 1);\r\n    }\r\n\r\n    let {id, components, quality} = JSON.parse(selected_item.item_key);\r\n    let value;\r\n\r\n    if(id && item_templates[id].saturates_market) {\r\n        value = item_templates[id].getValueOfMultiple({additional_count_of_sold: (present_item?.count || 0), count: actual_number_to_remove});\r\n    } else if(id && !item_templates[id].saturates_market) { \r\n        value = item_templates[id].getValue(quality) * actual_number_to_remove;\r\n    } else {\r\n        value = getEquipmentValue(components, quality) * actual_number_to_remove;\r\n    }\r\n    \r\n    to_sell.value -= value;\r\n    return -value;\r\n\r\n}\r\n\r\nfunction add_to_trader_inventory(trader_key, items) {\r\n    traders[trader_key].add_to_inventory(items);\r\n\r\n    if(current_trader === trader_key) {\r\n        update_displayed_trader_inventory();\r\n    }\r\n}\r\n\r\nfunction remove_from_trader_inventory(trader_key, items) {\r\n    traders[trader_key].remove_from_inventory(items);\r\n    \r\n    if(current_trader === trader_key) {\r\n        update_displayed_trader_inventory();\r\n    }\r\n}\r\n\r\n/**\r\n * @description for buying only\r\n * @param {*} selected_item {item, count}\r\n * @param {Boolean} is_stackable\r\n * @returns total value of items, including character haggling skill and trader profit margin\r\n */\r\nfunction get_item_value(selected_item) {\r\n    const profit_margin = traders[current_trader].getProfitMargin();\r\n    const {id, components, quality} = JSON.parse(selected_item.item_key);\r\n\r\n    if(id) {\r\n        return round_item_price(profit_margin * item_templates[id].getValue(quality)) * selected_item.count;\r\n    } else {\r\n        return round_item_price(profit_margin * getEquipmentValue(components, quality));\r\n    }\r\n}\r\n\r\nexport {to_buy, to_sell, set_current_trader, current_trader, \r\n        start_trade, cancel_trade, accept_trade, exit_trade, \r\n        add_to_trader_inventory, remove_from_trader_inventory,\r\n        add_to_buying_list, remove_from_buying_list,\r\n        add_to_selling_list, remove_from_selling_list,\r\n        is_in_trade};", "\"use strict\";\r\n\r\nconst dialogues = {};\r\n\r\nclass Dialogue {\r\n    constructor({ \r\n        name, \r\n        id,\r\n        starting_text = `Talk to the ${name}`, \r\n        ending_text = `Go back`, \r\n        is_unlocked = true, \r\n        is_finished = false, \r\n        textlines = {}, \r\n        description = \"\",\r\n        getDescription = ()=>{return this.description;},\r\n        location_name\r\n    })  {\r\n        this.name = name; //displayed name, e.g. \"Village elder\"\r\n        this.id = id || this.name;\r\n        this.starting_text = starting_text;\r\n        this.ending_text = ending_text; //text shown on option to finish talking\r\n        this.is_unlocked = is_unlocked;\r\n        this.is_finished = is_finished; //separate bool to remove dialogue option if it's finished\r\n        this.textlines = textlines; //all the lines in dialogue\r\n        this.description = description;\r\n        this.getDescription = getDescription;\r\n\r\n        this.location_name = location_name; //this is purely informative and wrong value shouldn't cause any actual issues\r\n\r\n        Object.keys(this.textlines).forEach(textline_key => {\r\n            const textline = this.textlines[textline_key];\r\n            if(textline.locks_lines) {\r\n                if(!textline.rewards.locks.textlines[this.id]) {\r\n                    textline.rewards.locks.textlines[this.id] = [];\r\n                }\r\n                textline.rewards.locks.textlines[this.id].push(...textline.locks_lines);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass Textline {\r\n    constructor({name,\r\n                 text,\r\n                 getText,\r\n                 is_unlocked = true,\r\n                 is_finished = false,\r\n                 rewards = {textlines: [],\r\n                            locations: [],\r\n                            dialogues: [],\r\n                            traders: [],\r\n                            stances: [],\r\n                            flags: [],\r\n                            items: [],\r\n                            locks: {textlines: {}}, //for lines to be locked in diferent dialogues and possibly for other stuff\r\n                            },\r\n                locks_lines = [], //for lines to be locked in same dialogue\r\n                otherUnlocks,\r\n                required_flags,\r\n            }) \r\n    {\r\n        this.name = name; // displayed option to click, don't make it too long\r\n        this.text = text; // what's shown after clicking\r\n        this.getText = getText || function(){return this.text;};\r\n        this.otherUnlocks = otherUnlocks || function(){return;};\r\n        this.is_unlocked = is_unlocked;\r\n        this.is_finished = is_finished;\r\n        this.rewards = rewards || {};\r\n        \r\n        this.rewards.textlines = rewards.textlines || [];\r\n        this.rewards.locations = rewards.locations || [];\r\n        this.rewards.dialogues = rewards.dialogues || [];\r\n        this.rewards.traders = rewards.traders || [];\r\n        this.rewards.stances = rewards.stances || [];\r\n        this.rewards.flags = rewards.flags || [];\r\n        this.rewards.items = rewards.items || [];\r\n        \r\n        this.required_flags = required_flags;\r\n\r\n        this.locks_lines = locks_lines;\r\n\r\n        this.rewards.locks = rewards.locks || {};\r\n        if(!this.rewards.locks.textlines) {\r\n            this.rewards.locks.textlines = {};\r\n        }\r\n        //related text lines that get locked; might be itself, might be some previous line \r\n        //e.g. line finishing quest would also lock line like \"remind me what I was supposed to do\"\r\n        //should be alright if it's limited only to lines in same Dialogue\r\n        //just make sure there won't be Dialogues with ALL lines unavailable\r\n    }\r\n}\r\n\r\n(function(){\r\n    dialogues[\"village elder\"] = new Dialogue({\r\n        name: \"village elder\",\r\n        textlines: {\r\n            \"hello\": new Textline({\r\n                name: \"Hello?\",\r\n                text: \"Hello. Glad to see you got better\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"what happened\", \"where am i\", \"dont remember\", \"about\"]}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }),\r\n            \"what happened\": new Textline({\r\n                name: \"My head hurts.. What happened?\",\r\n                text: `Some of our people found you unconscious in the forest, wounded and with nothing but pants and an old sword, so they brought you to our village. `\r\n                + `It would seem you were on your way to a nearby town when someone attacked you and hit you really hard in the head.`,\r\n                is_unlocked: false,\r\n                locks_lines: [\"what happened\", \"where am i\", \"dont remember\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"ask to leave 1\"]}],\r\n                },\r\n            }),\r\n            \"where am i\": new Textline({\r\n                name: \"Where am I?\",\r\n                text: `Some of our people found you unconscious in the forest, wounded and with nothing but pants and an old sword, so they brought you to our village. `\r\n                + `It would seem you were on your way to a nearby town when someone attacked you and hit you really hard in the head.`,\r\n                is_unlocked: false,\r\n                locks_lines: [\"what happened\", \"where am i\", \"dont remember\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"ask to leave 1\"]}],\r\n                },\r\n            }),\r\n            \"dont remember\": new Textline({\r\n                name: \"I don't remember how I got here, what happened?\",\r\n                text: `Some of our people found you unconscious in the forest, wounded and with nothing but pants and an old sword, so they brought you to our village. `\r\n                + `It would seem you were on your way to a nearby town when someone attacked you and hit you really hard in the head.`,\r\n                is_unlocked: false,\r\n                locks_lines: [\"what happened\", \"where am i\", \"dont remember\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"ask to leave 1\"]}],\r\n                },\r\n            }),\r\n            \"about\": new Textline({\r\n                name: \"Who are you?\",\r\n                text: \"I'm the unofficial leader of this village. If you have any questions, come to me\",\r\n                is_unlocked: false,\r\n                locks_lines: [\"about\"]\r\n            }),\r\n            \"ask to leave 1\": new Textline({\r\n                name: \"Great... Thank you for help, but I think I should go there then. Maybe it will help me remember more.\",\r\n                text: \"Nearby lands are dangerous and you are still too weak to leave. Do you plan on getting ambushed again?\",\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"need to\"]}],\r\n                },\r\n                locks_lines: [\"ask to leave 1\"],\r\n            }),\r\n            \"need to\": new Textline({\r\n                name: \"But I want to leave\",\r\n                text: `You first need to recover, to get some rest and maybe also training, as you seem rather frail... Well, you know what? Killing a few wolf rats could be a good exercise. `\r\n                        +`You could help us clear some field of them, how about that?`,\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"rats\", \"ask to leave 2\", \"equipment\"]}],\r\n                    locations: [{location: \"Infested field\"}],\r\n                    activities: [{location:\"Village\", activity:\"weightlifting\"}, {location:\"Village\",activity:\"running\"}],\r\n                },\r\n                locks_lines: [\"need to\"],\r\n            }),\r\n            \"equipment\": new Textline({\r\n                name: \"Is there any way I could get a weapon and proper clothes?\",\r\n                text: `We don't have anything to spare, but you can talk with our trader. He should be somewhere nearby. `\r\n                        +`If you need money, try selling him some rat remains. Fangs, tails or pelts, he will buy them all. I have no idea what he does with this stuff...`,\r\n                is_unlocked: false,\r\n                locks_lines: [\"equipment\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"money\"]}],\r\n                    traders: [{trader: \"village trader\"}]\r\n                }\r\n            }),\r\n            \"money\": new Textline({\r\n                name: \"Are there other ways to make money?\",\r\n                text: \"You could help us with some fieldwork. I'm afraid it won't pay too well.\",\r\n                is_unlocked: false,\r\n                locks_lines: [\"money\"],\r\n                rewards: {\r\n                    activities: [{location: \"Village\", activity: \"fieldwork\"}],\r\n                }\r\n            }),\r\n            \"ask to leave 2\": new Textline({\r\n                name: \"Can I leave the village?\",\r\n                text: \"We talked about this, you are still too weak\",\r\n                is_unlocked: false,\r\n            }),\r\n            \"rats\": new Textline({\r\n                name: \"Are wolf rats a big issue?\",\r\n                text: `Oh yes, quite a big one. Not literally, no, though they are much larger than normal rats... `\r\n                        +`They are a nasty vermin that's really hard to get rid of. And with their numbers they can be seriously life-threatening. `\r\n                        +`Only in a group though, single wolf rat is not much of a threat`,\r\n                is_unlocked: false,\r\n            }),\r\n            \"cleared field\": new Textline({ //will be unlocked on clearing infested field combat_zone\r\n                name: \"I cleared the field, just as you asked me to\",\r\n                text: `You did? That's good. How about a stronger target? Nearby cave is just full of this vermin. `\r\n                        +`Before that, maybe get some sleep? Some folks prepared that shack over there for you. It's clean, it's dry, and it will give you some privacy. `\r\n                        +`Oh, and before I forget, our old craftsman wanted to talk to you.`,\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    locations: [{location: \"Nearby cave\"}, {location: \"Infested field\"}, {location: \"Shack\"}],\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"ask to leave 3\"]}],\r\n                    dialogues: [\"old craftsman\"],\r\n                },\r\n                locks_lines: [\"ask to leave 2\", \"cleared field\"],\r\n            }),\r\n            \"ask to leave 3\": new Textline({\r\n                name: \"Can I leave the village?\",\r\n                text: \"You still need to get stronger.\",\r\n                rewards: {\r\n                    locations: [{location: \"Nearby cave\"}, {location: \"Infested field\"}],\r\n                    dialogues: [\"old craftsman\"],\r\n                },\r\n                is_unlocked: false,\r\n            }),\r\n            \"cleared cave\": new Textline({\r\n                name: \"I cleared the cave. Most of it, at least\",\r\n                text: `Then I can't call you \"too weak\" anymore, can I? You are free to leave whenever you want, but still, be careful. You might also want to ask the guard for some tips about the outside. He used to be an adventurer.`,\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village elder\", lines: [\"ask to leave 4\"]}],\r\n                    locations: [{location: \"Forest road\"}, {location: \"Infested field\"}, {location: \"Nearby cave\"}],\r\n                    dialogues: [\"village guard\"],\r\n                },\r\n                locks_lines: [\"ask to leave 3\", \"rats\", \"cleared cave\"],\r\n            }),\r\n            \"ask to leave 4\": new Textline({\r\n                name: \"Can I leave the village?\",\r\n                text: \"You are strong enough, you can leave and come whenever you want.\",\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    locations: [{location: \"Forest road\"}, {location: \"Infested field\"}, {location: \"Nearby cave\"}],\r\n                    dialogues: [\"village guard\", \"old craftsman\"],\r\n                },\r\n            }),\r\n            \"new tunnel\": new Textline({\r\n                name: \"I found an even deeper tunnel in the cave\",\r\n                text: \"The what? I have a very bad feeling about this... You better avoid it until you get better equipment and some solid shield, I can bet it's gonna be a lot more dangerous.\",\r\n                is_unlocked: false,\r\n                locks_lines: [\"new tunnel\"],\r\n            }),\r\n        },\r\n        description: \"You see an older man who, despite his white hair, still has a strong posture. He eyes you curiously.\"\r\n    });\r\n\r\n    dialogues[\"old craftsman\"] = new Dialogue({\r\n        name: \"old craftsman\",\r\n        is_unlocked: false,\r\n        textlines: {\r\n            \"hello\": new Textline({\r\n                name: \"Hello, I heard you wanted to talk to me?\",\r\n                text: \"Ahh, good to see you traveler. I just thought of a little something that could be of help for someone like you. See, young people this days \"+\r\n                \"don't care about the good old art of crafting and prefer to buy everything from the store, but I have a feeling that you just might be different. \"+\r\n                \"Would you like a quick lesson?\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"old craftsman\", lines: [\"learn\", \"leave\"]}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }),\r\n            \"learn\": new Textline({\r\n                name: \"Sure, I'm in no hurry.\",\r\n                text: \"Ahh, that's great. Well then... \\n*[Old man spends some time explaining all the important basics of crafting and providing you with tips]*\\n\"+\r\n                \"Ahh, and before I forget, here, take these. They will be helpful for gathering necessary materials.\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"old craftsman\", lines: [\"remind1\", \"remind2\", \"remind3\", \"remind4\"]}],\r\n                    items: [\"Old pickaxe\" ,\"Old axe\", \"Old sickle\"],\r\n                    flags: [\"is_gathering_unlocked\", \"is_crafting_unlocked\"],\r\n                },\r\n                locks_lines: [\"learn\",\"leave\"],\r\n                is_unlocked: false,\r\n            }),\r\n            \"leave\": new Textline({\r\n                name: \"I'm not interested.\",\r\n                text: \"Ahh, I see. Maybe some other time then, when you change your mind, hmm?\",\r\n                is_unlocked: false,\r\n            }),\r\n            \r\n            \"remind1\": new Textline({\r\n                name: \"Could you remind me how to create equipment for myself?\",\r\n                text: \"Ahh, of course. Unless you are talking about something simple like basic clothing, then you will first need to create components that can then be assembled together. \"+\r\n                \"For weapons, you generally need a part that you use to hit an enemy and a part that you hold in your hand. For armor, you will need some actual armor and then something softer to wear underneath, \"+\r\n                \"which would mostly mean some clothes.\",\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"old craftsman\", lines: [\"remind4\"]}],\r\n                },\r\n            }),\r\n            \"remind2\": new Textline({\r\n                name: \"Could you remind me how to improve my creations?\",\r\n                text: \"Ahh, that's simple, you just need more experience. This alone will be a great boon to your efforts. For equipment, you might also want to start with better components. \"+\r\n                \"After all, even with the most perfect assembling you can't turn a bent blade into a legendary sword.\",\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"old craftsman\", lines: [\"remind4\"]}],\r\n                },\r\n            }),\r\n            \"remind3\": new Textline({\r\n                name: \"Could you remind me how to get crafting materials?\",\r\n                text: \"Ahh, there's multiple ways of that. You can gain them from fallen foes, you can gather them around, or you can even buy them if you have some spare coin.\",\r\n                is_unlocked: false,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"old craftsman\", lines: [\"remind4\"]}],\r\n                },\r\n            }),\r\n            \"remind4\": new Textline({\r\n                name: \"How do I get better at crafting?\",\r\n                text: \"Ahh, there aren't any secrets, you just need to keep practicing it. Just don't spend your entire life working on same louse materials, try to work on stronger stuff when you feel confident. There's a limit to how much you can learn by working with rat leather, isn't there?\",\r\n                is_unlocked: false,\r\n            }),\r\n        },\r\n        description: \"You see an old man who clearly experienced a lot in life. His wearing some handmade accessories. Despite his age, his fingers seem exceptionally nimble.\",\r\n    });\r\n\r\n    dialogues[\"village guard\"] = new Dialogue({\r\n        name: \"village guard\",\r\n        is_unlocked: false,\r\n        textlines: {\r\n            \"hello\": new Textline({\r\n                name: \"Hello?\",\r\n                text: \"Hello. I see you are finally leaving, huh?\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village guard\", lines: [\"tips\", \"job\"]}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }),\r\n            \"job\": new Textline({\r\n                name: \"Do you maybe have any jobs for me?\",\r\n                is_unlocked: false,\r\n                text: \"You are somewhat combat capable now, so how about you help me and the boys on patrolling? Not much happens, but it pays better than working on fields\",\r\n                rewards: {\r\n                    activities: [{location:\"Village\", activity:\"patrolling\"}],\r\n                },\r\n                locks_lines: [\"job\"],\r\n            }),\r\n            \"tips\": new Textline({\r\n                name: \"Can you give me any tips for the journey?\",\r\n                is_unlocked: false,\r\n                text: `First and foremost, don't rush. It's fine to spend some more time here, to better prepare yourself. `\r\n                +`There's a lot of dangerous animals out there, much stronger than those damn rats, and in worst case you might even run into some bandits. `\r\n                +`If you see something that is too dangerous to fight, try to run away.`,\r\n                rewards: {\r\n                    textlines: [{dialogue: \"village guard\", lines: [\"teach\"]}],\r\n                },\r\n            }),\r\n            \"teach\": new Textline({\r\n                name: \"Could you maybe teach me something that would be of use?\",\r\n                is_unlocked: false,\r\n                text: `Lemme take a look... Yes, it looks like you know some basics. Do you know any proper techniques? No? I thought so. I could teach you the most standard three. `\r\n                +`They might be more tiring than fighting the \"normal\" way, but if used in a proper situation, they will be a lot more effective. Two can be easily presented through `\r\n                + `some sparring, so let's start with it. The third I'll just have to explain. How about that?`,\r\n                rewards: {\r\n                    locations: [{location: \"Sparring with the village guard (quick)\"}, {location: \"Sparring with the village guard (heavy)\"}],\r\n                },\r\n                locks_lines: [\"teach\"],\r\n            }),\r\n            \"quick\": new Textline({\r\n                name: \"So about the quick stance...\",\r\n                is_unlocked: false,\r\n                text: `It's usually called \"quick steps\". As you have seen, it's about being quick on your feet. `\r\n                +`While power of your attacks will suffer, it's very fast, making it perfect against more fragile enemies`,\r\n                otherUnlocks: () => {\r\n                    if(dialogues[\"village guard\"].textlines[\"heavy\"].is_finished) {\r\n                        dialogues[\"village guard\"].textlines[\"wide\"].is_unlocked = true;\r\n                    }\r\n                },\r\n                locks_lines: [\"quick\"],\r\n                rewards: {\r\n                    stances: [\"quick\"]\r\n                }\r\n            }),\r\n            \"heavy\": new Textline({\r\n                name: \"So about the heavy stance...\",\r\n                is_unlocked: false,\r\n                text: `It's usually called \"crushing force\". As you have seen, it's about putting all your strength in attacks. ` \r\n                +`It will make your attacks noticeably slower, but it's a perfect solution if you face an enemy that's too tough for normal attacks`,\r\n                otherUnlocks: () => {\r\n                    if(dialogues[\"village guard\"].textlines[\"quick\"].is_finished) {\r\n                        dialogues[\"village guard\"].textlines[\"wide\"].is_unlocked = true;\r\n                    }\r\n                },\r\n                locks_lines: [\"heavy\"],\r\n                rewards: {\r\n                    stances: [\"heavy\"]\r\n                }\r\n            }),\r\n            \"wide\": new Textline({\r\n                name: \"What's the third technique?\",\r\n                is_unlocked: false,\r\n                text: `It's usually called \"broad arc\". Instead of focusing on a single target, you make a wide swing to hit as many as possible. ` \r\n                +`It might work great against groups of weaker enemies, but it will also significantly reduce the power of your attacks and will be even more tiring than the other two stances.`,\r\n                locks_lines: [\"wide\"],\r\n                rewards: {\r\n                    stances: [\"wide\"]\r\n                }\r\n            }),\r\n        },\r\n        description: \"You see a man in light armor, with a spear in his hand and two daggers on his belt. \"\r\n    });\r\n\r\n    dialogues[\"gate guard\"] = new Dialogue({\r\n        name: \"gate guard\",\r\n        textlines: {\r\n            \"enter\": new Textline({\r\n                name: \"Hello, can I get in?\",\r\n                text: \"The town is currently closed to everyone who isn't a citizen or a guild member. No exceptions.\",\r\n            }), \r\n        },\r\n        description: \"You see a man in steel chainmail, with a spear in his hand and a sword on his belt.\"\r\n    });\r\n    dialogues[\"suspicious man\"] = new Dialogue({\r\n        name: \"suspicious man\",\r\n        textlines: {\r\n            \"hello\": new Textline({ \r\n                name: \"Hello? Why are you looking at me like that?\",\r\n                text: \"Y-you! You should be dead! *the man pulls out a dagger*\",\r\n                rewards: {\r\n                    locations: [{location: \"Fight off the assailant\"}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }), \r\n            \"defeated\": new Textline({ \r\n                name: \"What was that about?\",\r\n                is_unlocked: false,\r\n                text: \"I... We... It was my group that robbed you. I thought you came back from your grave for revenge... Please, I don't know anything. \"\r\n                +\"If you want answers, ask my ex-boss. He's somewhere in the town.\",\r\n                locks_lines: [\"defeated\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"suspicious man\", lines: [\"behave\", \"situation\"]}],\r\n                },\r\n            }), \r\n            \"behave\": new Textline({ \r\n                name: \"Are you behaving yourself?\",\r\n                is_unlocked: false,\r\n                text: \"Y-yes, boss! Please don't beat me again!\",\r\n                locks_lines: [\"defeated\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"suspicious man\", lines: [\"situation\", \"boss\"]}],\r\n                },\r\n            }), \r\n            \"boss\": new Textline({ \r\n                name: \"Stop calling me 'boss'\",\r\n                is_unlocked: false,\r\n                text: \"Y-yes, boss! I'm sorry, boss!\",\r\n                locks_lines: [\"boss\"],\r\n            }), \r\n            \"situation\": new Textline({\r\n                name: \"By the way, how are things in this slum?\",\r\n                is_unlocked: false,\r\n                text: \"A-as you can see and hear boss, it's pretty b-bad, but it can't be helped without taking out the g-gang...\",\r\n                locks_lines: [\"situation\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"suspicious man\", lines: [\"gang\", \"boss\"]}],\r\n                },\r\n            }),\r\n            \"gang\": new Textline({\r\n                name: \"What gang?\",\r\n                is_unlocked: false,\r\n                text: \"It's j-just a gang, they don't have any name, boss. Their hideout is over t-there, you should stay away from them.\",\r\n                locks_lines: [\"gang\", \"behave\"],\r\n                rewards: {\r\n                    textlines: [{dialogue: \"suspicious man\", lines: [\"gang\", \"behave 2\"]}],\r\n                    locations: [\r\n                        {location: \"Gang hideout\"},\r\n                    ],\r\n                },\r\n            }),\r\n            \"defeated gang\": new Textline({\r\n                name: \"That gang you mentioned? I dealt with them.\",\r\n                is_unlocked: false,\r\n                text: \"I know boss, we all heard the commotion! You're the best! I think the local trader already pulled out some gear he was hiding from them, you should check it out!\",\r\n                locks_lines: [\"defeated gang\"],\r\n            }),\r\n            \"behave 2\": new Textline({ \r\n                name: \"Are you behaving yourself?\",\r\n                is_unlocked: false,\r\n                text: \"Y-yes, I didn't do anything bad since the last time, boss!\",\r\n            }),\r\n            \"behave 3\": new Textline({ \r\n                name: \"Are you behaving yourself?\",\r\n                is_unlocked: false,\r\n                text: \"Of course boss!\",\r\n            }),\r\n        },\r\n        description: \"You see a man in shabby clothes and with messy hair, who keeps looking around. He appears to have multiple nervous ticks.\"\r\n    });\r\n    dialogues[\"farm supervisor\"] = new Dialogue({\r\n        name: \"farm supervisor\",\r\n        textlines: {\r\n            \"hello\": new Textline({ \r\n                name: \"Hello\",\r\n                text: \"Hello stranger\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"farm supervisor\", lines: [\"things\", \"work\", \"animals\", \"fight\", \"fight0\"]}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }),\r\n            \"work\": new Textline({\r\n                name: \"Do you have any work with decent pay?\",\r\n                is_unlocked: false,\r\n                text: \"We sure could use more hands. Feel free to help my boys on the fields whenever you have time!\",\r\n                rewards: {\r\n                    activities: [{location: \"Town farms\", activity: \"fieldwork\"}],\r\n                },\r\n                locks_lines: [\"work\"],\r\n            }),\r\n            \"animals\": new Textline({\r\n                name: \"Do you sell anything?\",\r\n                is_unlocked: false,\r\n                text: \"Sorry, I'm not allowed to. I could however let you take some stuff in exchange for physical work, and it just so happens our sheep need shearing.\",\r\n                required_flags: {yes: [\"is_gathering_unlocked\"]},\r\n                rewards: {\r\n                    activities: [{location: \"Town farms\", activity: \"animal care\"}],\r\n                },\r\n                locks_lines: [\"animals\"],\r\n            }),\r\n            \"fight0\": new Textline({\r\n                name: \"Do you have any task that requires some good old violence?\",\r\n                is_unlocked: false,\r\n                text: \"I kinda do, but you don't seem strong enough for that. I'm sorry.\",\r\n                required_flags: {no: [\"is_deep_forest_beaten\"]},\r\n            }),\r\n            \"fight\": new Textline({\r\n                name: \"Do you have any task that requires some good old violence?\",\r\n                is_unlocked: false,\r\n                text: \"Actually yes. There's that annoying group of boars that keep destroying our fields. \"\r\n                + \"They don't do enough damage to cause any serious problems, but I would certainly be calmer if someone took care of them. \"\r\n                + \"Go to the forest and search for a clearing in north, that's where they usually roam when they aren't busy eating our crops.\"\r\n                + \"I can of course pay you for that, but keep in mind it won't be that much. 4 silver coins is most I can offer, I'm running on a strict budget here.\",\r\n                required_flags: {yes: [\"is_deep_forest_beaten\"]},\r\n                rewards: {\r\n                    actions: [{location: \"Forest road\", action: \"search for boars\"}],\r\n                    //locations: [{location: \"Forest clearing\"}],\r\n                },\r\n                locks_lines: [\"fight\"],\r\n            }),\r\n            \"things\": new Textline({\r\n                is_unlocked: false,\r\n                name: \"How are things around here?\",\r\n                text: \"Nothing to complain about. Trouble is rare, pay is good, and the soil is as fertile as my wife!\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"farm supervisor\", lines: [\"animals\", \"fight\", \"fight0\"]}],\r\n                }\r\n            }), \r\n            \"defeated boars\": new Textline({\r\n                is_unlocked: false,\r\n                name: \"I took care of those boars\",\r\n                text: \"Really? That's great! Here, this is for you.\",\r\n                locks_lines: [\"defeated boars\"],\r\n                rewards: {\r\n                    money: 4000,\r\n                }\r\n            }), \r\n        },\r\n        description: \"You see a well dressed man with a notebook on his belt. Despite seeming more like a scribe, he's buff and tanned.\"\r\n    });\r\n\r\n    dialogues[\"cute little rat\"] = new Dialogue({\r\n        name: \"cute little rat\",\r\n        textlines: {\r\n            \"hello\": new Textline({ \r\n                name: \"Uhm, hi?\",\r\n                text: \"Hello, o mighty adventurer!\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"what\"]}],\r\n                },\r\n                locks_lines: [\"hello\"],\r\n            }),\r\n            \"what\": new Textline({ \r\n                name: \"What... are you?\",\r\n                text: \"Me name be Ratzor Rathai, the Rat Prince Who Be Promised!\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"walls\"]}],\r\n                },\r\n                locks_lines: [\"what\"],\r\n            }),\r\n            \"who\": new Textline({ \r\n                name: \"Promised by who?\",\r\n                text: \"By my papa, the great Rat God, of course! The He who bring infite rat blessings uppon this dimension!\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"monsters\"]}],\r\n                },\r\n                locks_lines: [\"who\"],\r\n            }),\r\n            \"monsters\": new Textline({ \r\n                name: \"Are those strange monsters that I fought on the way amonst those 'blessings' you speak of?\",\r\n                text: \"No no, they don't be blessings, they be the blessed! Creatures of all the creation, who embrace the gift of my papa! Monsters, animals, adventurers, plants, papa accepts all!\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"walls\", \"kill\", \"mind\"]}],\r\n                },\r\n                locks_lines: [\"monsters\"],\r\n            }),\r\n            \"mind\": new Textline({ \r\n                name: \"And you don't mind that I slaughtered them?\",\r\n                text: \"Why? It's the rule of the world that the strong kill the weak and papa believe it too! Besides, maybe you be join us one day? Embrace the truth of your inner rat and reject the human shell!\",\r\n                locks_lines: [\"mind\"],\r\n            }),\r\n            \"walls\": new Textline({ \r\n                name: \"So some of those wall-like things could have once been human?\",\r\n                text: \"Only in soul. They once be acolytes of papa, but not be worthy so be cast down to guard the path.\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"walls\"]}],\r\n                },\r\n                locks_lines: [\"monsters\"],\r\n            }),\r\n            \"kill\": new Textline({ \r\n                name: \"Okay, give me one reason why I shouldn't kill you.\",\r\n                text: \"I don't mind, if I die my soul be return to papa. But my blood be full of papa power, don't do it unless you want to face him personally.\",\r\n                rewards: {\r\n                    textlines: [{dialogue: \"cute little rat\", lines: [\"walls\"]}],\r\n                },\r\n                locks_lines: [\"kill\"],\r\n            }),\r\n        },\r\n        description: \"You see a cute little rat. It appears completely harmless. It has a cute litle crown on its cute little head and is sitting on a cute little comfortable pillow.\"\r\n    });\r\n})();\r\n\r\nexport {dialogues};", "\"use strict\";\r\n\r\nconst activities = {};\r\n\r\n/*\r\n    A bit complicated with activities defined both here and in locations, but:\r\n    - multiple locations can have \"same\" activity available, though with different xp/money gains\r\n    - activity can be overall unlocked, but not yet available in specific location\r\n*/\r\n\r\nclass Activity {\r\n    constructor({ name,\r\n                  description,\r\n                  action_text,\r\n                  base_skills_names,\r\n                  is_unlocked = false,\r\n        }) \r\n    {\r\n        this.name = name;\r\n        this.description = description; //description on job\r\n        this.action_text = action_text; //text displayed in action div, e.g. \"Working the fields\"\r\n        this.base_skills_names = base_skills_names;\r\n        //skills that affect efficiency of an activity and are raised when performing it\r\n        //originally meant to allow multiple, but with current implementation of stuff, doing that would break a lot of things\r\n        this.tags = [];\r\n        this.is_unlocked = is_unlocked;\r\n    }\r\n}\r\n\r\nclass Job extends Activity {\r\n    constructor(activity_data) {\r\n        super(activity_data);\r\n        this.type = \"JOB\";\r\n        this.payment_type = activity_data.payment_type;\r\n    }\r\n}\r\n\r\nclass Training extends Activity {\r\n    constructor(activity_data) {\r\n        super(activity_data);\r\n        this.type = \"TRAINING\";\r\n    }\r\n}\r\n\r\nclass Gathering extends Training {\r\n    constructor({ name,\r\n        description,\r\n        action_text,\r\n        base_skills_names,\r\n        is_unlocked = false,\r\n        required_tool_type,\r\n    }) {\r\n        super({name, description, action_text, base_skills_names, is_unlocked});\r\n        this.type = \"GATHERING\";\r\n        this.tags[\"gathering\"] = true;\r\n        this.required_tool_type = required_tool_type;\r\n        //drops are defined in locations\r\n    }\r\n}\r\n/*\r\n    All 3 types of activity can yield loot.\r\n    For trainings and jobs, it doesn't require a tool and is a small bonus on top of xp/money, plus their skills get xp every tick.\r\n    For gatherings, tools are required and loot is the main focus, plus their skills get xp when work period is finished\r\n*/\r\n\r\n//jobs\r\n(function(){\r\n    activities[\"fieldwork\"] = new Job({\r\n        name: \"fieldwork\",\r\n        action_text: \"Working on the fields\",\r\n        description: \"It's tiring and doesn't pay much, but it's better than doing nothing\",\r\n        base_skills_names: [\"Farming\"],\r\n        is_unlocked: true,\r\n    });\r\n    activities[\"patrolling\"] = new Job({\r\n        name: \"patrolling\",\r\n        action_text: \"Patrolling\",\r\n        description: \"Nothing ever happens\",\r\n        base_skills_names: [\"Spatial awareness\"],\r\n        is_unlocked: true,\r\n    })\r\n})();\r\n\r\n//trainings\r\n(function(){\r\n    activities[\"running\"] = new Training({\r\n        name: \"running\",\r\n        action_text: \"Just running around\",\r\n        description: \"One of the most basic exercises\",\r\n        base_skills_names: [\"Running\"],\r\n        is_unlocked: true,\r\n    });\r\n    activities[\"weightlifting\"] = new Training({\r\n        name: \"weightlifting\",\r\n        action_text: \"Carrying heavy things\",\r\n        description: \"One of the most basic exercises\",\r\n        base_skills_names: [\"Weightlifting\"],\r\n        is_unlocked: true,\r\n    });\r\n    activities[\"balancing\"] = new Training({\r\n        name: \"balancing\",\r\n        action_text: \"Trying to keep your balance\",\r\n        description: \"One of the most basic exercises\",\r\n        base_skills_names: [\"Equilibrium\"],\r\n        is_unlocked: true,\r\n    });\r\n    activities[\"meditating\"] = new Training({\r\n        name: \"meditating\",\r\n        action_text: \"Focusing your mind\",\r\n        description: \"A somewhat basic exercise\",\r\n        base_skills_names: [\"Meditation\"],\r\n        is_unlocked: true,\r\n    });\r\n    activities[\"climbing\"] = new Training({\r\n        name: \"climbing\",\r\n        action_text: \"Looking for next grip to hold to\",\r\n        description: \"An advanced exercise that uses majority of muscles in the body\",\r\n        base_skills_names: [\"Climbing\"],\r\n        is_unlocked: true,\r\n    });\r\n})();\r\n\r\n//resource gatherings\r\n(function(){\r\n    activities[\"mining\"] = new Gathering({\r\n        name: \"mining\",\r\n        action_text: \"Swinging the pickaxe\",\r\n        description: \"Swing you pickaxe against the hard rock\",\r\n        base_skills_names: [\"Mining\"],\r\n        is_unlocked: true,\r\n        required_tool_type: \"pickaxe\",\r\n    });\r\n    activities[\"woodcutting\"] = new Gathering({\r\n        name: \"woodcutting\",\r\n        action_text: \"Gathering wood\",\r\n        description: \"Chop chop\",\r\n        base_skills_names: [\"Woodcutting\"],\r\n        is_unlocked: true,\r\n        required_tool_type: \"axe\",\r\n    });\r\n\r\n    activities[\"herbalism\"] = new Gathering({\r\n        name: \"herbalism\",\r\n        action_text: \"Searching for herbs\",\r\n        description: \"Look for any useful plants and mushrooms\",\r\n        base_skills_names: [\"Herbalism\"],\r\n        is_unlocked: true,\r\n        required_tool_type: \"sickle\",\r\n    });\r\n\r\n    activities[\"animal care\"] = new Gathering({\r\n        name: \"animal care\",\r\n        action_text: \"Tending to animals\",\r\n        description: \"Take care of animals\",\r\n        base_skills_names: [\"Animal handling\"],\r\n        is_unlocked: true,\r\n    });\r\n})();\r\n\r\n\r\nexport {activities};", "\"use strict\";\r\n\r\nimport { character, get_total_skill_level } from \"./character.js\";\r\nimport { Armor, ArmorComponent, Shield, ShieldComponent, Weapon, WeaponComponent, item_templates } from \"./items.js\";\r\nimport { skills } from \"./skills.js\";\r\n\r\nconst crafting_recipes = {items: {}, components: {}, equipment: {}};\r\nconst cooking_recipes = {items: {}};\r\nconst smelting_recipes = {items: {}};\r\nconst forging_recipes = {items: {}, components: {}};\r\nconst alchemy_recipes = {items: {}};\r\n\r\n/*\r\n    recipes can be treated differently for display based on if they are in items/components/equipment category\r\n\r\n    non-equipment recipes have a success rate (presented with min-max value, where max should be 1) that shall scale with skill level and with crafting station level\r\n    for equipment recipes, there is no success rate in favor of equipment's \"quality\" property\r\n\r\n    resulting quality of equipment is based on component quality; 100% (with slight variation) with 100% components and required skill, more at higher levels\r\n    \r\n    overal max quality achievable scales with related skills\r\n*/\r\n\r\nfunction get_crafting_quality_caps(skill_name) {\r\n    return {\r\n        components: Math.min(Math.round(100+2*get_total_skill_level(skill_name)),200),\r\n        equipment: Math.min(Math.round(100+2.8*get_total_skill_level(skill_name)),250),\r\n    }\r\n}\r\n\r\nclass Recipe {\r\n    constructor({\r\n        name,\r\n        id,\r\n        is_unlocked = true,\r\n        recipe_type,\r\n        result, //{name, count}\r\n        getResult,\r\n        recipe_level = [1,1],\r\n        recipe_skill,\r\n    }) {\r\n        this.name = name;\r\n        this.id = id || name;\r\n        this.is_unlocked = is_unlocked;\r\n        this.recipe_type = recipe_type;\r\n        this.result = result;\r\n        this.getResult = getResult || function(){return this.result};\r\n        this.recipe_level = recipe_level;\r\n        this.recipe_skill = recipe_skill;\r\n    }\r\n}\r\n\r\nclass ItemRecipe extends Recipe {\r\n    constructor({\r\n        name,\r\n        id,\r\n        materials = [], //{name, count}\r\n        is_unlocked = true,\r\n        recipe_type,\r\n        result, //{name, count}\r\n        getResult,\r\n        recipe_level,\r\n        recipe_skill,\r\n        success_chance = [1,1],\r\n    }) {\r\n        super({name, id, is_unlocked, recipe_type, result, getResult, recipe_level, recipe_skill});\r\n        this.materials = materials;\r\n        this.success_chance = success_chance;\r\n        if(this.success_chance[0]==0){\r\n            this.success_chance[0] = 0.1;\r\n        }\r\n    }\r\n\r\n    get_success_chance(station_tier=1) {\r\n        const level = Math.min(this.recipe_level[1]-this.recipe_level[0]+1, Math.max(0,get_total_skill_level(this.recipe_skill)-this.recipe_level[0]+1));\r\n        const skill_modifier = Math.min(1,(0||(level+(station_tier-1))/(this.recipe_level[1]-this.recipe_level[0]+1)));\r\n        return this.success_chance[0]*(this.success_chance[1]/this.success_chance[0])**skill_modifier;\r\n    }\r\n\r\n    get_availability() {\r\n        let ammount = Infinity;\r\n        let materials = [];\r\n        for(let i = 0; i < this.materials.length; i++) {\r\n            if(this.materials[i].material_id) {\r\n                const key = item_templates[this.materials[i].material_id].getInventoryKey();\r\n                if(!character.inventory[key]) {\r\n                    return 0;\r\n                }\r\n                ammount = Math.floor(Math.min(character.inventory[key].count / this.materials[i].count, ammount));\r\n            } else if (this.materials[i].material_type) {\r\n                let mats = [];\r\n\r\n                //going through possible items and checking for their presence would surely be faster\r\n                Object.keys(character.inventory).forEach(key => {\r\n                    if(character.inventory[key].item.material_type === this.materials[i].material_type && character.inventory[key].count >= this.materials[i].count) {\r\n                        mats.push(character.inventory[key]);\r\n                    }\r\n                });\r\n                if(mats.length == 0) {\r\n                    return 0;\r\n                }\r\n\r\n                mats = mats.sort((a,b) => a.item.getValue()-b.item.getValue());\r\n                ammount = Math.floor(Math.min(mats[0].count / this.materials[i].count, ammount));\r\n                materials.push(mats[0].item.id);\r\n            }\r\n        }\r\n        \r\n        return {available_ammount: ammount, materials};\r\n    }\r\n}\r\n\r\nclass ComponentRecipe extends ItemRecipe{\r\n    constructor({\r\n        name,\r\n        id,\r\n        materials = [], \r\n        is_unlocked = true,\r\n        result, //{item, count, result_name} where result_name is an item_templates key\r\n        component_type,\r\n        recipe_skill,\r\n        item_type,\r\n    }) {\r\n        super({name, id, materials, is_unlocked, recipe_type: \"component\", result, recipe_level: [1,1], recipe_skill, getResult: null, success_rate: [1,1]})\r\n        this.component_type = component_type;\r\n        this.item_type = item_type;\r\n        this.getResult = function(material, station_tier = 1){\r\n            const result = item_templates[this.materials.filter(x => x.material_id===material.id)[0].result_id];\r\n            //return based on material used\r\n            let quality = this.get_quality((station_tier-result.component_tier) || 0);\r\n            if(result.tags[\"clothing\"]) {\r\n                //means its a clothing (wearable internal part of armor)\r\n                return new Armor({...item_templates[result.id], quality: quality});\r\n            } else if(result.tags[\"armor component\"]) {\r\n\r\n                return new ArmorComponent({...item_templates[result.id], quality: quality});\r\n            } else if(result.tags[\"weapon component\"]) {\r\n\r\n                return new WeaponComponent({...item_templates[result.id], quality: quality});\r\n            } else if(result.tags[\"shield component\"]) {\r\n\r\n                return new ShieldComponent({...item_templates[result.id], quality: quality});\r\n            } else {\r\n                throw new Error(`Component recipe ${this.name} does not produce a valid result!`);\r\n            }\r\n        }\r\n    }\r\n\r\n    get_quality_range(tier = 0) {\r\n        const skill = skills[this.recipe_skill];\r\n        const quality = (130+(3*get_total_skill_level(this.recipe_skill) - skill.max_level)+(15*tier))/100;\r\n        return [Math.max(10,Math.min(this.get_quality_cap(),Math.round(25*(quality-0.15))*4)), Math.max(10,Math.min(this.get_quality_cap(), Math.round(25*(quality+0.1))*4))];\r\n    }\r\n\r\n    get_quality_cap() {\r\n        if(this.item_type === \"Armor\") {\r\n            return get_crafting_quality_caps(this.recipe_skill).equipment;\r\n        } else {\r\n            return get_crafting_quality_caps(this.recipe_skill).components;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * checks if quality is completely capped, that is every created item will have the exact same value\r\n     * @returns {Boolean}\r\n     */\r\n    get_is_quality_capped() {\r\n        return this.get_quality_range()[0] >= this.get_quality_cap();\r\n    }\r\n\r\n    get_quality(tier = 0) {\r\n        const quality_range = this.get_quality_range(tier);\r\n        return Math.round(((quality_range[1]-quality_range[0])*Math.random()+quality_range[0])/4)*4;\r\n    }\r\n}\r\n\r\nclass EquipmentRecipe extends Recipe {\r\n    constructor({\r\n        name,\r\n        id,\r\n        components = [], //pair of component types; first letter not capitalized; blade-handle or internal-external\r\n        is_unlocked = true,\r\n        result = null,\r\n        recipe_skill = \"Crafting\",\r\n        item_type, //Weapon/Armor/Shield\r\n        //no recipe level, difficulty based on selected components\r\n    }) {\r\n        super({name, id, is_unlocked, recipe_type: \"equipment\", result, getResult: null, recipe_level: [1,1], recipe_skill, success_rate: [1,1]})\r\n        this.components = components;\r\n        this.item_type = item_type;\r\n        this.getResult = function(component_1, component_2, station_tier = 1){\r\n            const comp_quality_weighted = this.get_component_quality_weighted(component_1, component_2);\r\n            let quality = this.get_quality(comp_quality_weighted, (station_tier-Math.max(component_1.component_tier, component_2.component_tier)) || 0);\r\n            \r\n            //return based on components used\r\n            if(this.item_type === \"Weapon\") {\r\n                return new Weapon(\r\n                    {\r\n                        components: {\r\n                            head: component_1.id,\r\n                            handle: component_2.id,\r\n                        },\r\n                        quality: quality,\r\n                    }\r\n                );\r\n            } else if(this.item_type === \"Armor\") {\r\n                return new Armor(\r\n                    {\r\n                        components: {\r\n                            internal: component_1.id,\r\n                            external: component_2.id,\r\n                        },\r\n                        quality: quality,\r\n                    }\r\n                );\r\n            } else if(this.item_type === \"Shield\") {\r\n                return new Shield(\r\n                    {\r\n                        components: {\r\n                            shield_base: component_1.id,\r\n                            handle: component_2.id,\r\n                        },\r\n                        quality: quality,\r\n                    }\r\n                );\r\n            } else {\r\n                throw new Error(`Recipe \"${this.name}\" has an incorrect item_type provided (\"${this.item_type}\")`);\r\n            }\r\n        }\r\n    }\r\n\r\n    get_quality_range(component_quality, tier = 0) {\r\n        const skill = skills[this.recipe_skill];\r\n        const quality = (50+component_quality+(3*get_total_skill_level(this.recipe_skill)-skill.max_level)+10*(tier));\r\n        return [Math.max(10,Math.min(this.get_quality_cap(),Math.round(quality-15))), Math.max(10,Math.min(this.get_quality_cap(), Math.round(quality+15)))];\r\n    }\r\n\r\n    get_quality_cap() {\r\n        return get_crafting_quality_caps(this.recipe_skill).equipment;\r\n    }\r\n\r\n    get_quality(component_quality, tier = 0) {\r\n        const quality_range = this.get_quality_range(component_quality, tier);\r\n        return Math.round(((quality_range[1]-quality_range[0])*Math.random()+quality_range[0])/2)*2;\r\n    }\r\n\r\n    get_component_quality_weighted(component_1, component_2) {\r\n        return (component_1.quality*component_1.component_tier + component_2.quality*component_2.component_tier)/(component_1.component_tier+component_2.component_tier);\r\n    }\r\n}\r\n\r\nfunction get_recipe_xp_value({category, subcategory, recipe_id, material_count, result_tier, selected_components, rarity_multiplier}) {\r\n    //\r\n    //for components: multiplied by material count (so every component of same tier is equally profitable to craft)\r\n    //for equipment: based on component tier average\r\n    if(!category || !subcategory || !recipe_id) {\r\n        //shouldn't be possible to reach this\r\n        throw new Error(`Tried to use a recipe but either category, subcategory, or recipe id was not passed: ${category} - ${subcategory} - ${recipe_id}`);\r\n    }\r\n    let exp_value = 4;\r\n    const selected_recipe = recipes[category][subcategory][recipe_id];\r\n    const skill_level = skills[selected_recipe.recipe_skill].current_level; //don't use buffed level as that would only result in reduced xp gain, which is not desired here\r\n    if(!selected_recipe) {\r\n        throw new Error(`Tried to use a recipe that doesn't exist: ${category} -> ${subcategory} -> ${recipe_id}`);\r\n    }\r\n    if(subcategory === \"items\") {\r\n        exp_value = Math.max(exp_value,1.5*selected_recipe.recipe_level[1])**1.2;\r\n        //maybe scale with materials needed?\r\n        \r\n        if(selected_recipe.recipe_level[1] < skill_level) {\r\n            exp_value = Math.max(1,exp_value * Math.max(0,Math.min(5,(selected_recipe.recipe_level[1]+6-skill_level))/5));\r\n            //penalty kicks in when more than 5 levels more than needed, goes down to 0 within further 5 levels\r\n        }\r\n    } else if (subcategory === \"components\" || selected_recipe.recipe_type === \"component\") {\r\n        const result_level = 8*result_tier;\r\n        exp_value = Math.max(exp_value**1.2,((result_tier * 4)**1.2) * material_count);\r\n        exp_value = Math.max(0.5*material_count,exp_value*(rarity_multiplier**0.5 - (skill_level/result_level))*rarity_multiplier);\r\n        //penalty kicks in when skill level is more than 8*item_tier, but is delayed by sqrt of rarity multiplier\r\n    } else {\r\n        const result_level = 8*Math.max(selected_components[0].component_tier,selected_components[1].component_tier);\r\n        exp_value = Math.max(exp_value,(selected_components[0].component_tier+selected_components[1].component_tier) * 4)**1.2;\r\n        exp_value = Math.max(1,exp_value*(rarity_multiplier**0.5 - (skill_level/result_level))*rarity_multiplier);\r\n        //penalty kicks in when skill level is more than 8*item_tier, but is delayed by sqrt of rarity multiplier\r\n    }\r\n    return Math.round(10*exp_value)/10;\r\n}\r\n\r\n//weapon components\r\n(()=>{\r\n    forging_recipes.components[\"Short blade\"] = new ComponentRecipe({\r\n        name: \"Short blade\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 2, result_id: \"Cheap short iron blade\"}, \r\n            {material_id: \"Iron ingot\", count: 2, result_id: \"Short iron blade\"},\r\n            {material_id: \"Steel ingot\", count: 2, result_id: \"Short steel blade\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\"\r\n    });\r\n    forging_recipes.components[\"Long blade\"] = new ComponentRecipe({\r\n        name: \"Long blade\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 3, result_id: \"Cheap long iron blade\"}, \r\n            {material_id: \"Iron ingot\", count: 3, result_id: \"Long iron blade\"},\r\n            {material_id: \"Steel ingot\", count: 3, result_id: \"Long steel blade\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n    });\r\n    forging_recipes.components[\"Axe head\"] = new ComponentRecipe({\r\n        name: \"Axe head\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 4, result_id: \"Cheap iron axe head\"}, \r\n            {material_id: \"Iron ingot\", count: 4, result_id: \"Iron axe head\"},\r\n            {material_id: \"Steel ingot\", count: 4, result_id: \"Steel axe head\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\"\r\n    });\r\n    forging_recipes.components[\"Hammer head\"] = new ComponentRecipe({\r\n        name: \"Hammer head\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 4, result_id: \"Cheap iron hammer head\"}, \r\n            {material_id: \"Iron ingot\", count: 4, result_id: \"Iron hammer head\"},\r\n            {material_id: \"Steel ingot\", count: 4, result_id: \"Steel hammer head\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n    });\r\n\r\n    forging_recipes.components[\"Short hilt\"] = new ComponentRecipe({\r\n        name: \"Short hilt\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 1, result_id: \"Cheap short iron hilt\"},\r\n            {material_id: \"Iron ingot\", count: 1, result_id: \"Short iron hilt\"},\r\n            {material_id: \"Steel ingot\", count: 1, result_id: \"Short steel hilt\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n    });\r\n    forging_recipes.components[\"Medium handle\"] = new ComponentRecipe({\r\n        name: \"Medium handle\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 2, result_id: \"Cheap medium iron handle\"},\r\n            {material_id: \"Iron ingot\", count: 2, result_id: \"Medium iron handle\"},\r\n            {material_id: \"Steel ingot\", count: 2, result_id: \"Medium steel handle\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n    });\r\n    forging_recipes.components[\"Long shaft\"] = new ComponentRecipe({\r\n        name: \"Long shaft\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 4, result_id: \"Cheap long iron shaft\"},\r\n            {material_id: \"Iron ingot\", count: 4, result_id: \"Long iron shaft\"},\r\n            {material_id: \"Steel ingot\", count: 4, result_id: \"Long steel shaft\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n    });\r\n\r\n    crafting_recipes.components[\"Short hilt\"] = new ComponentRecipe({\r\n        name: \"Short hilt\",\r\n        materials: [\r\n            {material_id: \"Processed rough wood\", count: 1, result_id: \"Simple short wooden hilt\"},\r\n            {material_id: \"Processed wood\", count: 1, result_id: \"Short wooden hilt\"},\r\n            {material_id: \"Processed ash wood\", count: 1, result_id: \"Short ash wood hilt\"},\r\n            {material_id: \"Processed weak monster bone\", count: 1, result_id: \"Short weak bone hilt\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.components[\"Medium handle\"] = new ComponentRecipe({\r\n        name: \"Medium handle\",\r\n        materials: [\r\n            {material_id: \"Processed rough wood\", count: 2, result_id: \"Simple medium wooden handle\"},\r\n            {material_id: \"Processed wood\", count: 2, result_id: \"Medium wooden handle\"},\r\n            {material_id: \"Processed ash wood\", count: 2, result_id: \"Medium ash wood handle\"},\r\n            {material_id: \"Processed weak monster bone\", count: 2, result_id: \"Medium weak bone handle\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.components[\"Long shaft\"] = new ComponentRecipe({\r\n        name: \"Long shaft\",\r\n        materials: [\r\n            {material_id: \"Processed rough wood\", count: 4, result_id: \"Simple long wooden shaft\"},\r\n            {material_id: \"Processed wood\", count: 4, result_id: \"Long wooden shaft\"},\r\n            {material_id: \"Processed ash wood\", count: 4, result_id: \"Long ash wood shaft\"},\r\n            {material_id: \"Processed weak monster bone\", count: 4, result_id: \"Long weak bone shaft\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n})();\r\n\r\n//shield components\r\n(()=>{\r\n    crafting_recipes.components[\"Shield base\"] = new ComponentRecipe({\r\n        name: \"Shield base\",\r\n        materials: [\r\n            {material_id: \"Processed rough wood\", count: 6, result_id: \"Crude wooden shield base\"}, \r\n            {material_id: \"Processed wood\", count: 6, result_id: \"Wooden shield base\"},\r\n            {material_id: \"Processed ash wood\", count: 6, result_id: \"Ash wood shield base\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"shield base\",\r\n    });\r\n\r\n    crafting_recipes.components[\"Shield handle\"] = new ComponentRecipe({\r\n        name: \"Shield handle\",\r\n        materials: [\r\n            {material_id: \"Processed rough wood\", count: 4, result_id: \"Basic shield handle\"}, \r\n            {material_id: \"Processed wood\", count: 4, result_id: \"Wooden shield handle\"},\r\n            {material_id: \"Processed ash wood\", count: 4, result_id: \"Ash wood shield handle\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"shield handle\",\r\n    });\r\n\r\n    forging_recipes.components[\"Shield base\"] = new ComponentRecipe({\r\n        name: \"Shield base\",\r\n        materials: [\r\n            {material_id: \"Low quality iron ingot\", count: 5, result_id: \"Crude iron shield base\"},\r\n            {material_id: \"Iron ingot\", count: 5, result_id: \"Iron shield base\"},\r\n            {material_id: \"Steel ingot\", count: 5, result_id: \"Steel shield base\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"shield base\",\r\n    });\r\n\r\n})();\r\n\r\n//armor components\r\n(()=>{\r\n    crafting_recipes.components[\"Helmet exterior\"] = new ComponentRecipe({\r\n        name: \"Helmet exterior\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 3, result_id: \"Wolf leather helmet armor\"}, \r\n            {material_id: \"Piece of boar leather\", count: 3, result_id: \"Boar leather helmet armor\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"helmet exterior\",\r\n    });\r\n\r\n    forging_recipes.components[\"Helmet exterior\"] = new ComponentRecipe({\r\n        name: \"Helmet exterior\",\r\n        materials: [\r\n            {material_id: \"Iron chainmail\", count: 3, result_id: \"Iron chainmail helmet armor\"},\r\n            {material_id: \"Steel chainmail\", count: 3, result_id: \"Steel chainmail helmet armor\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"helmet exterior\",\r\n    });\r\n    \r\n    crafting_recipes.components[\"Chestplate exterior\"] = new ComponentRecipe({\r\n        name: \"Chestplate exterior\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 5, result_id: \"Wolf leather chestplate armor\"}, \r\n            {material_id: \"Piece of boar leather\", count: 5, result_id: \"Boar leather chestplate armor\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"chestplate exterior\",\r\n    });\r\n\r\n    forging_recipes.components[\"Chestplate exterior\"] = new ComponentRecipe({\r\n        name: \"Chestplate exterior\",\r\n        materials: [\r\n            {material_id: \"Iron chainmail\", count: 5, result_id: \"Iron chainmail vest\"},\r\n            {material_id: \"Steel chainmail\", count: 5, result_id: \"Steel chainmail vest\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"chestplate exterior\",\r\n    });\r\n\r\n    crafting_recipes.components[\"Leg armor exterior\"] = new ComponentRecipe({\r\n        name: \"Leg armor exterior\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 4, result_id: \"Wolf leather greaves\"}, \r\n            {material_id: \"Piece of boar leather\", count: 4, result_id: \"Boar leather greaves\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"leg armor exterior\",\r\n    });\r\n\r\n    forging_recipes.components[\"Leg armor exterior\"] = new ComponentRecipe({\r\n        name: \"Leg armor exterior\",\r\n        materials: [\r\n            {material_id: \"Iron chainmail\", count: 4, result_id: \"Iron chainmail greaves\"},\r\n            {material_id: \"Steel chainmail\", count: 4, result_id: \"Steel chainmail greaves\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"leg armor exterior\",\r\n    });\r\n\r\n    crafting_recipes.components[\"Glove exterior\"] = new ComponentRecipe({\r\n        name: \"Glove exterior\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 3, result_id: \"Wolf leather glove armor\"}, \r\n            {material_id: \"Piece of boar leather\", count: 3, result_id: \"Boar leather glove armor\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"glove exterior\",\r\n    });\r\n\r\n    forging_recipes.components[\"Glove exterior\"] = new ComponentRecipe({\r\n        name: \"Glove exterior\",\r\n        materials: [\r\n            {material_id: \"Iron chainmail\", count: 3, result_id: \"Iron chainmail glove\"},\r\n            {material_id: \"Steel chainmail\", count: 3, result_id: \"Steel chainmail glove\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"Glove exterior\",\r\n    });\r\n\r\n    crafting_recipes.components[\"Shoes exterior\"] = new ComponentRecipe({\r\n        name: \"Shoes exterior\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 3, result_id: \"Wolf leather shoe armor\"}, \r\n            {material_id: \"Piece of boar leather\", count: 3, result_id: \"Boar leather shoe armor\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Crafting\",\r\n        component_type: \"shoes exterior\",\r\n    });\r\n\r\n    forging_recipes.components[\"Shoes exterior\"] = new ComponentRecipe({\r\n        name: \"Shoes exterior\",\r\n        materials: [\r\n            {material_id: \"Iron chainmail\", count: 3, result_id: \"Iron chainmail shoes\"},\r\n            {material_id: \"Steel chainmail\", count: 3, result_id: \"Steel chainmail shoes\"},\r\n        ],\r\n        item_type: \"Component\",\r\n        recipe_skill: \"Forging\",\r\n        component_type: \"shoes exterior\",\r\n    });\r\n\r\n\r\n})();\r\n\r\n//equipment\r\n(()=>{\r\n    //full weapons\r\n    crafting_recipes.equipment[\"Axe\"] = new EquipmentRecipe({\r\n        name: \"Axe\",\r\n        components: [\"axe head\", \"medium handle\"],\r\n        item_type: \"Weapon\",\r\n    });\r\n    crafting_recipes.equipment[\"Dagger\"] = new EquipmentRecipe({\r\n        name: \"Dagger\",\r\n        components: [\"short blade\", \"short handle\"],\r\n        item_type: \"Weapon\",\r\n    });\r\n    crafting_recipes.equipment[\"Hammer\"] = new EquipmentRecipe({\r\n        name: \"Hammer\",\r\n        components: [\"hammer head\", \"medium handle\"],\r\n        item_type: \"Weapon\",\r\n    });\r\n    crafting_recipes.equipment[\"Spear\"] = new EquipmentRecipe({\r\n        name: \"Spear\",\r\n        components: [\"short blade\", \"long handle\"],\r\n        item_type: \"Weapon\",\r\n    });\r\n    crafting_recipes.equipment[\"Sword\"] = new EquipmentRecipe({\r\n        name: \"Sword\",\r\n        components: [\"long blade\", \"short handle\"],\r\n        item_type: \"Weapon\",\r\n    });\r\n\r\n    //full shields\r\n    crafting_recipes.equipment[\"Shield\"] = new EquipmentRecipe({\r\n        name: \"Shield\",\r\n        components: [\"shield base\",\"shield handle\"],\r\n        item_type: \"Shield\",\r\n    });\r\n\r\n    //full armor\r\n    crafting_recipes.equipment[\"Helmet\"] = new EquipmentRecipe({\r\n        name: \"Helmet\",\r\n        components: [\"helmet interior\", \"helmet exterior\"],\r\n        item_type: \"Armor\",\r\n    });\r\n    crafting_recipes.equipment[\"Chestplate\"] = new EquipmentRecipe({\r\n        name: \"Chestplate\",\r\n        components: [\"chestplate interior\", \"chestplate exterior\"],\r\n        item_type: \"Armor\",\r\n    });\r\n    crafting_recipes.equipment[\"Leg armor\"] = new EquipmentRecipe({\r\n        name: \"Leg armor\",\r\n        components: [\"leg armor interior\", \"leg armor exterior\"],\r\n        item_type: \"Armor\",\r\n    });\r\n    crafting_recipes.equipment[\"Gauntlets\"] = new EquipmentRecipe({\r\n        name: \"Gauntlets\",\r\n        components: [\"glove interior\", \"glove exterior\"],\r\n        item_type: \"Armor\",\r\n    });\r\n    crafting_recipes.equipment[\"Armored shoes\"] = new EquipmentRecipe({\r\n        name: \"Armored shoes\",\r\n        components: [\"shoes interior\", \"shoes exterior\"],\r\n        item_type: \"Armor\",\r\n    });\r\n})();\r\n    \r\n//clothes (which is also equipment, but also components, therefore separate)\r\n(()=>{\r\n    crafting_recipes.equipment[\"Hat\"] = new ComponentRecipe({\r\n        name: \"Hat\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 3, result_id: \"Leather hat\"},\r\n            {material_id: \"Wool cloth\", count: 3, result_id: \"Wool hat\"},\r\n            {material_id: \"Piece of goat leather\", count: 3, result_id: \"Goat leather hat\"},\r\n        ],\r\n        item_type: \"Armor\",\r\n        component_type: \"helmet interior\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n\r\n    crafting_recipes.equipment[\"Shirt\"] = new ComponentRecipe({\r\n        name: \"Shirt\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf rat leather\", count: 5, result_id: \"Cheap leather vest\"},\r\n            {material_id: \"Piece of wolf leather\", count: 5, result_id: \"Leather vest\"},\r\n            {material_id: \"Wool cloth\", count: 5, result_id: \"Wool shirt\"},\r\n            {material_id: \"Piece of goat leather\", count: 5, result_id: \"Goat leather vest\"},\r\n        ],\r\n        item_type: \"Armor\",\r\n        component_type: \"chestplate interior\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n\r\n    crafting_recipes.equipment[\"Pants\"] = new ComponentRecipe({\r\n        name: \"Pants\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf rat leather\", count: 3, result_id: \"Cheap leather pants\"},\r\n            {material_id: \"Piece of wolf leather\", count: 3, result_id: \"Leather pants\"},\r\n            {material_id: \"Wool cloth\", count: 3, result_id: \"Wool pants\"},\r\n            {material_id: \"Piece of goat leather\", count: 3, result_id: \"Goat leather pants\"},\r\n        ],\r\n        item_type: \"Armor\",\r\n        component_type: \"leg armor interior\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n\r\n    crafting_recipes.equipment[\"Gloves\"] = new ComponentRecipe({\r\n        name: \"Gloves\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf leather\", count: 2, result_id: \"Leather gloves\"},\r\n            {material_id: \"Wool cloth\", count: 2, result_id: \"Wool gloves\"},\r\n            {material_id: \"Piece of goat leather\", count: 2, result_id: \"Goat leather gloves\"},\r\n        ],\r\n        item_type: \"Armor\",\r\n        component_type: \"glove interior\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n\r\n    crafting_recipes.equipment[\"Shoes\"] = new ComponentRecipe({\r\n        name: \"Shoes\",\r\n        materials: [\r\n            {material_id: \"Piece of wolf rat leather\", count: 2, result_id: \"Cheap leather shoes\"},\r\n            {material_id: \"Piece of wolf leather\", count: 2, result_id: \"Leather shoes\"},\r\n            {material_id: \"Piece of goat leather\", count: 2, result_id: \"Goat leather shoes\"},\r\n        ],\r\n        item_type: \"Armor\",\r\n        component_type: \"shoes interior\",\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    \r\n})();\r\n\r\n//materials\r\n(function(){\r\n    crafting_recipes.items[\"Piece of wolf rat leather\"] = new ItemRecipe({\r\n        name: \"Piece of wolf rat leather\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Rat pelt\", count: 8}], \r\n        result: {result_id: \"Piece of wolf rat leather\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [1,5],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Piece of wolf leather\"] = new ItemRecipe({\r\n        name: \"Piece of wolf leather\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Wolf pelt\", count: 8}], \r\n        result: {result_id: \"Piece of wolf leather\", count: 1},\r\n        success_chance: [0.2,1],\r\n        recipe_skill: \"Crafting\",\r\n        recipe_level: [1,10],\r\n    });\r\n    crafting_recipes.items[\"Piece of boar leather\"] = new ItemRecipe({\r\n        name: \"Piece of boar leather\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Boar hide\", count: 8}],\r\n        result: {result_id: \"Piece of boar leather\", count: 1},\r\n        success_chance: [0.2,1],\r\n        recipe_skill: \"Crafting\",\r\n        recipe_level: [5,15],\r\n    });\r\n    crafting_recipes.items[\"Piece of goat leather\"] = new ItemRecipe({\r\n        name: \"Piece of goat leather\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Mountain goat hide\", count: 8}],\r\n        result: {result_id: \"Piece of goat leather\", count: 1},\r\n        success_chance: [0.2,1],\r\n        recipe_skill: \"Crafting\",\r\n        recipe_level: [5,15],\r\n    });\r\n    crafting_recipes.items[\"Wool cloth\"] = new ItemRecipe({\r\n        name: \"Wool cloth\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Wool\", count: 5}], \r\n        result: {result_id: \"Wool cloth\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_skill: \"Crafting\",\r\n        recipe_level: [5,15],\r\n    });\r\n    forging_recipes.items[\"Iron chainmail\"] = new ItemRecipe({\r\n        name: \"Iron chainmail\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Iron ingot\", count: 5}], \r\n        result: {result_id: \"Iron chainmail\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_skill: \"Forging\",\r\n        recipe_level: [5,15],\r\n    });\r\n    forging_recipes.items[\"Steel chainmail\"] = new ItemRecipe({\r\n        name: \"Steel chainmail\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Steel ingot\", count: 5}], \r\n        result: {result_id: \"Steel chainmail\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_skill: \"Forging\",\r\n        recipe_level: [10,20],\r\n    });\r\n\r\n    crafting_recipes.items[\"Rat meat chunks\"] = new ItemRecipe({\r\n        name: \"Rat meat chunks\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Rat tail\", count: 3}],\r\n        result: {result_id: \"Rat meat chunks\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [1,5],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n\r\n    smelting_recipes.items[\"Low quality iron ingot\"] = new ItemRecipe({\r\n        name: \"Low quality iron ingot\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Low quality iron ore\", count: 5}, {material_type: \"coal\", count: 1}], \r\n        result: {result_id: \"Low quality iron ingot\", count: 1},\r\n        success_chance: [0.6,1],\r\n        recipe_level: [1,5],\r\n        recipe_skill: \"Smelting\",\r\n    });\r\n    smelting_recipes.items[\"Iron ingot\"] = new ItemRecipe({\r\n        name: \"Iron ingot\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Iron ore\", count: 5}, {material_type: \"coal\", count: 1}], \r\n        result: {result_id: \"Iron ingot\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [5,15],\r\n        recipe_skill: \"Smelting\",\r\n    });\r\n    smelting_recipes.items[\"Steel ingot (inefficient)\"] = new ItemRecipe({\r\n        name: \"Steel ingot (inefficient)\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Iron ore\", count: 5}, {material_id: \"Atratan ore\", count: 4}, {material_type: \"coal\", count: 2}],\r\n        result: {result_id: \"Steel ingot\", count: 1},\r\n        success_chance: [0.3,1],\r\n        recipe_level: [10,20],\r\n        recipe_skill: \"Smelting\",\r\n        is_unlocked: false,\r\n    });\r\n\r\n    crafting_recipes.items[\"Processed rough wood\"] = new ItemRecipe({\r\n        name: \"Processed rough wood\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Piece of rough wood\", count: 5}], \r\n        result: {result_id: \"Processed rough wood\", count: 1},\r\n        success_chance: [0.6,1],\r\n        recipe_level: [1,5],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Processed wood\"] = new ItemRecipe({\r\n        name: \"Processed wood\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Piece of wood\", count: 5}], \r\n        result: {result_id: \"Processed wood\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [5,15],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Processed ash wood\"] = new ItemRecipe({\r\n        name: \"Processed ash wood\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Piece of ash wood\", count: 5}], \r\n        result: {result_id: \"Processed ash wood\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [10,20],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Processed weak monster bone\"] = new ItemRecipe({\r\n        name: \"Processed weak monster bone\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Weak monster bone\", count: 5}], \r\n        result: {result_id: \"Processed weak monster bone\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_level: [10,20],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    smelting_recipes.items[\"Charcoal\"] = new ItemRecipe({\r\n        name: \"Charcoal\",\r\n        recipe_type: \"material\",\r\n        materials: [{material_type: \"raw wood\", count: 5}],\r\n        result: {result_id: \"Charcoal\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [1,10],\r\n        recipe_skill: \"Smelting\",\r\n    });\r\n    cooking_recipes.items[\"Animal fat\"] = new ItemRecipe({\r\n        name: \"Animal fat\",\r\n        is_unlocked: false,\r\n        recipe_type: \"usable\",\r\n        materials: [{material_id: \"Boar meat\", count: 3}], \r\n        result: {result_id: \"Animal fat\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_level: [7,20],\r\n        recipe_skill: \"Cooking\",\r\n    });\r\n\r\n    crafting_recipes.items[\"High quality wolf fang\"] = new ItemRecipe({\r\n        name: \"High quality wolf fang\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Wolf fang\", count: 50}],\r\n        result: {result_id: \"High quality wolf fang\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [1,7],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"High quality boar tusk\"] = new ItemRecipe({\r\n        name: \"High quality boar tusk\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Boar tusk\", count: 50}], \r\n        result: {result_id: \"High quality boar tusk\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [5,12],\r\n        recipe_skill: \"Crafting\",\r\n    }); \r\n    crafting_recipes.items[\"Pristine mountain goat horn\"] = new ItemRecipe({\r\n        name: \"Pristine mountain goat horn\",\r\n        is_unlocked: false,\r\n        recipe_type: \"material\",\r\n        materials: [{material_id: \"Mountain goat horn\", count: 50}], \r\n        result: {result_id: \"Pristine mountain goat horn\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [10,17],\r\n        recipe_skill: \"Crafting\",\r\n    }); \r\n})();\r\n\r\n//consumables\r\n(function(){\r\n    cooking_recipes.items[\"Roasted rat meat\"] = new ItemRecipe({\r\n        name: \"Roasted rat meat\",\r\n        recipe_type: \"usable\",\r\n        materials: [{material_id: \"Rat meat chunks\", count: 2}], \r\n        result: {result_id: \"Roasted rat meat\", count: 1},\r\n        success_chance: [0.7,1],\r\n        recipe_level: [1,5],\r\n        recipe_skill: \"Cooking\",\r\n    });\r\n    cooking_recipes.items[\"Roasted purified rat meat\"] = new ItemRecipe({\r\n        name: \"Roasted purified rat meat\",\r\n        recipe_type: \"usable\",\r\n        materials: [{material_id: \"Rat meat chunks\", count: 2},\r\n                    {material_id: \"Belmart leaf\", count: 1},\r\n        ],\r\n        result: {result_id: \"Roasted purified rat meat\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [1,10],\r\n        recipe_skill: \"Cooking\",\r\n    });\r\n    cooking_recipes.items[\"Fried pork\"] = new ItemRecipe({\r\n        name: \"Fried pork\",\r\n        recipe_type: \"usable\",\r\n        materials: [{material_id: \"Boar meat\", count: 2}], \r\n        result: {result_id: \"Fried pork\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [7,15],\r\n        recipe_skill: \"Cooking\",\r\n    });\r\n    cooking_recipes.items[\"Fried goat meat\"] = new ItemRecipe({\r\n        name: \"Fried goat meat\",\r\n        recipe_type: \"usable\",\r\n        materials: [{material_id: \"Goat meat\", count: 2}], \r\n        result: {result_id: \"Fried goat meat\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [10,15],\r\n        recipe_skill: \"Cooking\",\r\n    });\r\n    alchemy_recipes.items[\"Weak healing powder\"] = new ItemRecipe({\r\n        name: \"Weak healing powder\",\r\n        recipe_type: \"usable\",\r\n        is_unlocked: false,\r\n        materials: [{material_id: \"Golmoon leaf\", count: 5}],\r\n        result: {result_id: \"Weak healing powder\", count: 1},\r\n        success_chance: [0.4,1],\r\n        recipe_level: [1,10],\r\n        recipe_skill: \"Alchemy\",\r\n    });\r\n    alchemy_recipes.items[\"Healing powder\"] = new ItemRecipe({\r\n        name: \"Healing powder\",\r\n        recipe_type: \"usable\",\r\n        is_unlocked: false,\r\n        materials: [{material_id: \"Golmoon leaf\", count: 3}, {material_id: \"Silver thistle\", count: 3}],\r\n        result: {result_id: \"Healing powder\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_level: [5,15],\r\n        recipe_skill: \"Alchemy\",\r\n    });\r\n    alchemy_recipes.items[\"Oneberry juice\"] = new ItemRecipe({\r\n        name: \"Oneberry juice\",\r\n        recipe_type: \"usable\",\r\n        is_unlocked: false,\r\n        materials: [{material_id: \"Oneberry\", count: 10},\r\n                    {material_id: \"Glass phial\", count: 1},\r\n        ],\r\n        result: {result_id: \"Oneberry juice\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [2,12],\r\n        recipe_skill: \"Alchemy\",\r\n    });\r\n    alchemy_recipes.items[\"Healing potion\"] = new ItemRecipe({\r\n        name: \"Healing potion\",\r\n        recipe_type: \"usable\",\r\n        is_unlocked: false,\r\n        materials: [{material_id: \"Oneberry\", count: 8},\r\n                    {material_id: \"Silver thistle\", count: 4},\r\n                    {material_id: \"Glass phial\", count: 1},\r\n        ],\r\n        result: {result_id: \"Healing potion\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_level: [7,17],\r\n        recipe_skill: \"Alchemy\",\r\n    });\r\n    alchemy_recipes.items[\"Healing balm\"] = new ItemRecipe({\r\n        name: \"Healing balm\",\r\n        recipe_type: \"usable\",\r\n        is_unlocked: false,\r\n        materials: [{material_id: \"Oneberry\", count: 10},\r\n                    {material_id: \"Golmoon leaf\", count: 5},\r\n                    {material_id: \"Animal fat\", count: 1},\r\n        ],\r\n        result: {result_id: \"Healing balm\", count: 1},\r\n        success_chance: [0.1,1],\r\n        recipe_level: [7,15],\r\n        recipe_skill: \"Alchemy\",\r\n    });\r\n})();\r\n\r\n//trinkets\r\n(function(){\r\n    crafting_recipes.items[\"Wolf trophy\"] = new ItemRecipe({\r\n        name: \"Wolf trophy\",\r\n        id: \"Wolf trophy\",\r\n        recipe_type: \"equipment\",\r\n        materials: [{material_id: \"High quality wolf fang\", count: 5}],\r\n        result: {result_id: \"Wolf trophy\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [1,10],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Boar trophy\"] = new ItemRecipe({\r\n        name: \"Boar trophy\",\r\n        id: \"Boar trophy\",\r\n        recipe_type: \"equipment\",\r\n        materials: [{material_id: \"High quality boar tusk\", count: 5}],\r\n        result: {result_id: \"Boar trophy\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [5,15],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n    crafting_recipes.items[\"Mountain goat trophy\"] = new ItemRecipe({\r\n        name: \"Mountain goat trophy\",\r\n        recipe_type: \"equipment\",\r\n        materials: [{material_id: \"Pristine mountain goat horn\", count: 5}],\r\n        result: {result_id: \"Mountain goat trophy\", count: 1},\r\n        success_chance: [0.5,1],\r\n        recipe_level: [10,20],\r\n        recipe_skill: \"Crafting\",\r\n    });\r\n})();\r\n\r\nconst recipes = {\r\n    crafting: crafting_recipes, \r\n    cooking: cooking_recipes, \r\n    smelting: smelting_recipes, \r\n    forging: forging_recipes, \r\n    alchemy: alchemy_recipes\r\n}\r\n\r\nexport {recipes, get_recipe_xp_value, get_crafting_quality_caps}\r\n", "\r\nconst effect_templates = {}; \r\n//templates, since some effects will appear across multiple items but with different durations\r\n\r\nclass ActiveEffect {\r\n    /**\r\n     * \r\n     * @param {Object} effect_data\r\n     * @param {String} effect_data.name\r\n     * @param {String} [effect_data.id]\r\n     * @param {Number} effect_data.duration\r\n     * @param {Object} effect_data.effects {stats}\r\n     */\r\n    constructor({name, id, duration, effects, tags, potency}) {\r\n        this.name = name;\r\n        this.id = id || name;\r\n        this.duration = duration ?? 0;\r\n        this.effects = effects;\r\n        if(!this.effects.bonus_skill_levels) {\r\n            this.effects.bonus_skill_levels = {};\r\n        }\r\n        if(!this.effects.stats) {\r\n            this.effects.stats = {};\r\n        }\r\n        this.tags = tags || {};\r\n        this.tags[\"effect\"] = true;\r\n        this.potency = potency || 0;\r\n        //todo: implement buff/debuff removal; use potency to check if effect A should remove effect B (the stronger survives)\r\n    }\r\n}\r\n\r\neffect_templates[\"Basic meal\"] = new ActiveEffect({\r\n    name: \"Basic meal\",\r\n    effects: {\r\n        stats: {\r\n            stamina_regeneration_flat: {flat: 1},\r\n        }\r\n    },\r\n    tags: {\"buff\": true},\r\n});\r\n\r\neffect_templates[\"Weak healing powder\"] = new ActiveEffect({\r\n    name: \"Weak healing powder\",\r\n    effects: {\r\n        stats: {\r\n            health_regeneration_flat: {flat: 2},\r\n        }\r\n    },\r\n    tags: {\"buff\": true, \"medicine\": true},\r\n});\r\neffect_templates[\"Healing powder\"] = new ActiveEffect({\r\n    name: \"Healing powder\",\r\n    effects: {\r\n        stats: {\r\n            health_regeneration_flat: {flat: 5},\r\n        }\r\n    },\r\n    tags: {\"buff\": true, \"medicine\": true},\r\n});\r\neffect_templates[\"Weak healing potion\"] = new ActiveEffect({\r\n    name: \"Weak healing potion\",\r\n    effects: {\r\n        stats: {\r\n            health_regeneration_flat: {flat: 8},\r\n            health_regeneration_percent: {flat: 1},\r\n        }\r\n    },\r\n    tags: {\"buff\": true, \"medicine\": true},\r\n});\r\neffect_templates[\"Healing potion\"] = new ActiveEffect({\r\n    name: \"Healing potion\",\r\n    effects: {\r\n        stats: {\r\n            health_regeneration_flat: {flat: 20},\r\n            health_regeneration_percent: {flat: 2},\r\n        }\r\n    },\r\n    tags: {\"buff\": true, \"medicine\": true},\r\n});\r\neffect_templates[\"Weak healing balm\"] = new ActiveEffect({\r\n    name: \"Weak healing balm\",\r\n    effects: {\r\n        stats: {\r\n            health_regeneration_flat: {flat: 5},\r\n            health_regeneration_percent: {flat: 0.5},\r\n        }\r\n    },\r\n    tags: {\"buff\": true, \"medicine\": true},\r\n});\r\n\r\neffect_templates[\"Cheap meat meal\"] = new ActiveEffect({\r\n    name: \"Cheap meat meal\",\r\n    effects: {\r\n        stats: {\r\n            stamina_regeneration_flat: {flat: 2},\r\n        }\r\n    },\r\n    tags: {\"buff\": true},\r\n});\r\neffect_templates[\"Simple meat meal\"] = new ActiveEffect({\r\n    name: \"Simple meat meal\",\r\n    effects: {\r\n        stats: {\r\n            stamina_regeneration_flat: {flat: 3},\r\n            health_regeneration_flat: {flat: 1},\r\n        }\r\n    },\r\n    tags: {\"buff\": true},\r\n});\r\neffect_templates[\"Slight food poisoning\"] = new ActiveEffect({\r\n    name: \"Slight food poisoning\",\r\n    effects: {\r\n        stats: {\r\n            health_loss_flat: {flat: -0.5},\r\n        }\r\n    },\r\n    tags: {\"debuff\": true, \"poison\": true},\r\n});\r\n\r\nexport {effect_templates, ActiveEffect};", "import { InventoryHaver } from \"./inventory.js\";\r\nimport { exit_displayed_storage, update_displayed_storage } from \"./display.js\";\r\nimport { add_to_character_inventory, remove_from_character_inventory, character } from \"./character.js\";\r\n\r\nconst player_storage = new InventoryHaver();\r\nlet storage_open = false;\r\n\r\n/**\r\n * @param {Array} items [{item_key, item_count}]\r\n */\r\nfunction add_to_storage(items) {\r\n    player_storage.add_to_inventory(items);\r\n\r\n    update_displayed_storage();\r\n}\r\n\r\n/**\r\n * @param {Array} items [{item_key, count}]\r\n */\r\nfunction remove_from_storage(items) {\r\n    player_storage.remove_from_inventory(items);\r\n    \r\n    update_displayed_storage();\r\n}\r\n\r\n//kinda pointless but keep it in case there are changes\r\nfunction open_storage(items) {\r\n    update_displayed_storage(items);\r\n    storage_open = true;\r\n}\r\n\r\n//kinda pointless but keep it in case there are changes\r\nfunction close_storage(items) {\r\n    exit_displayed_storage(items);\r\n    storage_open = false;\r\n}\r\n\r\n/**\r\n * @param {Object} item {item_key, count}\r\n */\r\nfunction move_item_to_storage(item) {\r\n    let count = Math.min(item.count, character.inventory[item.item_key].count);\r\n    remove_from_character_inventory([{...item, item_count: count}]);\r\n    add_to_storage([{...item, count}]);\r\n}\r\n\r\n/**\r\n * @param {Array} item [{item_key, item_count}]\r\n */\r\nfunction remove_item_from_storage(item) {\r\n    let count = Math.min(item.count, player_storage.inventory[item.item_key].count);\r\n    add_to_character_inventory([{...item, count}]);\r\n    remove_from_storage([{...item, item_count: count}]);\r\n}\r\n\r\nfunction is_storage_open() {\r\n    return storage_open;\r\n}\r\n\r\nexport {\r\n    player_storage, \r\n    add_to_storage, remove_from_storage, open_storage, close_storage,\r\n    move_item_to_storage, remove_item_from_storage, is_storage_open\r\n}", "\"use strict\";\r\n\r\nimport { traders } from \"./traders.js\";\r\nimport { current_trader, to_buy, to_sell } from \"./trade.js\";\r\nimport { skills, get_unlocked_skill_rewards, get_next_skill_milestone } from \"./skills.js\";\r\nimport { character, get_skill_xp_gain, get_hero_xp_gain, get_skills_overall_xp_gain, get_total_skill_coefficient, get_total_skill_level, get_effect_with_bonuses } from \"./character.js\";\r\nimport { current_enemies, options, \r\n    can_work, current_location, \r\n    active_effects, enough_time_for_earnings, \r\n    get_current_book, last_location_with_bed, \r\n    last_combat_location, faved_stances, \r\n    selected_stance, \r\n    global_flags,\r\n    unlocked_beds,\r\n    favourite_consumables} from \"./main.js\";\r\nimport { dialogues } from \"./dialogues.js\";\r\nimport { activities } from \"./activities.js\";\r\nimport { format_time, current_game_time, is_night } from \"./game_time.js\";\r\nimport { book_stats, item_templates, Weapon, Armor, Shield, rarity_multipliers, getItemRarity, getItemFromKey } from \"./items.js\";\r\nimport { favourite_locations, get_location_type_penalty, location_types, locations } from \"./locations.js\";\r\nimport { enemy_killcount, enemy_templates } from \"./enemies.js\";\r\nimport { expo, format_reading_time, stat_names, get_hit_chance, round_item_price, format_working_time } from \"./misc.js\"\r\n//import { stances } from \"./combat_stances.js\";\r\nimport { get_recipe_xp_value, recipes } from \"./crafting_recipes.js\";\r\nimport { effect_templates } from \"./active_effects.js\";\r\nimport { player_storage } from \"./storage.js\";\r\n\r\nlet activity_anim; //for the activity and locationAction animation interval\r\n\r\nlet location_choice_divs = {}; //for dropdowns\r\nconst action_div = document.getElementById(\"location_actions_div\");\r\nconst trade_div = document.getElementById(\"trade_div\");\r\nconst storage_div = document.getElementById(\"storage_div\");\r\n\r\nconst location_name_span = document.getElementById(\"location_name_span\");\r\nconst location_icon_span = document.getElementById(\"location_icon_span\");\r\nconst location_types_div = document.getElementById(\"location_types_div\");\r\nconst location_tooltip = document.getElementById(\"location_name_tooltip\");\r\n\r\n//inventory display\r\nconst inventory_div = document.getElementById(\"inventory_content_div\");\r\nlet item_divs = {};\r\nlet trader_item_divs = {};\r\nlet storage_item_divs = {};\r\nlet item_buying_divs = {};\r\nlet item_selling_divs = {};\r\nconst trader_inventory_div = document.getElementById(\"trader_inventory_div\");\r\nconst storage_inventory_div = document.getElementById(\"storage_inventory_div\");\r\n\r\n//message log\r\nconst message_log = document.getElementById(\"message_box_div\");\r\n\r\n//enemy info\r\nconst combat_div = document.getElementById(\"combat_div\");\r\nconst enemies_div = document.getElementById(\"enemies_div\");\r\n\r\nconst enemy_count_div = document.getElementById(\"enemy_count_div\");\r\n\r\n//character health display\r\nconst current_health_value_div = document.getElementById(\"character_health_value\");\r\nconst current_health_bar = document.getElementById(\"character_healthbar_current\");\r\n\r\n//character stamina display\r\nconst current_stamina_value_div = document.getElementById(\"character_stamina_value\");\r\nconst current_stamina_bar = document.getElementById(\"character_stamina_bar_current\");\r\n\r\n//character xp display\r\nconst character_xp_div = document.getElementById(\"character_xp_div\");\r\nconst character_level_div = document.getElementById(\"character_level_div\");\r\n\r\n//active effects display\r\nconst active_effects_tooltip = document.getElementById(\"effects_tooltip\");\r\nconst active_effect_count = document.getElementById(\"active_effect_count\");\r\n\r\nconst time_field = document.getElementById(\"time_div\");\r\n\r\nconst skill_bar_divs = {};\r\nconst skill_list = document.getElementById(\"skill_list\");\r\n\r\nconst stance_bar_divs = {};\r\nconst stance_list = document.getElementById(\"stance_list\");\r\n\r\nconst bestiary_entry_divs = {};\r\nconst bestiary_list = document.getElementById(\"bestiary_list\");\r\n\r\nconst combat_switch = document.getElementById(\"switch_to_combat\")\r\nconst inventory_switch = document.getElementById(\"switch_to_inventory\")\r\n\r\nconst data_entry_divs = {\r\n                            character: document.getElementById(\"character_xp_multiplier\"),\r\n                            skills: document.getElementById(\"skills_xp_multiplier\"),\r\n                            stamina: document.getElementById(\"stamina_efficiency_multiplier\")\r\n                        };\r\n\r\nlet skill_sorting = \"name\";\r\nlet skill_sorting_direction = \"asc\";\r\n\r\nlet trader_inventory_sorting = \"name\";\r\nlet trader_inventory_sorting_direction = \"asc\";\r\n\r\nlet storage_sorting = \"name\";\r\nlet storage_sorting_direction = \"asc\";\r\n\r\nlet character_inventory_sorting = \"name\";\r\nlet character_inventory_sorting_direction = \"asc\";\r\n\r\nconst message_count = {\r\n    message_combat: 0,\r\n    message_unlocks: 0,\r\n    message_loot: 0,\r\n    message_events: 0,\r\n    message_background: 0,\r\n    message_crafting: 0,\r\n};\r\n\r\nconst stats_divs = {strength: document.getElementById(\"strength_slot\"), agility: document.getElementById(\"agility_slot\"),\r\n                    dexterity: document.getElementById(\"dexterity_slot\"), intuition: document.getElementById(\"intuition_slot\"),\r\n                    magic: document.getElementById(\"magic_slot\"), \r\n                    attack_speed: document.getElementById(\"attack_speed_slot\"), attack_power: document.getElementById(\"attack_power_slot\"), \r\n                    defense: document.getElementById(\"defense_slot\"), crit_rate: document.getElementById(\"crit_rate_slot\"), \r\n                    crit_multiplier: document.getElementById(\"crit_multiplier_slot\")\r\n                    };\r\n\r\nconst other_combat_divs = {attack_points: document.getElementById(\"hit_chance_slot\"), defensive_action: document.getElementById(\"defensive_action_slot\"),\r\n                           defensive_points: document.getElementById(\"defensive_action_chance_slot\")\r\n                          };\r\n\r\nlet effect_divs = {};\r\n\r\nconst character_attack_bar = document.getElementById(\"character_attack_bar\");\r\n\r\n//equipment slots\r\nconst equipment_slots_divs = {head: document.getElementById(\"head_slot\"), torso: document.getElementById(\"torso_slot\"),\r\n                              arms: document.getElementById(\"arms_slot\"), ring: document.getElementById(\"ring_slot\"),\r\n                              weapon: document.getElementById(\"weapon_slot\"), \"off-hand\": document.getElementById(\"off-hand_slot\"),\r\n                              legs: document.getElementById(\"legs_slot\"), feet: document.getElementById(\"feet_slot\"),\r\n                              amulet: document.getElementById(\"amulet_slot\"), artifact: document.getElementById(\"artifact_slot\"),\r\n                              pickaxe: document.getElementById(\"pickaxe_slot\"),\r\n                              axe: document.getElementById(\"axe_slot\"),\r\n                              sickle: document.getElementById(\"sickle_slot\"),\r\n};\r\n\r\nconst rarity_colors = {\r\n    trash: \"lightgray\",\r\n    common: \"white\",\r\n    uncommon: \"lightgreen\",\r\n    rare: \"blue\",\r\n    epic: \"pink\",\r\n    legendary: \"purple\",\r\n    mythical: \"orange\"\r\n}\r\n\r\nconst crafting_pages = {\r\n    crafting: {\r\n        items: document.querySelector(`[data-crafting_category=\"crafting\"] [data-crafting_subcategory=\"items\"]`),\r\n        components: document.querySelector(`[data-crafting_category=\"crafting\"] [data-crafting_subcategory=\"components\"]`),\r\n        equipment: document.querySelector(`[data-crafting_category=\"crafting\"] [data-crafting_subcategory=\"equipment\"]`),\r\n    },\r\n    cooking: {\r\n        items: document.querySelector(`[data-crafting_category=\"cooking\"] [data-crafting_subcategory=\"items\"]`),\r\n    },\r\n    smelting: {\r\n        items: document.querySelector(`[data-crafting_category=\"smelting\"] [data-crafting_subcategory=\"items\"]`),\r\n    },\r\n    forging: {\r\n        items: document.querySelector(`[data-crafting_category=\"forging\"] [data-crafting_subcategory=\"items\"]`),\r\n        components: document.querySelector(`[data-crafting_category=\"forging\"] [data-crafting_subcategory=\"components\"]`),\r\n    },\r\n    alchemy: {\r\n        items: document.querySelector(`[data-crafting_category=\"alchemy\"] [data-crafting_subcategory=\"items\"]`),\r\n    }\r\n}\r\n\r\nconst backup_load_button = document.getElementById(\"backup_load_button\");\r\nconst other_save_load_button = document.getElementById(\"import_other_save_button\");\r\n\r\n\r\nfunction capitalize_first_letter(some_string) {\r\n    return some_string.charAt(0).toUpperCase() + some_string.slice(1);\r\n}\r\n\r\nfunction clear_skill_bars() {\r\n    Object.keys(skill_bar_divs).forEach(function(key) {\r\n        delete skill_bar_divs[key];\r\n    });\r\n}\r\n\r\nfunction clear_action_div() {\r\n    while(action_div.lastElementChild) {\r\n        action_div.removeChild(action_div.lastElementChild);\r\n        location_choice_divs = {};\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Item} item\r\n * @param {Object} options\r\n * @param {String} options.class_name\r\n * @param {Boolean} options.skip_quality\r\n * @param {Array} options.quality array with 1 or 2 values (1 - show only it, instead of item's; 2 - show start comparison between the two)\r\n */\r\nfunction create_item_tooltip(item, options = {}) {\r\n    let item_tooltip = document.createElement(\"span\");\r\n    item_tooltip.classList.add(options?.class_name || \"item_tooltip\");\r\n    item_tooltip.innerHTML = create_item_tooltip_content({item, options});\r\n    return item_tooltip;\r\n}\r\n\r\n/**\r\n * @param {Object} params\r\n * @param {Item} params.item\r\n * @param {Object} params.options\r\n * @param {String} params.options.class_name\r\n * @param {Boolean} params.options.skip_quality\r\n * @param {Array} params.options.quality array with 1 or 2 values (1 - show only it, instead of item's; 2 - show start comparison between the two)\r\n */\r\nfunction create_item_tooltip_content({item, options={}}) {\r\n    let item_tooltip = \"\";\r\n    item_tooltip = `<b>${item.getName()}</b>`;\r\n    if(item.description) {\r\n        item_tooltip += `<br>${item.description}`; \r\n    }\r\n\r\n    let quality = item.quality;\r\n\r\n    //add stats if can be equipped\r\n    if(item.item_type === \"EQUIPPABLE\"){ \r\n        if(options?.quality && options.quality[0]) {\r\n            quality = options.quality[0];\r\n        }\r\n\r\n        if(!options.skip_quality && options?.quality?.length == 2) {\r\n            item_tooltip += `<br><br><b>Quality: <span style=\"color: ${rarity_colors[item.getRarity(options.quality[0])]}\"> ${options.quality[0]}% </span> - <span style=\"color: ${rarity_colors[item.getRarity(options.quality[1])]}\"> ${options.quality[1]}% </span>`;\r\n            item_tooltip += `<br>[<span style=\"color: ${rarity_colors[item.getRarity(options.quality[0])]}\">${item.getRarity(options.quality[0])}</span>-<span style=\"color: ${rarity_colors[item.getRarity(options.quality[1])]}\">${item.getRarity(options.quality[1])}</span>] </b>`;\r\n        } else {\r\n            item_tooltip += `<br><br><b style=\"color: ${rarity_colors[item.getRarity(quality)]}\">Quality: ${quality}% [${item.getRarity(quality)}]</b>`;\r\n        }\r\n\r\n\r\n        item_tooltip += `<br><br>Slot: <b>${item.equip_slot}</b>`;\r\n        if(item.equip_slot === \"weapon\") {\r\n            item_tooltip += `<br>Type: <b>${item.weapon_type}</b>`;\r\n        }\r\n\r\n        if(item.components) {\r\n            let component_description = `<br><br><span class=\"item_component_list\">`;\r\n            const components = Object.keys(item.components);\r\n\r\n            if(item.components) {\r\n                component_description += `[${item_templates[item.components[components[0]]].name}]`;\r\n                if(!item.components[components[1]]) {\r\n                    component_description += `<br>+<br>no [${components[1]}]`;\r\n                } else {\r\n                    component_description += `<br>+<br>[${item_templates[item.components[components[1]]].name}]`;\r\n                }\r\n            }\r\n\r\n            component_description += `</span>`;\r\n            item_tooltip += component_description;\r\n        }\r\n\r\n        if(!options.skip_quality && options?.quality?.length == 2) {\r\n            if(item.getAttack) {\r\n                item_tooltip += \r\n                    `<br><br>Attack: ${Math.round(10*item.getAttack(options.quality[0]), true)/10} - ${Math.round(10*item.getAttack(options.quality[1], true))/10}`;\r\n            } else if(item.getDefense) { \r\n                item_tooltip += \r\n                `<br><br>Defense: ${Math.round(10*item.getDefense(options.quality[0]))/10} - ${Math.round(10*item.getDefense(options.quality[1]))/10}`;\r\n            } else if(item.offhand_type === \"shield\") {\r\n                item_tooltip += \r\n                `<br><br>Can block up to: ${Math.round(10*item.getShieldStrength(options.quality[0])*(character.stats.total_multiplier.block_strength))/10} - ${Math.round(10*item.getShieldStrength(options.quality[1])*(character.stats.total_multiplier.block_strength))/10} damage [base: ${item.getShieldStrength(options.quality[0])}-${item.getShieldStrength(options.quality[1])}]`;\r\n            }\r\n\r\n            const equip_stats_0 = item.getStats(options.quality[0]);\r\n            const equip_stats_1 = item.getStats(options.quality[1]);\r\n            if(Object.keys(equip_stats_0).length > 0) {\r\n                item_tooltip += `<br>`;\r\n            }\r\n            Object.keys(equip_stats_0).forEach(effect_key => {\r\n                if(equip_stats_0[effect_key].flat != null) {\r\n                    item_tooltip += \r\n                    `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: +${equip_stats_0[effect_key].flat} - ${equip_stats_1[effect_key].flat}`;\r\n                }\r\n                if(equip_stats_0[effect_key].multiplier != null) {\r\n                    item_tooltip += \r\n                    `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: x${equip_stats_0[effect_key].multiplier} - ${equip_stats_1[effect_key].multiplier}`;\r\n                }\r\n            });\r\n        } else {\r\n            if(item.getAttack) {\r\n                item_tooltip += \r\n                    `<br><br>Attack: ${Math.round(10*item.getAttack())/10}`;\r\n            } else if(item.getDefense) { \r\n                item_tooltip += \r\n                `<br><br>Defense: ${Math.round(10*item.getDefense())/10}`;\r\n            } else if(item.offhand_type === \"shield\") {\r\n                item_tooltip += \r\n                `<br><br>Can block up to: ${Math.round(10*item.getShieldStrength()*(character.stats.total_multiplier.block_strength))/10} damage [base: ${item.getShieldStrength()}]`;\r\n            }\r\n\r\n            const equip_stats = item.getStats();\r\n            if(Object.keys(equip_stats).length > 0) {\r\n                item_tooltip += `<br>`;\r\n            }\r\n            Object.keys(equip_stats).forEach(function(effect_key) {\r\n\r\n                if(equip_stats[effect_key].flat != null) {\r\n                    item_tooltip += \r\n                    `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: +${equip_stats[effect_key].flat}`;\r\n                }\r\n                if(equip_stats[effect_key].multiplier != null) {\r\n                    item_tooltip += \r\n                    `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: x${equip_stats[effect_key].multiplier}`;\r\n                }\r\n            });\r\n        }\r\n        const equip_bonus_skill_levels = item.getBonusSkillLevels();\r\n        if(Object.keys(equip_bonus_skill_levels).length > 0) {\r\n            item_tooltip += `<br>`;\r\n        }\r\n        Object.keys(equip_bonus_skill_levels).forEach(skill_key => {\r\n            if(skill_key.includes(\"category_\")) {\r\n                item_tooltip +=  `<br>${skill_key} skills level: +${equip_bonus_skill_levels[skill_key]}`;\r\n            } else {\r\n                item_tooltip +=  `<br>${skills[skill_key].name()} level: +${equip_bonus_skill_levels[skill_key]}`;\r\n            }\r\n        });\r\n\r\n        item_tooltip += \"<br>\";\r\n    } else if (item.item_type === \"USABLE\") {\r\n        item_tooltip += `<br>`;\r\n\r\n        if(item.effects.length > 0) {\r\n            item_tooltip += \"<br>Effects: \"\r\n        }\r\n        for(let i = 0; i < item.effects.length; i++) {\r\n            item_tooltip += create_effect_tooltip({effect_name: item.effects[i].effect, duration: item.effects[i].duration, add_bonus: true}).outerHTML;\r\n        }\r\n    } else if(item.item_type === \"BOOK\") {\r\n        if(!book_stats[item.name].is_finished) {\r\n            item_tooltip += `<br><br>Time to read: ${item.getRemainingTime()} minutes`;\r\n        }\r\n        else {\r\n            item_tooltip += `<br><br>Reading it provided ${character.name} with:`;\r\n            if(Object.keys(book_stats[item.name].bonuses).length > 0) {\r\n                item_tooltip += `<br>- ${format_book_bonuses(book_stats[item.name].bonuses)}`;\r\n            }\r\n            if(book_stats[item.name].rewards?.skills) {\r\n                if(book_stats[item.name].rewards.skills.length == 1) {\r\n                    item_tooltip += `<br>- a new skill.`;\r\n                } else {\r\n                    item_tooltip += `<br>- new skills.`;\r\n                }\r\n            }\r\n            if(book_stats[item.name].rewards?.recipes) {\r\n                if(book_stats[item.name].rewards.recipes.length == 1) {\r\n                    item_tooltip += `<br>- a new recipe.`;\r\n                } else {\r\n                    item_tooltip += `<br>- new recipes.`;\r\n                }\r\n            }\r\n        }\r\n        item_tooltip += \"<br>\";\r\n    } else if(item.tags.component) {\r\n        if(options?.quality && options.quality[0]) {\r\n            quality = options.quality[0];\r\n        }\r\n\r\n        if(!options.skip_quality && options?.quality?.length == 2) {\r\n            item_tooltip += `<br><br><b>Quality: <span style=\"color: ${rarity_colors[item.getRarity(options.quality[0])]}\"> ${options.quality[0]}% </span> - <span style=\"color: ${rarity_colors[item.getRarity(options.quality[1])]}\"> ${options.quality[1]}% </span>`;\r\n            item_tooltip += `<br>[<span style=\"color: ${rarity_colors[item.getRarity(options.quality[0])]}\"> ${item.getRarity(options.quality[0])}</span> - <span style=\"color: ${rarity_colors[item.getRarity(options.quality[1])]}\"> ${item.getRarity(options.quality[1])}</span>]</b>`;\r\n        } else {\r\n            item_tooltip += `<br><br><b style=\"color: ${rarity_colors[item.getRarity(quality)]}\">Quality: ${quality}% [${item.getRarity(quality)}]</b>`;\r\n        }\r\n        if(item.component_tier) {\r\n            item_tooltip += `<br><br>Component tier: ${item.component_tier}`;\r\n        }\r\n        if(Object.keys(item.component_stats).length > 0 || item?.attack_value !== 0 || item?.attack_multiplier !== 1 || item?.defense_value !== 0) {\r\n            item_tooltip += `<br><br>Basic stats: `;\r\n        }\r\n        if(item?.attack_value) {\r\n            item_tooltip += `<br>Attack power: +${item.attack_value}`;\r\n        }\r\n        if(item?.attack_multiplier && item.attack_multiplier !== 1) {\r\n            item_tooltip += `<br>Size-specific attack power: x${item.attack_multiplier}`;\r\n        }\r\n        if(item?.defense_value) {\r\n            item_tooltip += `<br>Defense: +${item.defense_value}`;\r\n        }\r\n\r\n        Object.keys(item.component_stats).forEach(function(effect_key) {\r\n            if(item.component_stats[effect_key].flat != null) {\r\n                item_tooltip += \r\n                `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: +${item.component_stats[effect_key].flat}`;\r\n            }\r\n            if(item.component_stats[effect_key].multiplier != null) {\r\n                item_tooltip += \r\n                `<br>${capitalize_first_letter(effect_key).replace(\"_\",\" \")}: x${item.component_stats[effect_key].multiplier}`;\r\n            }\r\n        });\r\n        item_tooltip += \"<br>\";\r\n    } else {\r\n        item_tooltip += \"<br>\";\r\n    }\r\n    if(item.material_type) {\r\n        item_tooltip += `<br>Material type: ${item.material_type}<br>`;\r\n    }\r\n\r\n    if(!options.skip_quality && options?.quality?.length == 2) { \r\n        item_tooltip += `<br>Value: ${format_money(round_item_price(item.getValue(options.quality[0])))} - ${format_money(round_item_price(item.getValue(options.quality[1])))}`;\r\n    } else {\r\n        item_tooltip += `<br>Value: ${format_money(round_item_price(item.getValue(quality) * ((options && options.trader) ? traders[current_trader].getProfitMargin() : 1) || 1))}`;\r\n    }\r\n    if(item.saturates_market) {\r\n        item_tooltip += ` [originally ${format_money(round_item_price(item.getBaseValue(quality) * ((options && options.trader) ? traders[current_trader].getProfitMargin() : 1) || 1))}]`\r\n    }\r\n\r\n    return item_tooltip;\r\n}\r\n\r\n/** \r\n * @param {Object} item_effect from item effects[]\r\n */\r\nfunction create_effect_tooltip({effect_name, duration, add_bonus=false}) {\r\n    const effect = effect_templates[effect_name];\r\n    const tooltip = document.createElement(\"div\");\r\n\r\n    tooltip.classList.add(\"active_effect_tooltip\");\r\n\r\n    const name_span = document.createElement(\"span\");\r\n    name_span.classList.add(\"active_effect_name\"); \r\n    name_span.innerHTML = `'${effect.name}' : `;\r\n    const duration_span = document.createElement(\"span\");\r\n    duration_span.classList.add(\"active_effect_duration\");\r\n    duration_span.innerHTML = \"\"+ format_time({time: {minutes: duration}});\r\n    const top_div = document.createElement(\"div\");\r\n    top_div.classList.add(\"active_effect_name_and_duration\");\r\n    top_div.appendChild(name_span);\r\n    top_div.appendChild(duration_span);\r\n    tooltip.appendChild(top_div);\r\n\r\n    const effects_div = document.createElement(\"div\");\r\n\r\n    let effects;\r\n    if(add_bonus) {\r\n        effects = get_effect_with_bonuses(effect);\r\n    } else {\r\n        effects = effect.effects;\r\n    }\r\n    for(const [key, stat_value] of Object.entries(effects.stats)) {\r\n        tooltip.innerHTML += `<br>${capitalize_first_letter(key.replaceAll(\"_\", \" \").replace(\"flat\",\"\").replace(\"percent\",\"\"))} `;\r\n        //for regeneration bonuses, it is assumed they are only flat and not multiplicative\r\n        if(key === \"health_regeneration_flat\" || key ===  \"stamina_regeneration_flat\" || key ===  \"mana_regeneration_flat\" || key === \"health_loss_flat\") \r\n        {   \r\n            const sign = stat_value.flat > 0? \"+\":\"\";\r\n            tooltip.innerHTML += `: ${sign}${Math.round(100*stat_value.flat)/100}`;\r\n        } else if(key === \"health_regeneration_percent\" || key === \"stamina_regeneration_percent\" || key === \"mana_regeneration_percent\" || key === \"health_loss_percent\") {\r\n            const sign = stat_value.percent > 0? \"+\":\"\";\r\n            tooltip.innerHTML += `: ${sign}${Math.round(100*stat_value.flat)/100}%`;\r\n        } else {\r\n            //\r\n        }\r\n    }\r\n\r\n    tooltip.appendChild(effects_div);\r\n    return tooltip;\r\n}\r\n\r\nfunction end_activity_animation(remove) {\r\n    clearInterval(activity_anim);\r\n    const div = document.getElementById(\"action_status_div\");\r\n    if(remove && div) {\r\n        div.innerHTML = \"\";\r\n    }\r\n}\r\n\r\n/**\r\n * writes message to the message log\r\n * @param {String} message_to_add text to display\r\n * @param {String} message_type used for adding proper class to html element\r\n */\r\n function log_message(message_to_add, message_type) {\r\n    if(typeof message_to_add === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    let message = document.createElement(\"div\");\r\n    message.classList.add(\"message_common\");\r\n\r\n    let class_to_add = \"message_default\";\r\n    let group_to_add = \"message_events\";\r\n\r\n    //selects proper class to add based on argument\r\n    switch(message_type) {\r\n        case \"enemy_defeated\":\r\n            class_to_add = \"message_victory\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"hero_defeat\":\r\n            class_to_add = \"message_hero_defeated\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"enemy_attacked\":\r\n            class_to_add = \"message_enemy_attacked\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"enemy_attacked_critically\":\r\n            class_to_add = \"message_enemy_attacked_critically\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"hero_attacked\":\r\n            class_to_add = \"message_hero_attacked\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"hero_missed\":\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n        case \"hero_blocked\":\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;    \r\n        case \"enemy_missed\":\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;    \r\n        case \"hero_attacked_critically\":\r\n            class_to_add = \"message_hero_attacked_critically\";\r\n            group_to_add = \"message_combat\";\r\n            message_count.message_combat += 1;\r\n            break;\r\n\r\n        case \"combat_loot\":\r\n            class_to_add = \"message_items_obtained\";\r\n            group_to_add = \"message_loot\";\r\n            message_count.message_loot += 1;\r\n            break;\r\n        case \"gathered_loot\":\r\n            class_to_add = \"message_items_obtained\";\r\n            group_to_add = \"message_loot\";\r\n            message_count.message_loot += 1;\r\n            break;\r\n        case \"total_gathered_loot\":\r\n            class_to_add = \"message_total_items_obtained\";\r\n            group_to_add = \"message_loot\";\r\n            message_count.message_loot += 1;\r\n            break;\r\n        case \"location_reward\":\r\n            group_to_add = \"message_loot\";\r\n            message_count.message_loot += 1;\r\n            break;\r\n\r\n        case \"skill_raised\":\r\n            class_to_add = \"message_skill_leveled_up\";\r\n            group_to_add = \"message_unlocks\";\r\n            message_count.message_unlocks += 1;\r\n            break;\r\n        case \"level_up\":\r\n            group_to_add = \"message_unlocks\";\r\n            message_count.message_unlocks += 1;\r\n            break;\r\n        case \"activity_unlocked\": \r\n            //currently uses default style class\r\n            group_to_add = \"message_unlocks\";\r\n            message_count.message_unlocks += 1;\r\n            break;\r\n        case \"location_unlocked\":\r\n            class_to_add = \"message_location_unlocked\";\r\n            group_to_add = \"message_unlocks\";\r\n            message_count.message_unlocks += 1;\r\n            break;\r\n        case \"dialogue_unlocked\":\r\n            group_to_add = \"message_unlocks\";\r\n            message_count.message_unlocks += 1;\r\n            break;\r\n\r\n        case \"message_travel\":\r\n            class_to_add = \"message_travel\";\r\n            group_to_add = \"message_events\";\r\n            message_count.message_events += 1;\r\n            break;\r\n        case \"activity_finished\":\r\n            group_to_add = \"message_events\";\r\n            message_count.message_events += 1;\r\n            break;\r\n        case \"activity_money\":\r\n            group_to_add = \"message_events\";\r\n            message_count.message_events += 1;\r\n            break;\r\n        case \"notification\":\r\n            message_count.message_events += 1;\r\n            group_to_add = \"message_events\";\r\n            class_to_add = \"message_notification\";\r\n            break;\r\n        case \"background\":\r\n            message_count.message_background +=1;\r\n            group_to_add = \"message_background\";\r\n            break;\r\n        case \"crafting\":\r\n            message_count.message_crafting +=1;\r\n            group_to_add = \"message_crafting\";\r\n            break;\r\n        case \"message_critical\":\r\n            message_count.message_events += 1;\r\n            group_to_add = \"message_events\";\r\n            class_to_add = \"message_critical\";\r\n            break;\r\n    }\r\n\r\n    if(group_to_add === \"message_combat\" && message_count.message_combat > 80\r\n    || group_to_add === \"message_loot\" && message_count.message_loot > 28\r\n    || group_to_add === \"message_unlocks\" && message_count.message_unlocks > 40\r\n    || group_to_add === \"message_events\" && message_count.message_events > 40\r\n    || group_to_add === \"message_background\" && message_count.message_background > 28\r\n    || group_to_add === \"message_crafting\" && message_count.message_crafting > 28\r\n    ) {\r\n        // find first child with specified group\r\n        // delete it\r\n        message_log.removeChild(message_log.getElementsByClassName(group_to_add)[0]);\r\n    }\r\n\r\n    message.classList.add(class_to_add, group_to_add);\r\n\r\n    message.innerHTML = message_to_add + \"<div class='message_border'> </>\";\r\n\r\n    message_log.appendChild(message);\r\n    \r\n    message_log.scrollTop = message_log.scrollHeight;\r\n\r\n}\r\n\r\nfunction format_book_bonuses(bonuses) {\r\n    let formatted = '';\r\n    if(bonuses.stats) {\r\n        const stats = Object.keys(bonuses.stats);\r\n        \r\n        formatted = `+${bonuses.stats[stats[0]]} ${stat_names[stats[0]]}`;\r\n        for(let i = 1; i < stats.length; i++) {\r\n            formatted += `, +${bonuses.stats[stats[i]]} ${stat_names[stats[i]]}`;\r\n        }\r\n    }\r\n\r\n    if(bonuses.multipliers) {\r\n        const multipliers = Object.keys(bonuses.multipliers);\r\n        if(formatted) {\r\n            formatted += `, x${bonuses.multipliers[multipliers[0]]} ${stat_names[multipliers[0]]}`;\r\n        } else {\r\n            formatted = `x${bonuses.multipliers[multipliers[0]]} ${stat_names[multipliers[0]]}`;\r\n        }\r\n\r\n        for(let i = 1; i < multipliers.length; i++) {\r\n            formatted += `, x${bonuses.multipliers[multipliers[i]]} ${stat_names[multipliers[i]]}`;\r\n        }\r\n    }\r\n    if(bonuses.xp_multipliers) {\r\n        const xp_multipliers = Object.keys(bonuses.xp_multipliers);\r\n        let name;\r\n        if(xp_multipliers[0] !== \"all\" && xp_multipliers[0] !== \"hero\" && xp_multipliers[0] !== \"all_skill\") {\r\n            name = skills[xp_multipliers[0]].name();\r\n        } else {\r\n            name = xp_multipliers[0].replace(\"_\",\" \");\r\n        }\r\n\r\n        if(formatted) {\r\n            formatted += `, x${bonuses.xp_multipliers[xp_multipliers[0]]} ${name} xp gain`;\r\n        } else {\r\n            formatted = `x${bonuses.xp_multipliers[xp_multipliers[0]]} ${name} xp gain`;\r\n        }\r\n        for(let i = 1; i < xp_multipliers.length; i++) {\r\n            let name;\r\n            if(xp_multipliers[i] !== \"all\" && xp_multipliers[i] !== \"hero\" && xp_multipliers[i] !== \"all_skill\") {\r\n                name = skills[xp_multipliers[i]].name();\r\n            } else {\r\n                name = xp_multipliers[i].replace(\"_\",\" \");\r\n            }\r\n            formatted += `, x${bonuses.xp_multipliers[xp_multipliers[i]]} ${name} xp gain`;\r\n        }\r\n    }\r\n\r\n    return formatted;\r\n}\r\n\r\nfunction clear_message_log() {\r\n    while(message_log.firstChild) {\r\n        message_log.removeChild(message_log.lastChild);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Array} loot_list [{item, count},...] \r\n */\r\nfunction log_loot({loot_list, is_combat=false, is_a_summary=false}) {\r\n    \r\n    if(loot_list.length == 0) {\r\n        return;\r\n    }\r\n\r\n    let item;\r\n    if(loot_list[0].item_id) {\r\n        item = item_templates[loot_list[0].item_id];\r\n    } else if(loot_list[0].item_key) {\r\n        item = getItemFromKey(loot_list[0].item_key);\r\n    }\r\n\r\n    let message;\r\n    let message_type;\r\n    if(is_combat) {\r\n        message_type = \"combat_loot\";\r\n        message = 'Looted \"';\r\n    } else if(is_a_summary) {\r\n        message_type = \"total_gathered_loot\";\r\n        message = 'Gained in total: \"';\r\n    } else {\r\n        message_type = \"gathered_loot\";\r\n        message = 'Gained \"';\r\n    }\r\n\r\n    message += item.getName() + `\" x` + loot_list[0][\"count\"];\r\n\r\n    if(loot_list.length > 1) {\r\n        for(let i = 1; i < loot_list.length; i++) {\r\n            if(loot_list[i].item_id) {\r\n                item = item_templates[loot_list[i].item_id];\r\n            } else if(loot_list[i].item_key) {\r\n                item = getItemFromKey(loot_list[i].item_key);\r\n            }\r\n            message += (`, \"` + item.getName() + `\" x` + loot_list[i][\"count\"]);\r\n        }\r\n    }\r\n\r\n    log_message(message, message_type);\r\n}\r\n\r\n/**\r\n * Originally created for activities, despite the name, but is now used for actions as well.\r\n * @param {Object} settings \r\n */\r\nfunction start_activity_animation(settings) {\r\n    end_activity_animation();\r\n    activity_anim = setInterval(() => { //sets a tiny little \"animation\" for activity text\r\n        const action_status_div = document.getElementById(\"action_status_div\");\r\n        let end = \"\";\r\n        if(action_status_div.innerHTML.endsWith(\"...\")) {\r\n            end = \"...\";\r\n        } else if(action_status_div.innerHTML.endsWith(\"..\")) {\r\n            end = \"..\";\r\n        } else if(action_status_div.innerHTML.endsWith(\".\"))\r\n            end = \".\";\r\n\r\n        if(settings?.book_title) {\r\n            action_status_div.innerHTML = action_status_div.innerHTML.split(\",\")[0] + `, ${format_reading_time(item_templates[settings.book_title].getRemainingTime())} left`;\r\n            action_status_div.innerHTML += end;\r\n        }\r\n\r\n        if(end.length < 3){\r\n            action_status_div.innerHTML += \".\";\r\n        } else {\r\n            action_status_div.innerHTML = action_status_div.innerHTML.substring(0, action_status_div.innerHTML.length - 3);\r\n        }\r\n     }, 600);\r\n}\r\n\r\nfunction update_displayed_trader(is_newly_open) {\r\n    action_div.style.display = \"none\";\r\n    trade_div.style.display = \"inherit\";\r\n    document.getElementById(\"trader_cost_mult_value\").textContent = `${Math.round(100 * (traders[current_trader].getProfitMargin()))}%`\r\n    update_displayed_trader_inventory({is_newly_open});\r\n}\r\n\r\nfunction update_displayed_storage() {\r\n    action_div.style.display = \"none\";\r\n    storage_div.style.display = \"inherit\";\r\n    update_displayed_storage_inventory();\r\n}\r\n\r\nfunction update_displayed_money() {\r\n    document.getElementById(\"money_div\").innerHTML = `Your purse contains: ${format_money(character.money)}`;\r\n}\r\n\r\n/**\r\n * \r\n * @returns {HTMLElement}\r\n */\r\nfunction create_trade_buttons() {\r\n\r\n    const trade_buttons = document.createElement(\"div\");\r\n    trade_buttons.classList.add(\"trade_ammount_buttons\");\r\n\r\n    const trade_button_5 = document.createElement(\"div\");\r\n    trade_button_5.classList.add(\"trade_ammount_button\");\r\n    trade_button_5.innerText = \"5\";\r\n    trade_button_5.setAttribute(\"data-trade_ammount\", 5);\r\n    trade_buttons.appendChild(trade_button_5);\r\n\r\n    const trade_button_10 = document.createElement(\"div\");\r\n    trade_button_10.classList.add(\"trade_ammount_button\");\r\n    trade_button_10.innerText = \"10\";\r\n    trade_button_10.setAttribute(\"data-trade_ammount\", 10);\r\n    trade_buttons.appendChild(trade_button_10);\r\n\r\n    const trade_button_max = document.createElement(\"div\");\r\n    trade_button_max.classList.add(\"trade_ammount_button\");\r\n    trade_button_max.innerText = \"all\";\r\n    trade_button_max.setAttribute(\"data-trade_ammount\", Infinity);\r\n    trade_buttons.appendChild(trade_button_max);\r\n    \r\n    return trade_buttons;\r\n}\r\n\r\nfunction sort_displayed_inventory({sort_by = \"name\", target = \"character\", change_direction = false}) {\r\n    let plus;\r\n    let minus;\r\n    if(target === \"trader\") {\r\n        if(change_direction){\r\n            if(sort_by && sort_by === trader_inventory_sorting) {\r\n                if(trader_inventory_sorting_direction === \"asc\") {\r\n                    trader_inventory_sorting_direction = \"desc\";\r\n                } else {\r\n                    trader_inventory_sorting_direction = \"asc\";\r\n                }\r\n            } else {\r\n                if(sort_by === \"price\") {\r\n                    trader_inventory_sorting_direction = \"desc\";\r\n                } else {\r\n                    trader_inventory_sorting_direction = \"asc\";\r\n                }\r\n            }\r\n        }\r\n\r\n        target = trader_inventory_div;\r\n        plus = trader_inventory_sorting_direction===\"asc\"?1:-1;\r\n        minus = trader_inventory_sorting_direction===\"asc\"?-1:1;\r\n        trader_inventory_sorting = sort_by || \"name\";\r\n\r\n    } else if(target === \"character\") {\r\n        if(change_direction){\r\n            if(sort_by && sort_by === character_inventory_sorting) {\r\n                if(character_inventory_sorting_direction === \"asc\") {\r\n                    character_inventory_sorting_direction = \"desc\";\r\n                } else {\r\n                    character_inventory_sorting_direction = \"asc\";\r\n                }\r\n            } else {\r\n                if(sort_by === \"price\") {\r\n                    character_inventory_sorting_direction = \"desc\";\r\n                } else {\r\n                    character_inventory_sorting_direction = \"asc\";\r\n                }\r\n            }\r\n        }\r\n\r\n        target = inventory_div;\r\n        plus = character_inventory_sorting_direction===\"asc\"?1:-1;\r\n        minus = character_inventory_sorting_direction===\"asc\"?-1:1;\r\n        character_inventory_sorting = sort_by || \"name\";\r\n    } else if(target === \"storage\"){\r\n        if(change_direction){\r\n            if(sort_by && sort_by === storage_sorting) {\r\n                if(storage_sorting_direction === \"asc\") {\r\n                    storage_sorting_direction = \"desc\";\r\n                } else {\r\n                    storage_sorting_direction = \"asc\";\r\n                }\r\n            } else {\r\n                if(sort_by === \"price\") {\r\n                    storage_sorting_direction = \"desc\";\r\n                } else {\r\n                    storage_sorting_direction = \"asc\";\r\n                }\r\n            }\r\n        }\r\n\r\n        target = storage_inventory_div;\r\n        plus = storage_sorting_direction===\"asc\"?1:-1;\r\n        minus = storage_sorting_direction===\"asc\"?-1:1;\r\n        storage_sorting = sort_by || \"name\";\r\n    } else {\r\n        console.warn(`Something went wrong, no such inventory as '${target}'`);\r\n        return;\r\n    }\r\n    [...target.children].sort((a,b) => {\r\n        //equipped items on top\r\n        if(a.classList.contains(\"equipped_item_control\") && !b.classList.contains(\"equipped_item_control\")) {\r\n            return -1;\r\n        } else if(!a.classList.contains(\"equipped_item_control\") && b.classList.contains(\"equipped_item_control\")){\r\n            return 1;\r\n        } \r\n\r\n        if(a.classList.contains(\"item_to_trade\") && !b.classList.contains(\"item_to_trade\")) {\r\n            return 1;\r\n        } else if(!a.classList.contains(\"item_to_trade\") && b.classList.contains(\"item_to_trade\")) {\r\n            return -1;\r\n        }\r\n\r\n        if(a.classList.contains(\"character_item_equippable\") && !b.classList.contains(\"character_item_equippable\")) {\r\n            return 1;\r\n        } else if(!a.classList.contains(\"character_item_equippable\") && b.classList.contains(\"character_item_equippable\")){\r\n            return -1;\r\n        } \r\n        if(a.classList.contains(\"trader_item_equippable\") && !b.classList.contains(\"trader_item_equippable\")) {\r\n            return 1;\r\n        } else if(!a.classList.contains(\"trader_item_equippable\") && b.classList.contains(\"trader_item_equippable\")){\r\n            return -1;\r\n        } \r\n\r\n        if(a.classList.contains(\"storage_item_equippable\") && !b.classList.contains(\"storage_item_equippable\")) {\r\n            return 1;\r\n        } else if(!a.classList.contains(\"storage_item_equippable\") && b.classList.contains(\"storage_item_equippable\")){\r\n            return -1;\r\n        } \r\n\r\n        if(a.children[0].children[0].children[0].innerText === \"[Comp]\" && b.children[0].children[0].children[0].innerText !== \"[Comp]\") {\r\n            return 1;\r\n        } else if(a.children[0].children[0].children[0].innerText !== \"[Comp]\" && b.children[0].children[0].children[0].innerText === \"[Comp]\") {\r\n            return -1;\r\n        }\r\n\r\n        if(a.children[0].children[0].children[0].innerText === \"[Book]\" && b.children[0].children[0].children[0].innerText !== \"[Book]\") {\r\n            return 1;\r\n        } else if(a.children[0].children[0].children[0].innerText !== \"[Book]\" && b.children[0].children[0].children[0].innerText === \"[Book]\") {\r\n            return -1;\r\n        }\r\n\r\n        if(a.getElementsByClassName(\"item_slot\") && !b.getElementsByClassName(\"item_slot\")) {\r\n            return 1;\r\n        } else if(!a.getElementsByClassName(\"item_slot\") && b.getElementsByClassName(\"item_slot\")) {\r\n            return -1;\r\n        }\r\n\r\n        //other items by either name or otherwise by value\r\n\r\n        if(sort_by === \"name\") {\r\n\r\n            const name_a = a.children[0].children[0].children[1].innerText.toLowerCase().replaceAll('\"',\"\");\r\n            const name_b = b.children[0].children[0].children[1].innerText.toLowerCase().replaceAll('\"',\"\");\r\n            if(name_a > name_b) {\r\n                return plus;\r\n            } else if(name_a < name_b) {\r\n                return minus;\r\n            } else {\r\n                //if same name, sort based on quality \r\n                //works similar to sorting by value but is more precise\r\n                //(shouldn't be possible to reach this for quality-less items)\r\n                let value_a = Number.parseInt(a.dataset.item_quality);\r\n                let value_b = Number.parseInt(b.dataset.item_quality);\r\n                \r\n                if(value_a > value_b) {\r\n                    return plus;\r\n                } else {\r\n                    return minus;\r\n                }\r\n            }\r\n\r\n        } else if(sort_by === \"price\") {\r\n            \r\n            let value_a = Number.parseInt(a.getAttribute(`data-item_value`));\r\n            let value_b = Number.parseInt(b.getAttribute(`data-item_value`));\r\n      \r\n            if(value_a > value_b) {\r\n                return plus;\r\n            } else {\r\n                if(value_a === value_b && \"item_quality\" in a.dataset && \"item_quality\" in b.dataset) {\r\n                    if(Number.parseInt(a.dataset.item_quality) > Number.parseInt( b.dataset.item_quality)) {\r\n                        return plus;\r\n                    } else {\r\n                        return minus;\r\n                    }\r\n                }\r\n                return minus;\r\n            }\r\n        }\r\n\r\n    }).forEach(node => target.appendChild(node));\r\n}\r\n\r\nfunction update_displayed_trader_inventory({item_key, trader_sorting=\"name\", sorting_direction=\"asc\", was_anything_new_added=false, is_newly_open=false} = {}) {\r\n    const trader = traders[current_trader];\r\n\r\n    //removal of unneeded divs\r\n    if(!item_key){\r\n        Object.keys(trader_item_divs).forEach(div_key => {\r\n            if(!trader.inventory[div_key]) {\r\n                trader_item_divs[div_key].remove();\r\n                delete trader_item_divs[div_key];\r\n            }\r\n        });\r\n        Object.keys(item_selling_divs).forEach(div_key => {\r\n            if(to_sell.items.filter(x => x.item_key === div_key).length === 0){\r\n                //not in trade list - remove\r\n                item_selling_divs[div_key].remove();\r\n                delete item_selling_divs[div_key];\r\n            }\r\n        });\r\n    }\r\n\r\n    //creation of missing divs and updating of others\r\n    if(item_key) {\r\n        const item_count = trader.inventory[item_key].count;\r\n        trader_item_divs[item_key].remove();\r\n        delete trader_item_divs[item_key];\r\n        trader_item_divs[item_key] = create_inventory_item_div({key: item_key, item_count, target: \"trader\"});\r\n        trader_inventory_div.appendChild(trader_item_divs[item_key]);\r\n        was_anything_new_added = true;\r\n    } else {\r\n        Object.keys(trader.inventory).forEach(inventory_key => {\r\n            let item_count = trader.inventory[inventory_key].count;\r\n\r\n            //find if item is in to_sell, if so then grab the count and subtract it\r\n            for(let i = 0; i < to_buy.items.length; i++) {\r\n                if(inventory_key === to_buy.items[i].item_key) {\r\n                    item_count -= Number(to_buy.items[i].count);\r\n\r\n                    if(item_count == 0) {\r\n                        trader_item_divs[inventory_key]?.remove();\r\n                        delete trader_item_divs[inventory_key];\r\n                        return;\r\n                    }\r\n                    if(item_count < 0) {\r\n                        //shouldn't be possible to reach but who knows\r\n                        throw new Error('Something is wrong with trader item count');\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!trader_item_divs[inventory_key]) {\r\n                trader_item_divs[inventory_key] = create_inventory_item_div({key: inventory_key, item_count, target: \"trader\"});\r\n                trader_inventory_div.appendChild(trader_item_divs[inventory_key]);\r\n                was_anything_new_added = true;\r\n            } else {\r\n                let div_count = Number.parseInt(trader_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText.replace(\"x\",\"\"));\r\n                if(Number.isNaN(div_count)) {\r\n                    div_count = 0;\r\n                }\r\n                if(div_count != item_count) {\r\n                    if(item_count > 1) {\r\n                        trader_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ` x${item_count}`;\r\n                    } else {\r\n                        trader_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ``;\r\n                    }\r\n                }\r\n\r\n                //grab price div and update it\r\n                //do it only when opening trader, not on in-trade refreshes\r\n                if(is_newly_open) {\r\n                    const price_span = trader_item_divs[inventory_key].getElementsByClassName(\"item_value\")[0];\r\n                    price_span.innerHTML =  `${format_money(round_item_price(trader.inventory[inventory_key].item.getValue()*(traders[current_trader].getProfitMargin() || 1)), true)}`;\r\n                }\r\n            }\r\n        });\r\n\r\n        for(let i = 0; i < to_sell.items.length; i++) {\r\n            const key = to_sell.items[i].item_key;\r\n            if(!item_selling_divs[key]) {\r\n                item_selling_divs[key] = create_inventory_item_div({target: \"trader\", trade_index: i});\r\n                trader_inventory_div.appendChild(item_selling_divs[key]);\r\n            } else {\r\n                //verify and update count\r\n                \r\n                let div_count = trader_item_divs[key]?.dataset.item_count ?? 0;\r\n\r\n                let item_count = to_sell.items[i].count;\r\n                if(div_count !== item_count) {\r\n                    if(item_count > 1) {\r\n                        item_selling_divs[key].getElementsByClassName(\"item_count\")[0].innerText = ` x${item_count}`;\r\n                    } else {\r\n                        item_selling_divs[key].getElementsByClassName(\"item_count\")[0].innerText = ``;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    if(!item_key && was_anything_new_added) {\r\n        sort_displayed_inventory({target: \"trader\", sort_by: trader_sorting, direction: sorting_direction});\r\n    }\r\n}\r\n\r\n/**\r\n * updates displayed inventory of the character (only inventory, worn equipment is managed by separate method)\r\n * \r\n * if item_key/equip_slot is passed, it will instead only update the display of that one item\r\n * \r\n */\r\nfunction update_displayed_character_inventory({item_key, equip_slot, character_sorting=\"name\", sorting_direction=\"asc\", was_anything_new_added=false} = {}) {    \r\n    \r\n    //removal of unneeded divs\r\n    if(!item_key){\r\n        Object.keys(item_divs).forEach(div_key => {\r\n            if(item_divs[div_key].classList.contains(\"equipped_item_control\")) {\r\n                //since equipment is keyed with slots and not item_keys, there might be something different under it, so needs additional check\r\n                //div_key is the slot\r\n                const item_key = item_divs[div_key].dataset.character_item;\r\n                if(!character.equipment[div_key] || item_key !== character.equipment[div_key].getInventoryKey()) {\r\n                    //character has nothing in this slot - remove\r\n                    //character has something else in this slot - remove, will be recreated later\r\n                    item_divs[div_key].remove();\r\n                    delete item_divs[div_key];\r\n                }\r\n            } else {\r\n                if(!character.inventory[div_key]) {\r\n                    item_divs[div_key].remove();\r\n                    delete item_divs[div_key];\r\n                }\r\n            }\r\n        });\r\n        Object.keys(item_buying_divs).forEach(div_key => {\r\n            if(to_buy.items.filter(x => x.item_key === div_key).length === 0){\r\n                //not in trade list - remove\r\n                item_buying_divs[div_key].remove();\r\n                delete item_buying_divs[div_key];\r\n            }\r\n        });\r\n    }\r\n\r\n    //creation of missing divs and updating of others\r\n    if(item_key) {\r\n        const item_count = character.inventory[item_key].count;\r\n        was_anything_new_added = item_divs[item_key];\r\n        item_divs[item_key].remove();\r\n        delete item_divs[item_key];\r\n        item_divs[item_key] = create_inventory_item_div({key: item_key, item_count, target: \"character\"});\r\n        inventory_div.appendChild(item_divs[item_key]);\r\n    } else if(equip_slot){\r\n        item_divs[equip_slot] = create_inventory_item_div({key: equip_slot, target: \"character\", is_equipped: true});\r\n    } else {\r\n        Object.keys(character.inventory).forEach(inventory_key => {\r\n            let item_count = character.inventory[inventory_key].count;\r\n\r\n            //find if item is in to_sell, if so then grab the count and subtract it\r\n            for(let i = 0; i < to_sell.items.length; i++) {\r\n                if(inventory_key === to_sell.items[i].item_key) {\r\n                    item_count -= Number(to_sell.items[i].count);\r\n\r\n                    if(item_count == 0) {\r\n                        item_divs[inventory_key]?.remove();\r\n                        delete item_divs[inventory_key];\r\n                        return;\r\n                    }\r\n                    if(item_count < 0) {\r\n                        //shouldn't be possible to reach but who knows\r\n                        throw new Error('Something is wrong with character item count');\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!item_divs[inventory_key]) {\r\n                item_divs[inventory_key] = create_inventory_item_div({key: inventory_key, item_count, target: \"character\"});\r\n                inventory_div.appendChild(item_divs[inventory_key]);\r\n                was_anything_new_added = true;\r\n            } else {\r\n                let div_count = Number.parseInt(item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText.replace(\"x\",\"\"));\r\n                if(Number.isNaN(div_count)) {\r\n                    div_count = 0;\r\n                }\r\n                if(div_count != item_count) {\r\n                    if(item_count > 1) {\r\n                        item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ` x${item_count}`;\r\n                    } else {\r\n                        item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ``;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.keys(character.equipment).forEach(eq_slot => {\r\n            if(!item_divs[eq_slot]) {\r\n                if(character.equipment[eq_slot]) {\r\n                    if(character.equipment[eq_slot]?.tags.tool) {\r\n                        //don't display the equipped tools\r\n                        return;\r\n                    }\r\n    \r\n                    item_divs[eq_slot] = create_inventory_item_div({key: eq_slot, target: \"character\", is_equipped: true});\r\n                    inventory_div.appendChild(item_divs[eq_slot]);\r\n                    was_anything_new_added = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        for(let i = 0; i < to_buy.items.length; i++) {\r\n            const key = to_buy.items[i].item_key;\r\n            if(!item_buying_divs[key]) {\r\n                item_buying_divs[key] = create_inventory_item_div({target: \"character\", trade_index: i});\r\n                inventory_div.appendChild(item_buying_divs[key]);\r\n            } else {\r\n                //verify and update count\r\n                \r\n                let div_count = item_divs[key]?.dataset.item_count ?? 0;\r\n\r\n                let item_count = to_buy.items[i].count;\r\n                if(div_count !== item_count) {\r\n                    if(item_count > 1) {\r\n                        item_buying_divs[key].getElementsByClassName(\"item_count\")[0].innerText = ` x${item_count}`;\r\n                    } else {\r\n                        item_buying_divs[key].getElementsByClassName(\"item_count\")[0].innerText = ``;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    if(was_anything_new_added) {\r\n        sort_displayed_inventory({target: \"character\", sort_by: character_sorting, direction: sorting_direction});\r\n    }\r\n}\r\n\r\nfunction update_displayed_storage_inventory({item_key, storage_sorting=\"name\", sorting_direction=\"asc\", was_anything_new_added=false} = {}) {\r\n\r\n    //removal of unneeded divs\r\n    if(!item_key){\r\n        Object.keys(storage_item_divs).forEach(div_key => {\r\n            if(!player_storage.inventory[div_key]) {\r\n                storage_item_divs[div_key].remove();\r\n                delete storage_item_divs[div_key];\r\n            }\r\n        });\r\n    }\r\n\r\n    //creation of missing divs and updating of others\r\n    if(item_key) {\r\n        const item_count = player_storage.inventory[item_key].count;\r\n        storage_item_divs[item_key].remove();\r\n        delete storage_item_divs[item_key];\r\n        storage_item_divs[item_key] = create_inventory_item_div({key: item_key, item_count, target: \"storage\"});\r\n        storage_inventory_div.appendChild(storage_item_divs[item_key]);\r\n        was_anything_new_added = true;\r\n    } else {\r\n        Object.keys(player_storage.inventory).forEach(inventory_key => {\r\n            let item_count = player_storage.inventory[inventory_key].count;\r\n\r\n\r\n            if(!storage_item_divs[inventory_key]) {\r\n                storage_item_divs[inventory_key] = create_inventory_item_div({key: inventory_key, item_count, target: \"storage\"});\r\n                storage_inventory_div.appendChild(storage_item_divs[inventory_key]);\r\n                was_anything_new_added = true;\r\n            } else {\r\n                let div_count = Number.parseInt(storage_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText.replace(\"x\",\"\"));\r\n                if(Number.isNaN(div_count)) {\r\n                    div_count = 0;\r\n                }\r\n                if(div_count != item_count) {\r\n                    if(item_count > 1) {\r\n                        storage_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ` x${item_count}`;\r\n                    } else {\r\n                        storage_item_divs[inventory_key].getElementsByClassName(\"item_count\")[0].innerText = ``;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    \r\n    if(!item_key && was_anything_new_added) {\r\n        sort_displayed_inventory({target: \"storage\", sort_by: storage_sorting, direction: sorting_direction});\r\n    }\r\n}\r\n\r\nfunction exit_displayed_storage() {\r\n    action_div.style.display = \"\";\r\n    storage_div.style.display = \"none\";\r\n}\r\n\r\n/**\r\n * creates a single item div for hero/trader, used to fill displayed inventories\r\n * @param {Object} params\r\n * @param {String} params.key \r\n * @param {Number} params.item_count\r\n * @param {String} params.target character/trader/storage\r\n * @param {Boolean} params.is_equipped\r\n * @param {Number} params.trade_index index in to_buy/to_sell\r\n * @returns \r\n */\r\nfunction create_inventory_item_div({key, item_count, target, is_equipped, trade_index}) {\r\n\r\n    const item_control_div = document.createElement(\"div\");\r\n    const item_div = document.createElement(\"div\");\r\n    const item_name_div = document.createElement(\"div\");\r\n    const item_additional = document.createElement(\"div\");\r\n    item_additional.classList.add(\"item_additional_content\");\r\n\r\n    let target_item;\r\n    let target_class_name;\r\n    let item_class;\r\n    let options = {};\r\n    let price_multiplier = 1;\r\n    if(target === \"trader\") {\r\n        options.trader = true;\r\n        price_multiplier = traders[current_trader].getProfitMargin() || price_multiplier;\r\n    } else if(target === \"storage\") {\r\n        options.storage = true;\r\n    }\r\n\r\n    if(is_equipped) {\r\n        target_item = character.equipment[key];\r\n        item_count = item_count ?? 1;\r\n        item_class = \"equipped_item\";\r\n        target_class_name = \"character_item\";\r\n    } else {\r\n        item_class = \"inventory_item\";\r\n        if(target === \"character\") {\r\n            if(typeof trade_index === \"undefined\") {\r\n                target_item = character.inventory[key].item;\r\n                item_count = item_count || character.inventory[key].count;\r\n            } else {\r\n                target_item = traders[current_trader].inventory[to_buy.items[trade_index].item_key].item;\r\n                item_count = item_count || to_buy.items[trade_index].count;\r\n            }\r\n            target_class_name = \"character_item\";\r\n        } else if(target === \"trader\") {\r\n            if(typeof trade_index === \"undefined\") {\r\n                target_item = traders[current_trader].inventory[key].item;\r\n                item_count = item_count || traders[current_trader].inventory[key].count;\r\n            } else {\r\n                target_item = character.inventory[to_sell.items[trade_index].item_key].item;\r\n                item_count = item_count || to_sell.items[trade_index].count;\r\n            }\r\n            target_class_name = \"trader_item\";\r\n        } else if(target === \"storage\") {\r\n            target_item = player_storage.inventory[key].item;\r\n            item_count = item_count || player_storage.inventory[key].count;\r\n            target_class_name = \"storage_item\";\r\n        } else {\r\n            throw new Error(`\"${target}\" is not a correct inventory owner`);\r\n        }\r\n    }\r\n\r\n    if(\"quality\" in target_item) {\r\n        item_control_div.dataset.item_quality = target_item.quality;\r\n    }\r\n\r\n    if(target_item.tags?.equippable) {\r\n        if(target_item.tags.tool) {\r\n            item_name_div.innerHTML = `<span class = \"item_slot\" >[tool]</span> <span>${target_item.getName()}</span>`;\r\n        } else {\r\n            item_name_div.innerHTML = `<span class = \"item_slot\" >[${target_item.equip_slot}]</span> <span>${target_item.getName()}</span>`;\r\n        }\r\n        item_name_div.classList.add(`${item_class}_name`);\r\n        item_div.appendChild(item_name_div);\r\n\r\n        item_control_div.classList.add(`${item_class}_control`, `${target_class_name}_control`, `${target_class_name}_equippable`);\r\n        item_control_div.appendChild(item_div);\r\n\r\n        if(typeof trade_index !== \"undefined\") {\r\n            item_div.classList.add(`${item_class}`, `${target_class_name}`, `trade_item_equippable`);\r\n        } else {\r\n            item_div.classList.add(`${item_class}`, `${target_class_name}`, `item_equippable`);\r\n        }\r\n        item_control_div.dataset.item_slot = target_item.equip_slot;\r\n    } else if(target_item.tags.component) {\r\n        item_name_div.innerHTML = `<span class = \"item_category\">[Comp]</span> <span class=\"item_name\">${target_item.getName()}</span>`;\r\n        item_name_div.classList.add(`${item_class}_name`);\r\n        item_div.appendChild(item_name_div);\r\n\r\n        item_control_div.classList.add(`${item_class}_control`, `${target_class_name}_control`, `${target_class_name}_component`);\r\n        item_control_div.appendChild(item_div);\r\n\r\n        item_div.classList.add(`${item_class}`, `${target_class_name}`, \"item_component\");\r\n    } else if(target_item.tags.book) {\r\n        item_name_div.innerHTML = '<span class = \"item_category\">[Book]</span>';\r\n        item_name_div.classList.add(`${item_class}`);\r\n        item_name_div.innerHTML += ` <span class = \"book_name item_name\">\"${target_item.name}\"</span>`;\r\n\r\n        if(book_stats[target_item.name].is_finished) {\r\n            item_div.classList.add(\"book_finished\");\r\n        } else if(get_current_book() === target_item.name) {\r\n            item_control_div.classList.add(\"book_active\");\r\n        }\r\n    } else {\r\n        item_name_div.innerHTML = `<span class = \"item_category\"></span> <span class = \"item_name\">${target_item.getName()}</span>`;\r\n    }\r\n    \r\n    if(item_count > 1) {\r\n        item_name_div.innerHTML += `<span class=\"item_count\"> x${item_count}</span>`;\r\n    } else {\r\n        item_name_div.innerHTML += `<span class=\"item_count\"></span>`;\r\n    }\r\n\r\n    item_name_div.classList.add(`${item_class}_name`);\r\n    item_div.appendChild(item_name_div);\r\n\r\n    item_div.classList.add(`${item_class}`, `${target_class_name}`, `item_${target_item.item_type.toLowerCase()}`);\r\n\r\n    item_div.appendChild(create_item_tooltip(target_item, options));\r\n\r\n    item_control_div.classList.add(`${item_class}_control`, `${target_class_name}_control`, `${target_class_name}_${target_item.item_type.toLowerCase()}`);\r\n    item_control_div.setAttribute(`data-${target_class_name}`, `${target_item.getInventoryKey()}`)\r\n    item_control_div.setAttribute(\"data-item_count\", `${item_count}`)\r\n    item_control_div.setAttribute(\"data-item_value\", `${target_item.getValue()}`); //is only used as sorting param\r\n    item_control_div.appendChild(item_div);\r\n\r\n    if(target === \"character\") {\r\n        if(target_item.item_type === \"USABLE\") {\r\n            const item_use_button = document.createElement(\"div\");\r\n            item_use_button.classList.add(\"item_use_button\");\r\n            item_use_button.innerText = \"[use]\";\r\n            const item_auto_use_button = document.createElement(\"div\");\r\n            item_auto_use_button.classList.add(\"item_auto_use_button\");\r\n            item_auto_use_button.innerText = \"auto\";\r\n\r\n            if(favourite_consumables[target_item.id]) {\r\n                item_auto_use_button.classList.add(\"item_auto_use_button_active\");\r\n            }\r\n\r\n            item_additional.appendChild(item_use_button);\r\n            item_additional.appendChild(item_auto_use_button);\r\n        } else if(target_item.item_type === \"BOOK\") {\r\n            const item_read_button = document.createElement(\"div\");\r\n            item_read_button.classList.add(\"item_use_button\");\r\n            item_read_button.innerText = \"[read]\";\r\n            item_additional.appendChild(item_read_button);\r\n\r\n            item_div.classList.add(\"item_book\");\r\n        }\r\n        if(typeof trade_index === \"undefined\" && target_item.tags.equippable) {\r\n            if(!is_equipped) {\r\n                let item_equip_span = document.createElement(\"span\");\r\n                item_equip_span.innerHTML = \"[equip]\";\r\n                item_equip_span.classList.add(\"equip_item_button\", \"item_controls\");\r\n                item_additional.appendChild(item_equip_span);\r\n            } else {\r\n                let item_unequip_div = document.createElement(\"div\");\r\n                item_unequip_div.innerHTML = \"[take off]\";\r\n                item_unequip_div.classList.add(\"unequip_item_button\", \"item_controls\");\r\n                item_additional.appendChild(item_unequip_div);\r\n            }\r\n        }\r\n    } \r\n    \r\n    item_additional.appendChild(create_trade_buttons());\r\n\r\n    let item_value_span = document.createElement(\"span\");\r\n    item_value_span.innerHTML = `${format_money(round_item_price(target_item.getValue()*price_multiplier), true)}`;\r\n    item_value_span.classList.add(\"item_value\", \"item_controls\");\r\n    item_additional.appendChild(item_value_span);\r\n    item_control_div.appendChild(item_additional);\r\n\r\n    if(typeof trade_index !== \"undefined\") {\r\n        item_control_div.classList.add('item_to_trade');\r\n    }\r\n\r\n    return item_control_div;\r\n}\r\n\r\n/**\r\n * updates the displayed worn items + attaches tooltips\r\n */\r\nfunction update_displayed_equipment() {\r\n    Object.keys(equipment_slots_divs).forEach(function(key) {\r\n        let eq_tooltip; \r\n\r\n        if(character.equipment[key] == null) { //no item in slot\r\n            eq_tooltip = document.createElement(\"span\");\r\n            eq_tooltip.classList.add(\"item_tooltip\");\r\n            equipment_slots_divs[key].innerHTML = `${key} slot`;\r\n            equipment_slots_divs[key].classList.add(\"equipment_slot_empty\");\r\n            eq_tooltip.innerHTML = `Your ${key} slot`;\r\n        } else {\r\n            equipment_slots_divs[key].innerHTML = character.equipment[key].getName();\r\n            equipment_slots_divs[key].classList.remove(\"equipment_slot_empty\");\r\n\r\n            eq_tooltip = create_item_tooltip(character.equipment[key]);\r\n        }\r\n        equipment_slots_divs[key].appendChild(eq_tooltip);\r\n    });\r\n}\r\n\r\nfunction update_displayed_book(book_id) {\r\n    const book = item_templates[book_id];\r\n    const book_key = book.getInventoryKey();\r\n    if(book_stats[book.name].is_finished) {\r\n        item_divs[book_key].classList.add(\"book_finished\");\r\n        item_divs[book_key].classList.remove(\"book_active\");\r\n    } else if(get_current_book() === book.name) {\r\n        item_divs[book_key].classList.add(\"book_active\");\r\n    } else {\r\n        item_divs[book_key].classList.remove(\"book_active\");\r\n    }\r\n\r\n    item_divs[book_key].getElementsByClassName(\"item_tooltip\")[0].remove();\r\n    item_divs[book_key].getElementsByClassName(\"item_book\")[0].appendChild(create_item_tooltip(book));\r\n}\r\n\r\n/**\r\n * sets visibility of divs for enemies (based on how many there are in current combat),\r\n * and enemies' AP / EP\r\n * \r\n * called when new enemies get loaded\r\n */\r\nfunction update_displayed_enemies() {\r\n    for(let i = 0; i < 8; i++) { //go to max enemy count\r\n        if(i < current_enemies.length) {\r\n            enemies_div.children[i].children[0].style.display = null;\r\n            enemies_div.children[i].children[0].children[0].innerHTML = current_enemies[i].name;\r\n\r\n            let disp_speed;\r\n\r\n            if(current_enemies[i].stats.attack_speed > 20) {\r\n                disp_speed = Math.round(current_enemies[i].stats.attack_speed);\r\n            } else if (current_enemies[i].stats.attack_speed > 2) {\r\n                disp_speed = Math.round(current_enemies[i].stats.attack_speed*10)/10;\r\n            } else {\r\n                disp_speed = Math.round(current_enemies[i].stats.attack_speed*100)/100;\r\n            }\r\n\r\n            let hero_hit_chance_modifier = current_enemies.filter(enemy => enemy.is_alive).length**(-1/4); // down to ~ 60% if there's full 8 enemies\r\n            if(current_enemies[i].size === \"small\") {\r\n                hero_hit_chance_modifier *= get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Pest killer\"});\r\n            }\r\n\r\n            let hero_evasion_chance_modifier = current_enemies.filter(enemy => enemy.is_alive).length**(-1/3); //down to .5 if there's full 8 enemies (multiple attackers make it harder to evade attacks)\r\n            if(current_enemies[i].size === \"large\") {\r\n                hero_evasion_chance_modifier *= get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Giant slayer\"});\r\n            }\r\n        \r\n            const evasion_chance = 1 - get_hit_chance(character.stats.full.attack_points*hero_hit_chance_modifier, current_enemies[i].stats.agility * Math.sqrt(current_enemies[i].stats.intuition ?? 1));\r\n            let hit_chance = get_hit_chance(current_enemies[i].stats.dexterity * Math.sqrt(current_enemies[i].stats.intuition ?? 1), character.stats.full.evasion_points*hero_evasion_chance_modifier);\r\n\r\n            if(character.equipment[\"off-hand\"]?.offhand_type === \"shield\") { //has shield\r\n                hit_chance = 1;\r\n            }\r\n\r\n            //enemies_div.children[i].children[0].children[1].innerHTML = `AP : ${Math.round(ap)} | EP : ${Math.round(ep)}`;\r\n            enemies_div.children[i].children[0].children[1].children[0].innerHTML = `Atk pwr: ${current_enemies[i].stats.attack}`;\r\n            if(current_enemies[i].stats.attack_count > 1) {\r\n                enemies_div.children[i].children[0].children[1].children[0].innerHTML+=`x${current_enemies[i].stats.attack_count}`;\r\n            }\r\n            enemies_div.children[i].children[0].children[1].children[1].innerHTML = `Atk spd: ${disp_speed}`;\r\n            enemies_div.children[i].children[0].children[1].children[2].innerHTML = `Hit: ${Math.min(100,Math.max(0,Math.round(100*hit_chance)))}%`; //100% if shield!\r\n            enemies_div.children[i].children[0].children[1].children[3].innerHTML = `Ddg: ${Math.min(100,Math.max(0,Math.round(100*evasion_chance)))}%`;\r\n            enemies_div.children[i].children[0].children[1].children[4].innerHTML = `Def: ${current_enemies[i].stats.defense}`;\r\n\r\n        } else {\r\n            enemies_div.children[i].children[0].style.display = \"none\"; //just hide it\r\n        }     \r\n    }\r\n}\r\n\r\n/**\r\n * updates displayed health and healthbars of enemies\r\n */\r\nfunction update_displayed_health_of_enemies() {\r\n    for(let i = 0; i < current_enemies.length; i++) {\r\n        if(current_enemies[i].is_alive) {\r\n            enemies_div.children[i].children[0].style.filter = \"brightness(100%)\";\r\n        } else {\r\n            enemies_div.children[i].children[0].style.filter = \"brightness(30%)\";\r\n            update_displayed_enemies();\r\n        }\r\n\r\n        //update size of health bar\r\n        enemies_div.children[i].children[0].children[2].children[0].children[0].style.width = \r\n            Math.max(0, 100*current_enemies[i].stats.health/current_enemies[i].stats.max_health) + \"%\";\r\n\r\n            enemies_div.children[i].children[0].children[2].children[1].innerText = `${Math.ceil(current_enemies[i].stats.health)}/${Math.ceil(current_enemies[i].stats.max_health)} hp`;\r\n\r\n    }\r\n}\r\n\r\nfunction update_displayed_normal_location(location) {\r\n    clear_action_div();\r\n    location_types_div.innerHTML = \"\";\r\n    combat_div.style.display = \"none\";\r\n    location_tooltip.innerText = \"\";\r\n\r\n    document.documentElement.style.setProperty('--location_desc_tooltip_visibility', \"hidden\");\r\n\r\n    enemy_count_div.style.display = \"none\";\r\n    document.documentElement.style.setProperty('--actions_div_height', getComputedStyle(document.body).getPropertyValue('--actions_div_height_default'));\r\n    document.documentElement.style.setProperty('--actions_div_top', getComputedStyle(document.body).getPropertyValue('--actions_div_top_default'));\r\n    \r\n    inventory_switch.click();\r\n    combat_switch.style.pointerEvents = \"none\";\r\n    combat_switch.style.cursor = \"default\";\r\n    combat_switch.style.color = \"gray\";\r\n\r\n    location_name_span.innerText = current_location.name;\r\n    document.getElementById(\"location_description_div\").innerText = current_location.getDescription();\r\n\r\n    update_location_icon(location);\r\n\r\n    /////////////////////////////\r\n    //add button to open crafting\r\n    if(global_flags.is_crafting_unlocked) {\r\n        if(location.crafting?.is_unlocked) {\r\n            const crafting_button = document.createElement(\"div\");\r\n            crafting_button.classList.add(\"location_choices\", \"choice_craft\");\r\n            crafting_button.setAttribute(\"onclick\", 'openCraftingWindow()');\r\n            crafting_button.innerHTML = `<i class=\"material-icons\">construction</i> ${location.crafting.use_text}`;\r\n            action_div.appendChild(crafting_button);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////\r\n    //add button to go to sleep\r\n\r\n    if(location.housing?.is_unlocked) { \r\n        const start_sleeping_div = document.createElement(\"div\");\r\n        \r\n        start_sleeping_div.innerHTML = '<i class=\"material-icons\">bed</i>  ' + location.housing.text_to_sleep;\r\n        start_sleeping_div.id = \"start_sleeping_div\";\r\n        start_sleeping_div.setAttribute('onclick', 'start_sleeping()');\r\n\r\n        const open_storage_div = document.createElement(\"div\");\r\n        \r\n        open_storage_div.innerHTML = '<i class=\"material-icons\">inventory_2</i>  Open your personal chest';\r\n        open_storage_div.id = \"open_storage_div\";\r\n        open_storage_div.setAttribute('onclick', 'openStorage()');\r\n\r\n        action_div.appendChild(start_sleeping_div);\r\n        action_div.appendChild(open_storage_div);\r\n    }\r\n    \r\n    ////////////////////////////////////\r\n    //add buttons for starting dialogues\r\n\r\n    const available_dialogues = location.dialogues.filter(dialogue => {\r\n        if(!dialogues[dialogue].is_unlocked || dialogues[dialogue].is_finished) {\r\n            return false;\r\n        } else {\r\n            let lines_available = false;\r\n            Object.keys(dialogues[dialogue].textlines).forEach(line => {\r\n                if(lines_available) {\r\n                    return;\r\n                } else {\r\n                    lines_available = dialogues[dialogue].textlines[line].is_unlocked && !dialogues[dialogue].textlines[line].is_finished;\r\n                }\r\n            });\r\n            return lines_available;\r\n        }\r\n    });\r\n\r\n    if(available_dialogues.length > 0) {\r\n        location_choice_divs[\"dialogues\"] = create_location_choice_dropdown({name: \"Talk to someone\", icon: \"question_answer\", class_name: \"choice_dialogue\"});\r\n\r\n        location_choice_divs[\"dialogues\"].append(...create_location_choices({location: location, category: \"talk\"}));\r\n    }\r\n\r\n    /////////////////////////\r\n    //add buttons for trading\r\n\r\n    const available_traders = location.traders.filter(trader => traders[trader].is_unlocked && !traders[trader].is_finished);\r\n\r\n    if(available_traders.length > 0) {\r\n        location_choice_divs[\"traders\"] = create_location_choice_dropdown({name: \"Visit a merchant\", icon: \"storefront\", class_name: \"choice_trade\"});\r\n\r\n        location_choice_divs[\"traders\"].append(...create_location_choices({location: location, category: \"trade\"}));\r\n    }\r\n    \r\n\r\n    ///////////////////////////\r\n    //add buttons to start jobs\r\n\r\n    const available_jobs = Object.values(location.activities).filter(activity => activities[activity.activity_name].type === \"JOB\" \r\n                                                                    && activities[activity.activity_name].is_unlocked\r\n                                                                    && activity.is_unlocked\r\n                                                                    && activities[activity.activity_name].base_skills_names.filter(skill => !skills[skill].is_unlocked).length == 0);\r\n    \r\n    if(available_jobs.length > 0) {\r\n        location_choice_divs[\"jobs\"] = create_location_choice_dropdown({name: \"Find work\", icon: \"work_outline\", class_name: \"choice_work\"});\r\n\r\n        location_choice_divs[\"jobs\"].append(...create_location_choices({location: location, category: \"work\"}));\r\n    }\r\n\r\n\r\n    ///////////////////////////////\r\n    //add buttons to start training\r\n\r\n    const available_trainings = Object.values(location.activities).filter(activity => activities[activity.activity_name].type === \"TRAINING\" \r\n                                                                    && activities[activity.activity_name].is_unlocked\r\n                                                                    && activity.is_unlocked\r\n                                                                    && activities[activity.activity_name].base_skills_names.filter(skill => !skills[skill].is_unlocked).length == 0);\r\n    \r\n    if(available_trainings.length > 0) {\r\n        location_choice_divs[\"trainings\"] = create_location_choice_dropdown({name: \"Train\", icon: \"fitness_center\", class_name: \"choice_train\"});\r\n\r\n        location_choice_divs[\"trainings\"].append(...create_location_choices({location: location, category: \"train\"}));\r\n    }\r\n\r\n    ////////////////////////////////\r\n    //add buttons to start gathering\r\n\r\n    if(global_flags.is_gathering_unlocked) {\r\n        const available_gatherings = Object.values(location.activities).filter(activity => activities[activity.activity_name].type === \"GATHERING\" \r\n                                                                        && activities[activity.activity_name].is_unlocked\r\n                                                                        && activity.is_unlocked\r\n                                                                        && activities[activity.activity_name].base_skills_names.filter(skill => !skills[skill].is_unlocked).length == 0);\r\n        \r\n        \r\n        if(available_gatherings.length > 0) {\r\n            location_choice_divs[\"gatherings\"] = create_location_choice_dropdown({name: \"Gather resources\", icon: \"search\", class_name: \"choice_gather\"});\r\n    \r\n            location_choice_divs[\"gatherings\"].append(...create_location_choices({location: location, category: \"gather\"}));\r\n        }\r\n        \r\n    }\r\n\r\n    const available_actions = Object.values(location.actions).filter(action => action.is_unlocked && !action.is_finished);\r\n    if(available_actions.length > 0) {\r\n        location_choice_divs[\"actions\"] = create_location_choice_dropdown({name: \"Take an action\", icon: \"circle\", class_name: \"choice_action\"});\r\n\r\n        location_choice_divs[\"actions\"].append(...create_location_choices({location: location, category: \"action\"}));\r\n    }\r\n\r\n    /////////////////////////////////\r\n    //add butttons to change location\r\n\r\n    const available_locations = location.connected_locations.filter(loc => (loc.location.is_unlocked && !loc.location.is_finished && !loc.location.is_challenge));\r\n    if(available_locations.length > 0) {\r\n        location_choice_divs[\"locations\"] = create_location_choice_dropdown({name: \"Move somewhere else\", icon: \"directions\", class_name: \"choice_travel\"});\r\n\r\n        location_choice_divs[\"locations\"].append(...create_location_choices({location: location, category: \"travel\"}));\r\n    }\r\n\r\n    ////////////////////////////\r\n    //add buttons for challenges\r\n\r\n    const available_challenges = location.connected_locations.filter(loc => (loc.location.is_challenge && loc.location.is_unlocked && !loc.location.is_finished));\r\n    if(available_challenges.length > 0) {\r\n        location_choice_divs[\"challenges\"] = create_location_choice_dropdown({name: \"Take on a challenge\", icon: \"warning_amber\", class_name: \"choice_travel\"});\r\n\r\n        location_choice_divs[\"challenges\"].append(...create_location_choices({location: location, category: \"challenge\"}));\r\n    }\r\n\r\n    /////////////////////////////\r\n    //add buttons for fast travel\r\n\r\n    const available_fast_travel = \r\n    [\r\n        ...Object.keys(favourite_locations).filter(key => (key !== current_location.id)), \r\n        ...Object.keys(unlocked_beds).filter(key => (key !== location.id && locations[key].is_unlocked && !locations[key].is_finished))\r\n    ];\r\n\r\n    if((available_fast_travel.length + (last_combat_location?1:0)) > 0) {\r\n        location_choice_divs[\"fast_travel\"] = create_location_choice_dropdown({name: \"Fast travel\", icon: \"directions\", class_name: \"choice_travel\"});\r\n\r\n        location_choice_divs[\"fast_travel\"].append(...create_location_choices({location: location, category: \"fast_travel\"}));\r\n    }\r\n\r\n    action_div.append(...Object.values(location_choice_divs));\r\n}\r\n\r\nfunction update_location_icon() {\r\n    if(current_location.housing && current_location.housing.is_unlocked) {\r\n        location_icon_span.innerHTML = '<i class=\"material-icons location_bed_icon\">bed</i>'\r\n    } else if(favourite_locations[current_location.id]) {\r\n        location_icon_span.innerHTML = '<i class=\"material-icons\">star</i>'\r\n    } else {\r\n        location_icon_span.innerHTML = '<i class=\"material-icons\">star_border</i>'\r\n    }\r\n}\r\n\r\nfunction create_location_choice_dropdown({name, icon, class_name}) {\r\n\r\n    const elem = document.createElement(\"div\");\r\n    elem.innerHTML = `<i class=\"material-icons\">${icon}</i> ${name}`;\r\n    elem.classList.add(\"location_choice_dropdown\", class_name);\r\n\r\n    elem.addEventListener(\"click\", (event)=>{\r\n        let target = event.target;\r\n        if(target.classList.contains(\"material-icons\")) {\r\n            target = target.parentNode;\r\n        }\r\n\r\n        if(target.classList.contains(\"location_choice_dropdown\")) {\r\n            target.classList.toggle(\"location_choice_dropdown_expanded\");\r\n\r\n            //done after toggling class, so it will trigger if class was NOT present when clicked\r\n            if(target.classList.contains(\"location_choice_dropdown_expanded\")) {\r\n                target.scrollIntoView({block: \"end\", inline: \"nearest\", behavior: \"smooth\"});\r\n            }\r\n        }\r\n    });\r\n\r\n    return elem;\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} location \r\n * @param {*} category \r\n * @return {Array} an array of html nodes presenting the available choices\r\n */\r\nfunction create_location_choices({location, category, is_combat = false}) {\r\n    let choice_list = [];\r\n    //that's a lot of ifs for same argument, maybe switch to switch instead?\r\n\r\n    if(category === \"talk\") {\r\n        for(let i = 0; i < location.dialogues.length; i++) { \r\n            if(!dialogues[location.dialogues[i]].is_unlocked || dialogues[location.dialogues[i]].is_finished) { //skip if dialogue is not available\r\n                continue;\r\n            } \r\n\r\n            const lines_available = location.dialogues.filter(dialogue => {\r\n                    let lines_available = false;\r\n                    Object.keys(dialogues[dialogue].textlines).forEach(line => {\r\n                        if(lines_available) {\r\n                            return;\r\n                        } else {\r\n                            lines_available = dialogues[dialogue].textlines[line].is_unlocked && !dialogues[dialogue].textlines[line].is_finished;\r\n                        }\r\n                    });\r\n                    return lines_available;\r\n            }).length > 0;\r\n            if(!lines_available) {\r\n                continue;\r\n            }\r\n            \r\n            const dialogue_div = document.createElement(\"div\");\r\n    \r\n            //if(Object.keys(dialogues[location.dialogues[i]].textlines).length > 0) { //has any textlines\r\n                \r\n            //dialogue_div.innerHTML = add_icons ? `<i class=\"material-icons\">question_answer</i>  ` : \"\";\r\n            dialogue_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + dialogues[location.dialogues[i]].starting_text;\r\n            dialogue_div.classList.add(\"start_dialogue\", \"location_choice\");\r\n            dialogue_div.setAttribute(\"data-dialogue\", location.dialogues[i]);\r\n            dialogue_div.setAttribute(\"onclick\", \"start_dialogue(this.getAttribute('data-dialogue'));\");\r\n            choice_list.push(dialogue_div);\r\n            //}\r\n        }\r\n    } else if (category === \"trade\") {\r\n        for(let i = 0; i < location.traders.length; i++) { \r\n            if(!traders[location.traders[i]].is_unlocked || traders[location.traders[i]].is_finished) { //skip if trader is not available\r\n                continue;\r\n            } \r\n            \r\n            const trader_div = document.createElement(\"div\");  \r\n\r\n            //trader_div.innerHTML = add_icons ? `<i class=\"material-icons\">storefront</i>   ` : \"\";\r\n            trader_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + traders[location.traders[i]].trade_text;\r\n            trader_div.classList.add(\"start_trade\", \"location_choice\");\r\n            trader_div.setAttribute(\"data-trader\", location.traders[i]);\r\n            trader_div.setAttribute(\"onclick\", \"startTrade(this.getAttribute('data-trader'));\");\r\n            choice_list.push(trader_div);\r\n        }\r\n    } else if (category === \"work\") {\r\n        Object.keys(location.activities).forEach(key => {\r\n            if(!activities[location.activities[key].activity_name]?.is_unlocked \r\n                || !location.activities[key]?.is_unlocked \r\n                || activities[location.activities[key].activity_name].type !== \"JOB\") \r\n            {\r\n                return;\r\n            }\r\n            \r\n            const activity_div = document.createElement(\"div\");\r\n\r\n            //activity_div.innerHTML = `<i class=\"material-icons\">work_outline</i>  `;\r\n            activity_div.classList.add(\"activity_div\", \"location_choice\");\r\n            activity_div.setAttribute(\"data-activity\", key);\r\n            activity_div.setAttribute(\"onclick\", \"start_activity(this.getAttribute('data-activity'));\");\r\n\r\n            if(can_work(location.activities[key])) {\r\n                activity_div.classList.add(\"start_activity\");\r\n            } else {\r\n                activity_div.classList.add(\"activity_unavailable\");\r\n            }\r\n\r\n            const job_tooltip = document.createElement(\"div\");\r\n            job_tooltip.classList.add(\"job_tooltip\");\r\n            if(!location.activities[key].infinite){\r\n                job_tooltip.innerHTML = `Available from ${location.activities[key].availability_time.start} to ${location.activities[key].availability_time.end} <br>`;\r\n            }\r\n            job_tooltip.innerHTML += `Pays ${format_money(location.activities[key].get_payment())} per every ` +  \r\n                    `${format_working_time(location.activities[key].working_period)} worked`;\r\n            \r\n\r\n            activity_div.appendChild(job_tooltip);\r\n    \r\n            activity_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + location.activities[key].starting_text;\r\n            choice_list.push(activity_div);\r\n        });\r\n    } else if (category === \"train\") {\r\n        Object.keys(location.activities).forEach(key => {\r\n            if(!activities[location.activities[key].activity_name]?.is_unlocked \r\n                || !location.activities[key]?.is_unlocked \r\n                || activities[location.activities[key].activity_name].type !== \"TRAINING\"\r\n                || activities[location.activities[key].activity_name].base_skills_names.filter(skill => !skills[skill].is_unlocked).length > 0) \r\n            {\r\n                return;\r\n            }\r\n\r\n            const activity_div = document.createElement(\"div\");\r\n\r\n            //activity_div.innerHTML = `<i class=\"material-icons\">fitness_center</i>  `;\r\n            activity_div.classList.add(\"activity_div\", \"start_activity\", \"location_choice\");\r\n            activity_div.setAttribute(\"data-activity\", key);\r\n            activity_div.setAttribute(\"onclick\", \"start_activity(this.getAttribute('data-activity'));\");\r\n    \r\n            activity_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + location.activities[key].starting_text;\r\n            choice_list.push(activity_div);\r\n        });\r\n    } else if (category === \"gather\") {\r\n        Object.keys(location.activities).forEach(key => {\r\n            if(!activities[location.activities[key].activity_name]?.is_unlocked \r\n                || !location.activities[key]?.is_unlocked \r\n                || activities[location.activities[key].activity_name].type !== \"GATHERING\"\r\n                || activities[location.activities[key].activity_name].base_skills_names.filter(skill => !skills[skill].is_unlocked).length > 0) \r\n            {\r\n                return;\r\n            }\r\n\r\n            const activity_div = document.createElement(\"div\");\r\n\r\n            //activity_div.innerHTML = `<i class=\"material-icons\">search</i>  `;\r\n            activity_div.classList.add(\"activity_div\", \"start_activity\", \"location_choice\");\r\n            activity_div.setAttribute(\"data-activity\", key);\r\n            activity_div.setAttribute(\"onclick\", \"start_activity(this.getAttribute('data-activity'));\");\r\n\r\n            activity_div.appendChild(create_gathering_tooltip(location.activities[key]));\r\n    \r\n            activity_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + location.activities[key].starting_text;\r\n            choice_list.push(activity_div);\r\n        });\r\n    } else if (category === \"travel\") {\r\n        if(!is_combat){\r\n            for(let i = 0; i < location.connected_locations.length; i++) { \r\n                \r\n                if(!location.connected_locations[i].location.is_unlocked || location.connected_locations[i].location.is_finished) { //skip if not unlocked or if finished\r\n                    continue;\r\n                }\r\n                if(location.connected_locations[i].location.is_challenge) {\r\n                    continue;\r\n                    //challenges displayed separately\r\n                }\r\n\r\n                const action = document.createElement(\"div\");\r\n                \r\n                if(\"connected_locations\" in location.connected_locations[i].location) {// check again if connected location is normal or combat\r\n                    action.classList.add(\"travel_normal\");\r\n                    if(\"custom_text\" in location.connected_locations[i]) {\r\n                        action.innerHTML = `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + location.connected_locations[i].custom_text;\r\n                    }\r\n                    else {\r\n                        action.innerHTML = `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + \"Go to [\" + location.connected_locations[i].location.name+\"]\";\r\n                    }\r\n                } else {\r\n                    action.classList.add(\"travel_combat\");\r\n                    if(\"custom_text\" in location.connected_locations[i]) {\r\n                        action.innerHTML = `<i class=\"material-icons\">warning_amber</i> ` + location.connected_locations[i].custom_text;\r\n                    } else {\r\n                        action.innerHTML = `<i class=\"material-icons\">warning_amber</i>  ` + \"Enter the [\" + location.connected_locations[i].location.name+\"]\";\r\n                    }\r\n                }\r\n            \r\n                action.classList.add(\"action_travel\", \"location_choice\");\r\n                action.setAttribute(\"data-travel\", location.connected_locations[i].location.id);\r\n                action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'));\");\r\n        \r\n                choice_list.push(action);\r\n            } \r\n        } else {\r\n            const action = document.createElement(\"div\");\r\n            action.classList.add(\"travel_normal\", \"action_travel\", \"location_choice\");\r\n            if(location.leave_text) {\r\n                action.innerHTML = location.leave_text;\r\n            } else {\r\n                action.innerHTML = \"Go back to [\" + location.parent_location.name + \"]\";\r\n            }\r\n            action.setAttribute(\"data-travel\", location.parent_location.id);\r\n            action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'));\");\r\n\r\n            choice_list.push(action);\r\n        }\r\n\r\n        if(last_location_with_bed && !location.housing?.is_unlocked && !location.connected_locations) {\r\n            const last_bed = locations[last_location_with_bed];\r\n\r\n            const action = document.createElement(\"div\");\r\n            action.classList.add(\"action_travel\", \"travel_normal\", \"location_choice\");\r\n            \r\n            if(!is_combat) {\r\n                action.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> `\r\n            }\r\n            action.innerHTML += `Quick return to [${last_bed.name}]`;\r\n\r\n            action.setAttribute(\"data-travel\", last_bed.name);\r\n            action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'));\");\r\n    \r\n            choice_list.push(action);\r\n        }\r\n\r\n        choice_list.sort((a,b) => b.classList.contains(\"travel_normal\") - a.classList.contains(\"travel_normal\"));\r\n    } else if (category === \"challenge\") {\r\n        const available_challenges = location.connected_locations.filter(loc => (loc.location.is_challenge && loc.location.is_unlocked && !loc.location.is_finished));\r\n       \r\n        for(let i = 0; i < available_challenges.length; i++) { \r\n            const action = document.createElement(\"div\");\r\n\r\n            action.classList.add(\"travel_combat\", \"location_choice\");\r\n            if(\"custom_text\" in available_challenges[i]) {\r\n                action.innerHTML = `<i class=\"material-icons\">warning_amber</i>  ` + available_challenges[i].custom_text;\r\n            }\r\n            else {\r\n                action.innerHTML = `<i class=\"material-icons\">warning_amber</i>  ` + \"Enter the \" + available_challenges[i].location.name;\r\n            }\r\n            \r\n            action.classList.add(\"action_travel\");\r\n            action.setAttribute(\"data-travel\", available_challenges[i].location.id);\r\n            action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'));\");\r\n    \r\n            choice_list.push(action);\r\n        }\r\n    } else if (category === \"action\") {\r\n        Object.keys(location.actions).forEach(key => {\r\n            if(location.actions[key].is_finished || !location.actions[key].is_unlocked) {\r\n                return;\r\n            }\r\n\r\n            const location_action_div = document.createElement(\"div\");\r\n\r\n            //location_action_div.innerHTML = `<i class=\"material-icons\">circle</i>  `;\r\n            location_action_div.classList.add(\"location_action_div\", \"start_location_action\", \"location_choice\");\r\n            location_action_div.setAttribute(\"data-location_action\", key);\r\n            location_action_div.setAttribute(\"onclick\", \"start_location_action(this.getAttribute('data-location_action'));\");\r\n\r\n            location_action_div.appendChild(create_location_action_tooltip(location.actions[key]));\r\n    \r\n            location_action_div.innerHTML += `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> ` + location.actions[key].starting_text;\r\n            choice_list.push(location_action_div);\r\n        });\r\n    } else if (category === \"fast_travel\") {\r\n        choice_list = create_fast_travel_choices();\r\n    }\r\n\r\n    return choice_list;\r\n}\r\n\r\nfunction create_fast_travel_choices() {\r\n    let choice_list = [];\r\n\r\n    let available_fast_travel = \r\n    [\r\n        ...Object.keys(favourite_locations).filter(key => (key !== current_location.id)),\r\n        ...Object.keys(unlocked_beds).filter(key => (key !== location.id && locations[key].is_unlocked && !locations[key].is_finished))\r\n    ];\r\n\r\n    if(last_combat_location && !available_fast_travel.includes(last_combat_location)) {\r\n        available_fast_travel.push(last_combat_location);\r\n    }\r\n\r\n    available_fast_travel = available_fast_travel.sort((a,b) => {\r\n        if(locations[a].housing?.is_unlocked && !locations[b].housing?.is_unlocked) {\r\n            return -1;\r\n        } else if(!locations[a].housing?.is_unlocked && locations[b].housing?.is_unlocked) {\r\n            return 1;\r\n        } else {\r\n            if(locations[a].tags.safe_zone && !locations[b].tags.safe_zone) {\r\n                return -1;\r\n            } else if(!locations[a].tags.safe_zone && locations[b].tags.safe_zone) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n    });\r\n\r\n    for(let i = 0; i < available_fast_travel.length; i++) { \r\n        if(!locations[available_fast_travel[i]].is_unlocked || locations[available_fast_travel[i]].is_finished) { //skip if not unlocked or if finished\r\n            continue;\r\n        }\r\n\r\n        const action = document.createElement(\"div\");\r\n\r\n        if(locations[available_fast_travel[i]].tags.safe_zone) {\r\n        \r\n            action.classList.add(\"travel_normal\");\r\n\r\n            if(locations[available_fast_travel[i]].housing?.is_unlocked) {\r\n                action.innerHTML = `<i class=\"material-icons\">bed</i> <span class=\"fast_travel_name\">` + \"Travel to [\" + locations[available_fast_travel[i]].name+\"]</span>\";\r\n            } else {\r\n                action.innerHTML = `<i class=\"material-icons location_choice_icon\">check_box_outline_blank</i> <span class=\"fast_travel_name\">` + \"Travel to [\" + locations[available_fast_travel[i]].name+\"]</span>\";\r\n            }\r\n            \r\n            action.classList.add(\"action_travel\", \"location_choice\");\r\n            action.setAttribute(\"data-travel\", locations[available_fast_travel[i]].name);\r\n            action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'), event);\");\r\n        } else {            \r\n            action.classList.add(\"travel_combat\");\r\n            \r\n            action.innerHTML = `<i class=\"material-icons\">warning_amber</i> <span class=\"fast_travel_name\">Travel to [${locations[available_fast_travel[i]].name}]</span>`;\r\n            \r\n            action.classList.add(\"action_travel\", \"location_choice\");\r\n            action.setAttribute(\"data-travel\", locations[available_fast_travel[i]].name);\r\n            action.setAttribute(\"onclick\", \"change_location(this.getAttribute('data-travel'), event);\");\r\n        }\r\n\r\n        if(!locations[available_fast_travel[i]].housing?.is_unlocked && locations[available_fast_travel[i]].id !== last_combat_location) {\r\n            const removal_button = document.createElement(\"span\");\r\n            removal_button.innerHTML = `<i class=\"material-icons fast_travel_removal_button\">close</i>`;\r\n            removal_button.setAttribute(\"onclick\",\"remove_location_from_favourites({location_id:this.parentNode.getAttribute('data-travel')})\");\r\n            action.appendChild(removal_button);\r\n        }\r\n\r\n        choice_list.push(action);\r\n    }\r\n    return choice_list;\r\n}\r\n\r\nfunction remove_fast_travel_choice({location_id}) {\r\n    const element = location_choice_divs[\"fast_travel\"].querySelector(`[data-travel=\"${location_id}\"`);\r\n    if(location_id === last_combat_location || locations[location_id].housing?.is_unlocked) {\r\n        //remove only button\r\n        element.getElementsByClassName(\"fast_travel_removal_button\")[0].parentNode.remove();\r\n    } else {\r\n        //remove full element\r\n        element.remove();\r\n    }\r\n}\r\n\r\nfunction update_displayed_combat_location(location) {\r\n\r\n    document.documentElement.style.setProperty('--location_desc_tooltip_visibility', \"visible\");\r\n    clear_action_div();\r\n    location_types_div.innerHTML = \"\";\r\n    let action;\r\n\r\n    update_location_icon(location);\r\n\r\n    enemy_count_div.style.display = \"block\";\r\n    combat_div.style.display = \"block\";\r\n\r\n    if(!options.disable_combat_autoswitch) {\r\n        combat_switch.click();\r\n        combat_switch.classList.add(\"active_selection_button\");\r\n        inventory_switch.classList.remove(\"active_selection_button\");\r\n    } \r\n    combat_switch.style.pointerEvents = \"auto\";\r\n    combat_switch.style.cursor = \"pointer\";\r\n    combat_switch.style.color = \"white\";\r\n\r\n    document.documentElement.style.setProperty('--actions_div_height', getComputedStyle(document.body).getPropertyValue('--actions_div_height_combat'));\r\n    document.documentElement.style.setProperty('--actions_div_top', getComputedStyle(document.body).getPropertyValue('--actions_div_top_combat'));\r\n\r\n\r\n    enemy_count_div.children[0].children[1].innerHTML = location.enemy_count - location.enemy_groups_killed % location.enemy_count;\r\n\r\n    action = create_location_choices({location: location, category: \"travel\", is_combat: true});\r\n\r\n    action_div.append(...action);\r\n\r\n    location_name_span.innerText = current_location.name;\r\n    if(current_location.types.length == 0) {\r\n        document.documentElement.style.setProperty('--location_name_div_width', '390px');\r\n    } else {\r\n        document.documentElement.style.setProperty('--location_name_div_width', '250px');\r\n    }\r\n\r\n    location_tooltip.innerText = current_location.getDescription();\r\n    location_tooltip.classList.add(\"location_tooltip\");\r\n    \r\n    document.getElementById(\"location_description_div\").innerText = current_location.getDescription();\r\n    create_location_types_display(current_location);\r\n}\r\n\r\nfunction create_location_types_display(current_location){\r\n    for(let i = 0; i < current_location.types?.length; i++) {\r\n        const type_div = document.createElement(\"div\");\r\n\r\n        type_div.innerHTML = current_location.types[i].type + (current_location.types[i].stage>1?` ${\"I\".repeat(current_location.types[i].stage)}`:\"\");\r\n        type_div.classList.add(\"location_type_div\");\r\n\r\n        const type_tooltip = document.createElement(\"div\");\r\n        type_tooltip.innerHTML = location_types[current_location.types[i].type].stages[current_location.types[i].stage].description;\r\n        type_tooltip.classList.add(\"location_type_tooltip\");\r\n\r\n        const {type, stage} = current_location.types[i];\r\n        const {effects} = location_types[type].stages[stage];\r\n        if(Object.keys(effects || {}).length > 0) {\r\n            type_tooltip.innerHTML += `<br>`;\r\n\r\n            Object.keys(effects).forEach(stat => {\r\n                if(effects[stat].multiplier) {\r\n                    const base = effects[stat].multiplier;\r\n                    const actual = get_location_type_penalty(type, stage, stat, \"multiplier\");\r\n                    type_tooltip.innerHTML += `<br>${stat_names[stat]} x${Math.round(1000*actual)/1000}`;\r\n                    if(base != actual) {\r\n                        type_tooltip.innerHTML += ` [base: x${effects[stat].multiplier}]`;\r\n                    }\r\n                }\r\n                if(effects[stat].flat) {\r\n                    const base = effects[stat].flat;\r\n                    const actual = get_location_type_penalty(type, stage, stat, \"flat\");\r\n                    type_tooltip.innerHTML += `<br>${stat_names[stat]}: ${Math.round(1000*actual)/1000}`;\r\n                    if(base != actual) {\r\n                        type_tooltip.innerHTML += ` [base: ${effects[stat].flat}]`;\r\n                    }\r\n                }\r\n                \r\n            });\r\n\r\n        } //other effects to be done when/if they are added\r\n\r\n        type_div.appendChild(type_tooltip);\r\n        location_types_div.appendChild(type_div);\r\n    }\r\n}\r\n\r\nfunction update_displayed_location_types(current_location){\r\n    location_types_div.innerHTML = \"\";\r\n    create_location_types_display(current_location);\r\n}\r\n\r\nfunction open_crafting_window() {\r\n    action_div.style.display = \"none\";\r\n    document.getElementById(\"crafting_window\").style.display = \"block\";\r\n    document.getElementById(\"crafting_mainpage_buttons\").children[0].click();\r\n    \r\n    let elements = document.querySelectorAll(`[data-crafting_subcategory]`);\r\n    for(let i = 0; i < elements.length; i++) {\r\n        if(elements[i].dataset.crafting_subcategory !== \"items\") {\r\n            elements[i].style.display = \"none\";\r\n        } else {\r\n            elements[i].style.display = \"\";\r\n        } \r\n    }\r\n\r\n    elements = document.getElementsByClassName(\"crafting_subpage_buttons\");\r\n    for(let i = 0; i < elements.length; i++) {\r\n        elements[i].children[0].click();\r\n    }\r\n\r\n    update_displayed_crafting_recipes();\r\n}\r\n\r\nfunction close_crafting_window() {\r\n    action_div.style.display = \"block\";\r\n    document.getElementById(\"crafting_window\").style.display = \"none\";\r\n    update_displayed_normal_location(current_location);\r\n}\r\n\r\n/**\r\n * switches between main pages of crafting menu (crafting, alchemy, cooking, etc)\r\n * @param {String} category \r\n */\r\nfunction switch_crafting_recipes_page(category) {\r\n    const elements = document.querySelectorAll('[data-crafting_category]');\r\n    for(let i = 0; i < elements.length; i++) {\r\n        \r\n        if(!elements[i].dataset.crafting_subcategory) {\r\n            if(elements[i].dataset.crafting_category !== category) {\r\n                elements[i].style.display = \"none\";\r\n            } else {\r\n                elements[i].style.display = \"\";\r\n            }\r\n        } \r\n    }\r\n\r\n    unexpand_displayed_recipes();\r\n}\r\n\r\n/**\r\n * switches between subpages of a crafting page (items-components-equipment)\r\n * @param {String} category \r\n * @param {String} subcategory \r\n */\r\nfunction switch_crafting_recipes_subpage(category, subcategory) {\r\n    const elements = document.querySelectorAll(`[data-crafting_category='${category}'], [data-crafting_subcategory]`);\r\n    for(let i = 0; i < elements.length; i++) {\r\n        if(elements[i].dataset.crafting_subcategory) {\r\n            if(elements[i].dataset.crafting_category === category) {\r\n                if(elements[i].dataset.crafting_subcategory !== subcategory) {\r\n                    elements[i].style.display = \"none\";\r\n                } else {\r\n                    elements[i].style.display = \"\";\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    unexpand_displayed_recipes();\r\n}\r\n\r\nfunction unexpand_displayed_recipes() {\r\n    const classes = [\"selected_recipe\", \"selected_component_list\", \"selected_component_category\"];\r\n    for(let i = 0; i < classes.length; i++) {\r\n        const elements = document.getElementsByClassName(classes[i]);\r\n        for(let j = 0 ; j < elements.length; j++) {\r\n            elements[j].classList.remove(classes[i]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction create_displayed_crafting_recipes() {\r\n    Object.keys(recipes).forEach(recipe_category => {\r\n        Object.keys(recipes[recipe_category]).forEach(recipe_subcategory => {\r\n            if(recipe_subcategory === \"items\") {\r\n                crafting_pages[recipe_category][recipe_subcategory].innerHTML = \"\";\r\n            }\r\n            Object.keys(recipes[recipe_category][recipe_subcategory]).forEach(recipe => {\r\n                add_crafting_recipe_to_display({category: recipe_category, subcategory: recipe_subcategory, recipe_id: recipe});\r\n            });\r\n        });\r\n    });\r\n\r\n    update_item_recipe_visibility();\r\n}\r\n\r\nfunction add_crafting_recipe_to_display({category, subcategory, recipe_id}) {\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n    if(!recipe.is_unlocked) {\r\n        return;\r\n    }\r\n    const recipe_div = document.createElement(\"div\");\r\n\r\n    const recipe_name_span = document.createElement(\"span\");\r\n    recipe_name_span.innerHTML = recipe.name;\r\n\r\n    recipe_div.append(recipe_name_span);\r\n    recipe_div.classList.add(\"recipe_div\");\r\n    recipe_div.dataset.recipe_id = recipe_id;\r\n\r\n    if(subcategory === \"items\") {\r\n        recipe_name_span.classList.add(\"recipe_item_name\");\r\n        recipe_div.children[0].innerHTML = '<i class=\"material-icons icon\" style=\"visibility:hidden\"> keyboard_double_arrow_down </i>' + recipe_div.children[0].innerHTML;\r\n        //invisible icon added just so it properly matches in height and text position with recipes in other subcategories\r\n        if(!recipe.get_availability().available_ammount) {\r\n            recipe_div.classList.add(\"recipe_unavailable\");\r\n        }\r\n\r\n        recipe_div.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"recipe_item_name\") && !event.target.parentNode.classList.contains(\"recipe_unavailable\")) {\r\n                window.useRecipe(event.target);\r\n            } else if(event.target.classList.contains(\"craft_ammount_button\")) {\r\n                window.useRecipe(event.target.parentNode, Number(event.target.dataset.craft_ammount));\r\n            }\r\n        });\r\n\r\n        const craft_ammount_buttons = document.createElement(\"div\");\r\n        craft_ammount_buttons.classList.add(\"craft_ammount_buttons\");\r\n        \r\n        const button_5 = document.createElement(\"div\");\r\n        button_5.innerHTML = \"5\";\r\n        button_5.dataset.craft_ammount = 5;\r\n        button_5.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_5);\r\n\r\n        const button_10 = document.createElement(\"div\");\r\n        button_10.innerHTML = \"10\";\r\n        button_10.dataset.craft_ammount = 10;\r\n        button_10.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_10);\r\n\r\n        const button_all = document.createElement(\"div\");\r\n        button_all.innerHTML = \"all\";\r\n        button_all.dataset.craft_ammount = Infinity;\r\n        button_all.classList.add(\"craft_ammount_button\");\r\n\r\n        craft_ammount_buttons.append(button_all);\r\n\r\n        recipe_div.append(craft_ammount_buttons);\r\n\r\n        recipe_div.append(create_recipe_tooltip({category, subcategory, recipe_id}));\r\n    } else if(subcategory === \"components\") {\r\n        recipe_name_span.classList.add(\"recipe_name\");\r\n        recipe_div.children[0].innerHTML = '<i class=\"material-icons icon crafting_dropdown_icon\"> keyboard_double_arrow_down </i>' + recipe_div.children[0].innerHTML;\r\n        const material_selection = document.createElement(\"div\");\r\n        material_selection.classList.add(\"folded_material_list\");\r\n        recipe_div.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"recipe_name\") || event.target.classList.contains(\"crafting_dropdown_icon\")) {\r\n                window.updateDisplayedMaterialChoice({category, subcategory, recipe_id});\r\n                toggle_exclusive_class({element: recipe_div, class_name: \"selected_recipe\"});\r\n            } \r\n        });\r\n\r\n        recipe_div.append(material_selection);\r\n    } else if(recipe.recipe_type === \"component\") {\r\n        //component but from other category, which generally means clothing\r\n        \r\n        recipe_name_span.classList.add(\"recipe_name\");\r\n        \r\n        if(recipe.item_type === \"Armor\") {\r\n            recipe_div.classList.add(\"clothing_recipe\");\r\n        }\r\n\r\n        recipe_div.children[0].innerHTML = '<i class=\"material-icons icon crafting_dropdown_icon\"> keyboard_double_arrow_down </i>' + recipe_div.children[0].innerHTML;\r\n        const material_selection = document.createElement(\"div\");\r\n        material_selection.classList.add(\"folded_material_list\");\r\n        recipe_div.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"recipe_name\") || event.target.classList.contains(\"crafting_dropdown_icon\")) {\r\n\r\n                remove_class_from_all(\"selected_component_list\");\r\n                remove_class_from_all(\"selected_component_category\");\r\n                \r\n                window.updateDisplayedMaterialChoice({category, subcategory, recipe_id});\r\n                toggle_exclusive_class({element: recipe_div, class_name: \"selected_recipe\"});\r\n            } \r\n        });\r\n\r\n        recipe_div.append(material_selection);\r\n    } else if(subcategory === \"equipment\") {\r\n        if(recipe.item_type === \"Armor\") {\r\n            recipe_div.classList.add(\"armor_recipe\");\r\n        } else if(recipe.item_type === \"Weapon\") {\r\n            recipe_div.classList.add(\"weapon_recipe\");\r\n        } else if(recipe.item_type === \"Shield\") {\r\n            recipe_div.classList.add(\"shield_recipe\");\r\n        } else {\r\n            console.warn(`Recipe \"${category}\" -> \"${subcategory}\" -> \"${recipe_id}\" has wrong type of resulting item (\"${recipe.item_type}\")`)\r\n        }\r\n\r\n        recipe_name_span.classList.add(\"recipe_name\");\r\n        \r\n        recipe_div.children[0].innerHTML = '<i class=\"material-icons icon crafting_dropdown_icon\"> keyboard_double_arrow_down </i>' +  recipe_div.children[0].innerHTML;\r\n\r\n        const component_selection_1 = document.createElement(\"div\"); //weapon head or internal armor\r\n        component_selection_1.innerHTML = `<span class=\"crafting_selection\"><i class=\"material-icons icon subcrafting_dropdown_icon\"> keyboard_double_arrow_down </i>Select a [${recipe.components[0]}]</span>`;\r\n        \r\n        const component_1_list = document.createElement(\"div\");\r\n        component_1_list.classList.add(\"folded_crafting_selection\");\r\n        component_selection_1.appendChild(component_1_list);\r\n\r\n        const component_selection_2 = document.createElement(\"div\"); //weapon handle or external armor\r\n        component_selection_2.innerHTML = `<span class=\"crafting_selection\"><i class=\"material-icons icon subcrafting_dropdown_icon\"> keyboard_double_arrow_down </i>Select a [${recipe.components[1]}]</span>`;\r\n        \r\n        const component_2_list = document.createElement(\"div\");\r\n        component_2_list.classList.add(\"folded_crafting_selection\");\r\n        component_selection_2.appendChild(component_2_list);\r\n\r\n        const component_selections = document.createElement(\"div\");\r\n        component_selections.append(component_selection_1);\r\n        component_selections.append(component_selection_2);\r\n\r\n        recipe_div.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"recipe_name\") || event.target.classList.contains(\"crafting_dropdown_icon\")) {\r\n\r\n                remove_class_from_all(\"selected_component_list\");\r\n                remove_class_from_all(\"selected_component_category\");\r\n                \r\n                toggle_exclusive_class({element: recipe_div, class_name: \"selected_recipe\"});\r\n\r\n                window.updateDisplayedComponentChoice({category, subcategory, recipe_id});\r\n\r\n                update_recipe_tooltip({category, subcategory, recipe_id, components: []});\r\n            }\r\n        });\r\n\r\n        component_selection_1.parentNode.children[0].addEventListener(\"click\", (event)=>{\r\n            //unfold a list for selection; its content already loaded by a different function\r\n            if(event.target.classList.contains(\"crafting_selection\") || event.target.classList.contains(\"subcrafting_dropdown_icon\")) {\r\n                component_selection_1.children[1].classList.toggle(\"selected_component_list\");\r\n                component_selection_1.children[0].classList.toggle(\"selected_component_category\");\r\n                if(recipe_div.querySelectorAll(\".folded_crafting_selection\").item(0).lastChild \r\n                    && !is_element_above_x(recipe_div.querySelectorAll(\".folded_crafting_selection\").item(0).lastChild, document.getElementById(\"exit_crafting_button\"))) \r\n                {\r\n                    recipe_div.querySelectorAll(\".folded_crafting_selection\").item(0).lastChild.scrollIntoView({block: \"end\", inline: \"nearest\"});\r\n                }\r\n            }\r\n        });\r\n        component_selection_2.parentNode.children[1].addEventListener(\"click\", (event)=>{\r\n            //unfold a list for selection; its content already loaded by a different function\r\n            if(event.target.classList.contains(\"crafting_selection\")  || event.target.classList.contains(\"subcrafting_dropdown_icon\")) {\r\n                component_selection_2.children[1].classList.toggle(\"selected_component_list\");\r\n                component_selection_2.children[0].classList.toggle(\"selected_component_category\");\r\n                if(!is_element_above_x(recipe_div.querySelector(\".recipe_creation_button\"), document.getElementById(\"exit_crafting_button\"))) {\r\n                    recipe_div.querySelector(\".recipe_creation_button\").scrollIntoView({block: \"end\", inline: \"nearest\"});\r\n                }\r\n            }\r\n        });\r\n\r\n        const accept_recipe_button = document.createElement(\"div\");\r\n        accept_recipe_button.innerHTML = \"<span class='recipe_creation_span'>Create</span>\";\r\n        accept_recipe_button.classList.add(\"recipe_creation_button\");\r\n\r\n        const craft_ammount_buttons = document.createElement(\"div\");\r\n        craft_ammount_buttons.classList.add(\"craft_ammount_buttons\");\r\n        \r\n        const button_5 = document.createElement(\"div\");\r\n        button_5.innerHTML = \"5\";\r\n        button_5.dataset.craft_ammount = 5;\r\n        button_5.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_5);\r\n\r\n        const button_10 = document.createElement(\"div\");\r\n        button_10.innerHTML = \"10\";\r\n        button_10.dataset.craft_ammount = 10;\r\n        button_10.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_10);\r\n\r\n        const button_all = document.createElement(\"div\");\r\n        button_all.innerHTML = \"all\";\r\n        button_all.dataset.craft_ammount = Infinity;\r\n        button_all.classList.add(\"craft_ammount_button\");\r\n\r\n        craft_ammount_buttons.append(button_all);\r\n\r\n        accept_recipe_button.append(craft_ammount_buttons);\r\n\r\n        accept_recipe_button.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"recipe_creation_button\")) {\r\n                window.useRecipe(event.target);\r\n            } else if(!event.target.classList.contains(\"craft_ammount_button\")) {\r\n                window.useRecipe(event.target.parentNode);\r\n            } else {\r\n                window.useRecipe(event.target.parentNode.parentNode, Number(event.target.dataset.craft_ammount));\r\n            }\r\n        });\r\n\r\n        recipe_div.append(component_selections);\r\n        recipe_div.append(accept_recipe_button);\r\n        accept_recipe_button.append(create_recipe_tooltip({category, subcategory, recipe_id, components: []}));\r\n    } else {\r\n        throw new Error(`No such crafting subcategory as \"${subcategory}\"`);\r\n    }\r\n\r\n    crafting_pages[category][subcategory].appendChild(recipe_div);\r\n}\r\n\r\n/**\r\n * updates all displayed recipes; \r\n * needs to be called whenever something is crafted (in case some recipe became unavailable due to lack of materials) and/or whenever a crafting-related skill levels up\r\n */\r\nfunction update_displayed_crafting_recipes() {\r\n    Object.keys(recipes).forEach(recipe_category => {\r\n        Object.keys(recipes[recipe_category]).forEach(recipe_subcategory => {\r\n            Object.keys(recipes[recipe_category][recipe_subcategory]).forEach(recipe => {\r\n                if(recipes[recipe_category][recipe_subcategory][recipe].is_unlocked){\r\n                    if(crafting_pages[recipe_category][recipe_subcategory].querySelector(`[data-recipe_id=\"${recipe}\"]`)) {\r\n                        update_displayed_crafting_recipe({category: recipe_category, subcategory: recipe_subcategory, recipe_id: recipe});\r\n                    } else {\r\n                        add_crafting_recipe_to_display({category: recipe_category, subcategory: recipe_subcategory, recipe_id: recipe});\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    });\r\n}\r\n\r\n/**\r\n * updates description and display color, based on resource availability and skill lvl\r\n */\r\nfunction update_displayed_crafting_recipe({category, subcategory, recipe_id}) {\r\n    const recipe_div = crafting_pages[category][subcategory].querySelector(`[data-recipe_id=\"${recipe_id}\"]`);\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n\r\n    if(subcategory === \"items\") {\r\n        if(recipe.get_availability().available_ammount) {\r\n            recipe_div.classList.remove(\"recipe_unavailable\");\r\n        } else {\r\n            recipe_div.classList.add(\"recipe_unavailable\");\r\n        }\r\n        update_recipe_tooltip({category, subcategory, recipe_id});\r\n    } else if(subcategory === \"components\" || recipe.recipe_type === \"component\") {\r\n        update_recipe_tooltip({category, subcategory, recipe_id});\r\n    } else if(subcategory === \"equipment\") {\r\n        //update_recipe_tooltip({category, subcategory, recipe_id, material: null, components: []});\r\n        //shouldn't actually be needed as tooltip already updates when opening recipe and when selecting components\r\n    } else {\r\n        console.error(`No such crafting subcategory as \"${subcategory}\"`);\r\n    }\r\n}\r\n\r\n/**\r\n * creates a tooltip for the >final result<\r\n */\r\nfunction create_recipe_tooltip({category, subcategory, recipe_id, material, components}) {\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n    const tooltip = document.createElement(\"div\");\r\n    tooltip.classList.add(\"recipe_tooltip\");\r\n    if(subcategory === \"items\") {\r\n        tooltip.innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id});\r\n        tooltip.classList.add(\"items_recipe_tooltip\");\r\n    } else if(subcategory === \"components\" || recipe.recipe_type === \"component\") {\r\n        if(!material) {\r\n            throw new Error(`Component recipes require passing a material, but recipe \"${category}\" -> \"${subcategory}\" -> \"${recipe_id}\" had none!`);\r\n        }\r\n        tooltip.innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id, material});\r\n        tooltip.classList.add(\"component_recipe_tooltip\");\r\n    } else if(subcategory === \"equipment\") {\r\n        tooltip.innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id, material, components});\r\n        tooltip.classList.add(\"equipment_recipe_tooltip\");\r\n    } else {\r\n        console.error(`No such crafting subcategory as \"${subcategory}\"`);\r\n    }\r\n    return tooltip;\r\n}\r\n\r\nfunction update_item_recipe_tooltips() {\r\n    Object.keys(recipes).forEach(recipe_category => {\r\n        Object.keys(recipes[recipe_category]).forEach(recipe_subcategory => {\r\n            if(recipe_subcategory === \"items\") {\r\n                Object.keys(recipes[recipe_category][recipe_subcategory]).forEach(recipe => {\r\n                    if(recipes[recipe_category][recipe_subcategory][recipe].is_unlocked){\r\n                        update_recipe_tooltip({category: recipe_category, subcategory: \"items\", recipe_id: recipe});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction update_recipe_tooltip({category, subcategory, recipe_id, components}) {\r\n    const tooltip = crafting_pages[category][subcategory].querySelector(`[data-recipe_id=\"${recipe_id}\"]`).querySelector(`.${subcategory}_recipe_tooltip`);\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n    if(subcategory === \"items\") {\r\n        tooltip.innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id});\r\n    } else if(subcategory === \"components\" || recipe.recipe_type === \"component\") {\r\n        const material_selections_div = crafting_pages[category][subcategory].querySelector(`[data-recipe_id='${recipe_id}']`).children[1];\r\n        for(let i = 0; i < material_selections_div.children.length; i++) {\r\n            const material_key = material_selections_div.children[i].dataset.item_key;\r\n            const {id} = JSON.parse(material_key);\r\n            const material_recipe = recipe.materials.filter(material => material.material_id === id);\r\n            \r\n            material_selections_div.children[i].children[1].innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id, material: material_recipe[0]});\r\n        }\r\n    } else if(subcategory === \"equipment\") {\r\n        tooltip.innerHTML = create_recipe_tooltip_content({category, subcategory, recipe_id, components});\r\n    } else {\r\n        console.error(`No such crafting subcategory as \"${subcategory}\"`);\r\n    }\r\n}\r\n\r\nfunction create_recipe_tooltip_content({category, subcategory, recipe_id, material, components}) {\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n    const station_tier = current_location?.crafting?.tiers[category] || 1;\r\n    let tooltip = \"\";\r\n    if(subcategory === \"items\") {\r\n        const success_chance = Math.round(100*recipe.get_success_chance());\r\n        tooltip += `Success chance: <b><span style=\"color:${success_chance > 74?\"lime\":success_chance>49?\"yellow\":success_chance>24?\"orange\":\"red\"}\">${success_chance}%</span></b><br><br>Materials required:<br>`;\r\n        for(let i = 0; i < recipe.materials.length; i++) {\r\n            if(recipe.materials[i].material_id) {\r\n                const key = item_templates[recipe.materials[i].material_id].getInventoryKey();\r\n                if(character.inventory[key]?.count >= recipe.materials[i].count) {\r\n                    tooltip += `<span style=\"color:lime\"><b>${item_templates[recipe.materials[i].material_id].getName()} x${character.inventory[key]?.count || 0}/${recipe.materials[i].count}</b></span><br>`;\r\n                } else {\r\n                    tooltip += `<span style=\"color:red\"><b>${item_templates[recipe.materials[i].material_id].getName()} x${character.inventory[key]?.count || 0}/${recipe.materials[i].count}</b></span><br>`;\r\n                }\r\n            } else if(recipe.materials[i].material_type) {\r\n                //check if mat type available, grab all that fit\r\n\r\n                let mats = [];\r\n                Object.keys(character.inventory).forEach(key => {\r\n                    if(character.inventory[key].item.material_type === recipe.materials[i].material_type) {\r\n                        mats.push(character.inventory[key]);\r\n                    }\r\n                });\r\n\r\n                mats = mats.sort((a,b) => a.item.getValue()-b.item.getValue());\r\n                let any_available = false;\r\n                let mat_list = \"\";\r\n                for(let j = 0; j < mats.length; j++) {\r\n                    if(mats[j].count >= recipe.materials[i].count) {\r\n                        any_available = true;\r\n                        mat_list += `<span style=\"color:lime\"><b>${mats[j].item.getName()} x${mats[j].count || 0}/${recipe.materials[i].count}</b></span><br>`;\r\n                    } else {\r\n                        mat_list  += `<span style=\"color:red\"><b>${mats[j].item.getName()} x${mats[j].count || 0}/${recipe.materials[i].count}</b></span><br>`;\r\n                    }\r\n                }\r\n\r\n                if(mats.length > 0) {\r\n                    if(any_available) {\r\n                        tooltip+=`<span style=\"color:lime\"><b>Any ${recipe.materials[i].material_type} x${recipe.materials[i].count}:</b></span><br>`;\r\n                    } else {\r\n                        tooltip+=`<span style=\"color:red\"><b>Any ${recipe.materials[i].material_type} x${recipe.materials[i].count}:</b></span><br>`;\r\n                    }\r\n                    tooltip+=`<div class=\"crafting_tooltip_mat_list\">${mat_list}</div>`;\r\n\r\n                } else {\r\n                    tooltip+=`<span style=\"color:red\"><b>Any ${recipe.materials[i].material_type} x${recipe.materials[i].count}:</b></span><br>`;\r\n                }\r\n            }\r\n        }\r\n        const xp_val_1 = get_recipe_xp_value({category, subcategory, recipe_id});\r\n        tooltip += `<br>XP value: ${xp_val_1}`;\r\n        tooltip += `<br>Result:<br><div class=\"recipe_result\">${create_item_tooltip_content({item: item_templates[recipe.getResult().result_id], options: {skip_quality: true, anchor_tooltip: true}})}</div>`;\r\n    } else if(subcategory === \"components\"  || recipe.recipe_type === \"component\") {\r\n        tooltip += `Material required:<br>`;\r\n        if(character.inventory[item_templates[material.material_id].getInventoryKey()]?.count >= material.count) {\r\n            tooltip += `<span style=\"color:lime\"><b>${item_templates[material.material_id].getName()} x${character.inventory[item_templates[material.material_id].getInventoryKey()]?.count || 0}/${material.count}</b></span><br>`;\r\n        } else {\r\n            tooltip += `<span style=\"color:red\"><b>${item_templates[material.material_id].getName()} x${character.inventory[item_templates[material.material_id].getInventoryKey()]?.count || 0}/${material.count}</b></span><br>`;\r\n        }\r\n        const quality_range = recipe.get_quality_range(station_tier - item_templates[material.result_id].component_tier);\r\n        const xp_val_1 = get_recipe_xp_value({category, subcategory, recipe_id, material_count: material.count, result_tier: item_templates[material.result_id].component_tier, rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[0])]});\r\n        const xp_val_2 = get_recipe_xp_value({category, subcategory, recipe_id, material_count: material.count, result_tier: item_templates[material.result_id].component_tier, rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[1])]});\r\n        tooltip += `<br>XP value: ${xp_val_1} - ${xp_val_2}<br>`;\r\n        tooltip += `<br>Result:<br><div class=\"recipe_result\">${create_item_tooltip_content({item:item_templates[material.result_id], options: {quality: quality_range}})}</div>`;\r\n    } else if(subcategory === \"equipment\") {\r\n        if(!components) {\r\n            //it's a componentless equipment recipe, most probably a clothing\r\n            if(character.inventory[material.material_id]?.count >= material.count) {\r\n                tooltip += `<span style=\"color:lime\"><b>${item_templates[material.material_id].getName()} x${character.inventory[material.material_id]?.count || 0}/${material.count}</b></span><br>`;\r\n            } else {\r\n                tooltip += `<span style=\"color:red\"><b>${item_templates[material.material_id].getName()} x${character.inventory[material.material_id]?.count || 0}/${material.count}</b></span><br>`;\r\n            }\r\n            const quality_range = recipe.get_quality_range(recipe.get_component_quality_weighted(), station_tier - item_templates[material.result_id].component_tier);\r\n            const xp_val_1 = get_recipe_xp_value({category, subcategory, recipe_id, material_count: material.count, result_tier: item_templates[material.result_id].component_tier, rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[0])]});\r\n            const xp_val_2 = get_recipe_xp_value({category, subcategory, recipe_id, material_count: material.count, result_tier: item_templates[material.result_id].component_tier, rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[1])]});\r\n            tooltip += `<br>XP value: ${xp_val_1} - ${xp_val_2}<br>`;\r\n            tooltip += `<br>Result:<br><div class=\"recipe_result\">${create_item_tooltip_content({item:item_templates[material.result_id], options: {quality: quality_range}})}</div>`;\r\n        } else if(components.length < 2) {\r\n            tooltip += `Result:<br><div class=\"recipe_result\">Select one component from each category</div>`;\r\n        } else if(components.length == 2) {\r\n            let item = \"\";\r\n            \r\n            if(recipe.item_type === \"Weapon\") {\r\n                item = new Weapon(\r\n                    {\r\n                        components: {\r\n                            head: components[0].item.id,\r\n                            handle: components[1].item.id,\r\n                        },\r\n                    }\r\n                );\r\n            } else if(recipe.item_type === \"Armor\") {\r\n                item = new Armor(\r\n                    {\r\n                        components: {\r\n                            internal: components[0].item.id,\r\n                            external: components[1].item.id,\r\n                        },\r\n                    }\r\n                );\r\n            } else if(recipe.item_type === \"Shield\") {\r\n                item = new Shield(\r\n                    {\r\n                        components: {\r\n                            shield_base: components[0].item.id,\r\n                            handle: components[1].item.id,\r\n                        },\r\n                    }\r\n                );\r\n            } else {\r\n                throw new Error(`Recipe \"${category}\" -> \"${subcategory}\" -> \"${recipe_id}\" has an incorrect item type \"${recipe.item_type}\"`)\r\n            }\r\n            const quality_range = recipe.get_quality_range(recipe.get_component_quality_weighted(components[0].item, components[1].item), (station_tier-Math.max(components[0].item.component_tier, components[1].item.component_tier)) || 0);\r\n            const xp_val_1 = get_recipe_xp_value({category, subcategory, recipe_id, selected_components: [item_templates[components[0].item.id], item_templates[components[1].item.id]], rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[0])]});\r\n            const xp_val_2 = get_recipe_xp_value({category, subcategory, recipe_id, selected_components: [item_templates[components[0].item.id], item_templates[components[1].item.id]], rarity_multiplier: rarity_multipliers[getItemRarity(quality_range[1])]});\r\n            tooltip += `<br>XP value: ${xp_val_1} - ${xp_val_2}<br>`;\r\n            tooltip += `Result:<br><div class=\"recipe_result\">${create_item_tooltip_content({item, options: {quality: quality_range}})}</div>`;\r\n        } else {\r\n            throw new Error(`Somehow recipe \"${category}\" -> \"${subcategory}\" -> \"${recipe_id}\" received more components than there should be (${components.length} instead of 2)`)\r\n        }\r\n    } else {\r\n        console.error(`No such crafting subcategory as \"${subcategory}\"`);\r\n    }\r\n\r\n    return tooltip;\r\n}\r\n\r\n/**\r\n * updates the list of selectable components for equipment crafting;\r\n * generally called for the recipe that was just used\r\n * component_keys is used for automatically selecting two comps\r\n */\r\nfunction update_displayed_component_choice({category, recipe_id, component_keys = {}}) {\r\n    const recipe_div = crafting_pages[category][\"equipment\"].querySelector(`[data-recipe_id=\"${recipe_id}\"]`);\r\n    const recipe = recipes[category][\"equipment\"][recipe_id];\r\n\r\n    const component_selections_div = crafting_pages[category][\"equipment\"].querySelector(`[data-recipe_id='${recipe_id}']`).children[1].children;\r\n    \r\n    component_selections_div[0].children[1].innerHTML = \"\";\r\n    component_selections_div[1].children[1].innerHTML = \"\";\r\n\r\n    const components = [];\r\n    components.push(Object.values(character.inventory).filter(item=>{\r\n        return recipe.components[0] === item.item.component_type;\r\n    }));\r\n\r\n    components.push(Object.values(character.inventory).filter(item=>{\r\n        return recipe.components[1] === item.item.component_type;\r\n    }));\r\n\r\n    for(let i = 0; i < 2; i++) {\r\n        for(let j = 0; j < components[i].length; j++) {\r\n            const item_div = document.createElement(\"div\");\r\n            item_div.innerHTML = `<i class=\"material-icons icon selected_component_icon\"> check </i>${components[i][j].item.name}, ${components[i][j].item.quality}%, x${components[i][j].count}`;\r\n            item_div.classList.add(\"selectable_component\");\r\n            item_div.dataset.item_key = components[i][j].item.getInventoryKey();\r\n            item_div.dataset.item_quality = components[i][j].item.quality;\r\n            item_div.dataset.item_name = components[i][j].item.getName();\r\n            item_div.dataset.component_tier = components[i][j].item.component_tier;\r\n            item_div.appendChild(create_item_tooltip(components[i][j].item, {class_name: \"recipe_tooltip\"}));\r\n            \r\n            item_div.addEventListener(\"click\", ()=>{\r\n                toggle_exclusive_class({element: item_div, siblings_only: true, class_name: \"selected_component\"});\r\n                const components = [];\r\n                const component_1_key = recipe_div.children[1].children[0].children[1].querySelector(\".selected_component\")?.dataset.item_key;\r\n                if(component_1_key) {\r\n                    components.push(character.inventory[component_1_key]);\r\n                }\r\n\r\n                const component_2_key = recipe_div.children[1].children[1].children[1].querySelector(\".selected_component\")?.dataset.item_key;\r\n                if(component_2_key) {\r\n                    components.push(character.inventory[component_2_key]);\r\n                }\r\n                update_recipe_tooltip({category, subcategory: \"equipment\", recipe_id, components});\r\n            });\r\n                \r\n            component_selections_div[i].children[1].appendChild(item_div);\r\n\r\n            if(component_keys[item_div.dataset.item_key]) {\r\n                item_div.click();\r\n            }\r\n        }\r\n    }\r\n    if(!is_element_above_x(recipe_div.querySelector(\".recipe_creation_button\"), document.getElementById(\"exit_crafting_button\"))) {\r\n        recipe_div.querySelector(\".recipe_creation_button\").scrollIntoView({block: \"end\", inline: \"nearest\"});\r\n    }\r\n    \r\n    for(let i = 0; i < 2; i++) {\r\n        [...component_selections_div[i].children[1].children].sort((a,b) => {\r\n            if(Number.parseInt(a.dataset.component_tier) > Number.parseInt(b.dataset.component_tier)) {\r\n                return -1;\r\n            } else if (Number.parseInt(a.dataset.component_tier) < Number.parseInt(b.dataset.component_tier)) {\r\n                return 1;\r\n            } else if(a.dataset.item_name > b.dataset.item_name) {\r\n                return 1;\r\n            } else if(a.dataset.item_name < b.dataset.item_name) {\r\n                return -1;\r\n            } else if(Number.parseInt(a.dataset.item_quality) > Number.parseInt(b.dataset.item_quality)) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n\r\n        }).forEach(node=>component_selections_div[i].children[1].appendChild(node));\r\n    }\r\n}\r\n\r\n/**\r\n * updates the list of selectable materials for component crafting;\r\n * displays only the materials available in inventory; those that are in too low number are grayed out and unselectable\r\n */\r\nfunction update_displayed_material_choice({category, subcategory, recipe_id, refreshing}) {\r\n    const recipe = recipes[category][subcategory][recipe_id];\r\n\r\n    const material_selections_div = crafting_pages[category][subcategory].querySelector(`[data-recipe_id='${recipe_id}']`).children[1];\r\n    \r\n    material_selections_div.innerHTML = \"\";\r\n\r\n    const materials = Object.values(character.inventory).filter(item=>{\r\n        return recipe.materials.filter(material => material.material_id === item.item?.id).length > 0;\r\n    });\r\n\r\n    for(let i = 0; i < materials.length; i++) {\r\n        const material_recipe = recipe.materials.filter(material => material.material_id === materials[i].item.id)[0];\r\n        const item_div = document.createElement(\"div\");\r\n        const name_span = document.createElement(\"span\");\r\n        name_span.innerHTML = `<i class=\"material-icons icon selected_material_icon\"> check </i>${item_templates[material_recipe.result_id].getName()}`;\r\n        name_span.classList.add(\"recipe_comp_name\");\r\n        item_div.append(name_span);\r\n        item_div.classList.add(\"selectable_material\");\r\n        item_div.dataset.item_key = materials[i].item.getInventoryKey();\r\n\r\n        if(material_recipe.count <= materials[i].count) {\r\n            item_div.addEventListener(\"click\", (event)=>{\r\n                item_div.classList.add(\"selected_material\");\r\n                if(event.target.classList.contains(\"selectable_material\")) {\r\n                    window.useRecipe(event.target.parentNode);\r\n                } else if(!event.target.classList.contains(\"craft_ammount_button\")) {\r\n                    window.useRecipe(event.target.parentNode.parentNode);\r\n                } else{\r\n                    window.useRecipe(event.target.parentNode.parentNode.parentNode, Number(event.target.dataset.craft_ammount));\r\n                }\r\n                item_div.classList.remove(\"selected_material\"); //this is so stupid\r\n            });\r\n        } else {\r\n            item_div.classList.add(\"recipe_unavailable\");\r\n        }\r\n\r\n        const craft_ammount_buttons = document.createElement(\"div\");\r\n        craft_ammount_buttons.classList.add(\"craft_ammount_buttons\");\r\n        \r\n        const button_5 = document.createElement(\"div\");\r\n        button_5.innerHTML = \"5\";\r\n        button_5.dataset.craft_ammount = 5;\r\n        button_5.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_5);\r\n\r\n        const button_10 = document.createElement(\"div\");\r\n        button_10.innerHTML = \"10\";\r\n        button_10.dataset.craft_ammount = 10;\r\n        button_10.classList.add(\"craft_ammount_button\");\r\n        craft_ammount_buttons.append(button_10);\r\n\r\n        const button_all = document.createElement(\"div\");\r\n        button_all.innerHTML = \"all\";\r\n        button_all.dataset.craft_ammount = Infinity;\r\n        button_all.classList.add(\"craft_ammount_button\");\r\n\r\n        craft_ammount_buttons.append(button_all);\r\n\r\n        item_div.append(craft_ammount_buttons);\r\n\r\n        item_div.append(create_recipe_tooltip({category, subcategory, recipe_id, material: material_recipe}));\r\n        material_selections_div.appendChild(item_div);\r\n    }\r\n    if(!refreshing) {\r\n        material_selections_div.lastChild?.scrollIntoView();\r\n    }\r\n}\r\n\r\nfunction update_item_recipe_visibility() {\r\n    Object.keys(recipes).forEach(recipe_category => {\r\n        Object.keys(recipes[recipe_category]).forEach(recipe_subcategory => {\r\n            if(recipe_subcategory !== \"items\") {\r\n                //no need to deal with other recipe types as they would be folded and will be reloaded on unfolding\r\n                return;\r\n            }\r\n            Object.keys(recipes[recipe_category][recipe_subcategory]).forEach(recipe => {\r\n                if(!recipes[recipe_category][recipe_subcategory][recipe].is_unlocked) {\r\n                    return;\r\n                }\r\n                const recipe_div = crafting_pages[recipe_category][recipe_subcategory].querySelector(`[data-recipe_id=\"${recipe}\"`);\r\n                if(!recipes[recipe_category][recipe_subcategory][recipe].get_availability().available_ammount) {\r\n                    recipe_div.classList.add(\"recipe_unavailable\");\r\n                } else {\r\n                    recipe_div.classList.remove(\"recipe_unavailable\");\r\n                }\r\n            });\r\n        })\r\n    });\r\n}\r\n\r\nfunction create_location_action_tooltip(location_action) {\r\n    const action_tooltip = document.createElement(\"div\");\r\n    action_tooltip.id = \"location_action_tooltip\";\r\n    action_tooltip.classList.add(\"job_tooltip\");\r\n    action_tooltip.innerHTML = location_action.description;\r\n\r\n    return action_tooltip;\r\n}\r\n\r\n/**\r\n * \r\n * @param {LocationActivity} location_activity \r\n */\r\nfunction create_gathering_tooltip(location_activity) {\r\n    const gathering_tooltip = document.createElement(\"div\");\r\n    gathering_tooltip.classList.add(\"job_tooltip\");\r\n    gathering_tooltip.dataset.job_tooltip = location_activity.activity_id;\r\n\r\n    const {gathering_time_needed, gained_resources} = location_activity.getActivityEfficiency();\r\n\r\n    let skill_names = \"\";\r\n    for(let i = 0; i < activities[location_activity.activity_name].base_skills_names.length; i++) {\r\n        skill_names += skills[activities[location_activity.activity_name].base_skills_names[i]].name();\r\n    }\r\n\r\n    if(location_activity.gained_resources.scales_with_skill) {\r\n        gathering_tooltip.innerHTML = `<span class=\"activity_efficiency_info\">Efficiency scaling:<br>\"${skill_names}\" skill lvl ${location_activity.gained_resources.skill_required[0]} to ${location_activity.gained_resources.skill_required[1]}</span><br><br>`;\r\n    }\r\n\r\n    gathering_tooltip.innerHTML += `Every ${format_time({time: {minutes: gathering_time_needed}, round: false})}, chance to find:`;\r\n    for(let i = 0; i < gained_resources.length; i++) {\r\n        gathering_tooltip.innerHTML += `<br>x${gained_resources[i].count[0]===gained_resources[i].count[1]?gained_resources[i].count[0]:`${gained_resources[i].count[0]}-${gained_resources[i].count[1]}`} \"${gained_resources[i].name}\" at ${Math.round(100*gained_resources[i].chance)}%`;\r\n    }\r\n\r\n    return gathering_tooltip;\r\n}\r\n\r\n/**\r\n * Updates gathering tooltip, both for location view and for an ongoing gathering\r\n * @param {LocationActivity} activity \r\n * @returns \r\n */\r\nfunction update_gathering_tooltip(activity) {\r\n    let parent = document.querySelector(`[data-activity=\"${activity.activity_id}\"]`);\r\n    let gathering_tooltip;\r\n    if(parent) {\r\n        gathering_tooltip = parent.getElementsByClassName(\"job_tooltip\")[0];\r\n    } else {\r\n        gathering_tooltip = document.getElementById(\"gathering_progress_bar_max\")?.querySelector(`[data-job_tooltip=\"${activity.activity_id}\"]`);\r\n    }\r\n\r\n    if(!gathering_tooltip) {\r\n        return;\r\n    }\r\n    \r\n    const {gathering_time_needed, gained_resources} = activity.getActivityEfficiency();\r\n\r\n    let skill_names = \"\";\r\n    for(let i = 0; i < activities[activity.activity_name].base_skills_names.length; i++) {\r\n        skill_names += skills[activities[activity.activity_name].base_skills_names[i]].name();\r\n    }\r\n\r\n    if(activity.gained_resources.scales_with_skill) {\r\n        gathering_tooltip.innerHTML = `<span class=\"activity_efficiency_info\">Efficiency scaling:<br>\"${skill_names}\" skill lvl ${activity.gained_resources.skill_required[0]} to ${activity.gained_resources.skill_required[1]}</span><br><br>`;\r\n    }\r\n    gathering_tooltip.innerHTML += `Every ${format_working_time(gathering_time_needed)}, chance to find:`;\r\n    for(let i = 0; i < gained_resources.length; i++) {\r\n        gathering_tooltip.innerHTML += `<br>x${gained_resources[i].count[0]===gained_resources[i].count[1]?gained_resources[i].count[0]:`${gained_resources[i].count[0]}-${gained_resources[i].count[1]}`} \"${gained_resources[i].name}\" at ${Math.round(100*gained_resources[i].chance)}%`;\r\n    }\r\n}\r\n\r\nfunction update_displayed_health() { //call it when using healing items, resting or getting hit\r\n    current_health_value_div.innerText = Math.ceil(character.stats.full.health) + \"/\" + Math.ceil(character.stats.full.max_health) + \" hp\";\r\n    current_health_bar.style.width = (character.stats.full.health*100/character.stats.full.max_health).toString() +\"%\";\r\n}\r\nfunction update_displayed_stamina() { //call it when eating, resting or fighting\r\n    current_stamina_value_div.innerText = Math.round(character.stats.full.stamina) + \"/\" + Math.round(character.stats.full.max_stamina) + \" stamina\";\r\n    current_stamina_bar.style.width = (character.stats.full.stamina*100/character.stats.full.max_stamina).toString() +\"%\";\r\n}\r\n\r\nfunction update_displayed_stats() { //updates displayed stats\r\n\r\n    Object.keys(stats_divs).forEach(function(key){\r\n        if(key === \"crit_rate\" || key === \"crit_multiplier\") {\r\n            stats_divs[key].innerHTML = `${(character.stats.full[key]*100).toFixed(1)}%`;\r\n        } \r\n        else if(key === \"attack_speed\") {\r\n            stats_divs[key].innerHTML = `${(character.get_attack_speed()).toFixed(1)}`;\r\n        }\r\n        else if(key === \"attack_power\") {\r\n            stats_divs[key].innerHTML = `${(character.get_attack_power()).toFixed(1)}`;\r\n        }\r\n        else {\r\n            stats_divs[key].innerHTML = `${(character.stats.full[key]).toFixed(1)}`;\r\n        }\r\n        update_stat_description(key);\r\n    });\r\n\r\n    const attack_stats = document.getElementById(\"attack_stats\");\r\n\r\n    const ap = Math.round(character.stats.full.attack_points);\r\n    other_combat_divs.attack_points.innerHTML = `${ap}`;\r\n\r\n    if(character.equipment[\"off-hand\"] != null && character.equipment[\"off-hand\"].offhand_type === \"shield\") { //HAS SHIELD\r\n        const dp = (character.stats.full.block_chance*100).toFixed(1)\r\n        other_combat_divs.defensive_action.innerHTML = \"Block :\";\r\n        other_combat_divs.defensive_points.innerHTML = `${dp}%`;\r\n        other_combat_divs.defensive_points.parentNode.children[2].children[0].innerHTML = \"Chance to block an attack\";\r\n\r\n        attack_stats.children[3].innerHTML = `Block : ${Math.round(dp)}%`;\r\n    }\r\n    else { //NO SHIELD\r\n        const ep = Math.round(character.stats.full.evasion_points);\r\n        other_combat_divs.defensive_action.innerHTML = \"EP : \";\r\n        other_combat_divs.defensive_points.innerHTML = `${ep}`;\r\n        other_combat_divs.defensive_points.parentNode.children[2].children[0].innerHTML = \r\n        \"Evasion points, a total value of everything that contributes to the evasion chance, except for some situational skills and modifiers\";\r\n\r\n        attack_stats.children[3].innerHTML = `EP: ${Math.round(ep)} `;\r\n    }\r\n\r\n    update_stat_description(\"defensive_points\");\r\n    update_stat_description(\"attack_points\");\r\n\r\n    let atk = character.get_attack_power();\r\n    if(atk > 100) {\r\n        atk = Math.round(atk);\r\n    } else {\r\n        atk = Math.round(10*atk)/10;\r\n    }\r\n    attack_stats.children[0].innerHTML = `Atk: ${atk}`;\r\n    attack_stats.children[1].innerHTML = `Atk spd: ${Math.round(character.get_attack_speed()*100)/100}`;\r\n    attack_stats.children[2].innerHTML = `AP:  ${Math.round(ap)}`;\r\n    attack_stats.children[4].innerHTML = `Def: ${Math.round(character.stats.full.defense)} `;\r\n}\r\n\r\nfunction update_stat_description(stat) {\r\n    let target;\r\n\r\n    if(stats_divs[stat]){\r\n        target = stats_divs[stat].parentNode.children[2].children[1];\r\n    } else if(other_combat_divs[stat] && stat !== \"defensive_action\") {\r\n        target = other_combat_divs[stat].parentNode.children[2].children[1]; \r\n    } else {\r\n        return;\r\n    }\r\n\r\n    if(stat === \"attack_power\") {\r\n        target.innerHTML = \r\n        `<br>Breakdown:\r\n        <br>Base value (weapon * str/10): ${Math.round(100* character.stats.total_flat.attack_power)/100}`;\r\n    } else if (stat === \"attack_points\"){\r\n        target.innerHTML = \r\n        `<br>Breakdown:\r\n        <br>Base value: ${Math.round(100* character.stats.total_flat.attack_points)/100}`;\r\n    } else if(stat === \"defensive_points\"){\r\n        if(character.equipment[\"off-hand\"] != null && character.equipment[\"off-hand\"].offhand_type === \"shield\") {\r\n            stat = \"block_chance\";\r\n        } else {\r\n            stat = \"evasion_points\";\r\n        }\r\n        target.innerHTML = \r\n            `<br>Breakdown:\r\n            <br>Base value: ${Math.round(100 * character.stats.total_flat[stat])/100}`;\r\n    } else {\r\n        target.innerHTML = \r\n        `<br>Breakdown:\r\n        <br>Base value: ${Math.round(100*character.base_stats[stat])/100}`;\r\n    }\r\n\r\n    Object.keys(character.stats.flat).forEach(stat_type => {\r\n        if(character.stats.flat[stat_type][stat] && character.stats.flat[stat_type][stat] !== 0) {\r\n            target.innerHTML += `<br>${capitalize_first_letter(stat_type.replace(\"_\",\" \"))}: +${Math.round(100*character.stats.flat[stat_type][stat])/100}`;\r\n        }\r\n    });\r\n\r\n    Object.keys(character.stats.multiplier).forEach(stat_type => {\r\n        if(character.stats.multiplier[stat_type][stat] && character.stats.multiplier[stat_type][stat] !== 1) {\r\n            target.innerHTML += `<br>${capitalize_first_letter(stat_type.replace(\"_\",\" \"))}: x${Math.round(100*character.stats.multiplier[stat_type][stat])/100}`;\r\n        }\r\n    });\r\n    \r\n    return;\r\n}\r\n\r\nfunction update_displayed_effects() {\r\n    const effect_count = Object.keys(active_effects).length;\r\n    active_effect_count.innerText = effect_count;\r\n    if(effect_count > 0) {\r\n        active_effects_tooltip.innerHTML = '';\r\n        \r\n        Object.values(effect_divs).forEach(eff => {\r\n            eff.remove();\r\n        });\r\n\r\n        effect_divs = {};\r\n        Object.values(active_effects).forEach(effect => {\r\n            effect_divs[effect.name] = create_effect_tooltip({effect_name: effect.name, duration: effect.duration, add_bonus: true});\r\n            active_effects_tooltip.appendChild(effect_divs[effect.name]);\r\n        });\r\n    } else {\r\n        active_effects_tooltip.innerHTML = 'No active effects';\r\n    }\r\n    update_displayed_effect_durations();\r\n}\r\n\r\nfunction update_displayed_effect_durations() {\r\n    Object.keys(effect_divs).forEach(key => {\r\n        if(!active_effects[key]?.duration) {\r\n            effect_divs[key].remove();\r\n        } else {\r\n            effect_divs[key].querySelector(\".active_effect_duration\").innerHTML = format_time({time: {minutes: active_effects[key].duration}, round: false});\r\n        }\r\n    });\r\n}\r\n\r\nfunction update_displayed_time() {\r\n    if(is_night(current_game_time)) {\r\n        time_field.innerHTML = current_game_time.toString() + '<span class=\"material-icons icon icon_night\">nightlight_round</span>';\r\n    } else {\r\n        time_field.innerHTML = current_game_time.toString() + '<span class=\"material-icons icon icon_day\">light_mode</span>';\r\n    }\r\n}\r\n\r\n/** \r\n * formats money to a nice string in form x..x G xx S xx C (gold/silver/copper) \r\n * @param {Number} num value to be formatted\r\n * @param {Boolean} round if the value should be rounded a bit\r\n */\r\nfunction format_money(num) {\r\n    let value;\r\n    const sign = num >= 0 ? '' : '-';\r\n    num = Math.abs(num);\r\n    \r\n    if(num > 0) {\r\n        value = (num%10 != 0 ? `${num%10}<span class=\"coin coin_wood\">W</span>` : '');\r\n\r\n        if(num > 9) {\r\n            value = (Math.floor(num/10)%100 != 0?`${Math.floor(num/10)%100}<span class=\"coin coin_copper\">C</span>${value?\" \":\"\"}` :'') + value;\r\n            if(num > 999) {\r\n                value = (Math.floor(num/1000)%100 != 0?`${Math.floor(num/1000)%100}<span class=\"coin coin_silver\">S</span>${value?\" \":\"\"}` :'') + value;\r\n                if(num > 99999) {\r\n                    value = `${Math.floor(num/100000)}<span class=\"coin coin_gold\">G</span>${value?\" \":\"\"}` + value;\r\n                }\r\n            \r\n            }  \r\n        }\r\n\r\n        return sign + value;\r\n\r\n    } else {\r\n        return 'nothing';\r\n    }\r\n}\r\n\r\nfunction update_displayed_character_xp(did_level = false) {\r\n    /*\r\n    character_xp_div\r\n        character_xp_bar_max\r\n            character_xp_bar_current\r\n        charaxter_xp_value\r\n    */\r\n    character_xp_div.children[0].children[0].style.width = `${100*character.xp.current_xp/character.xp.xp_to_next_lvl}%`;\r\n    character_xp_div.children[1].innerText = `${Math.floor(character.xp.current_xp)}/${Math.ceil(character.xp.xp_to_next_lvl)} xp`;\r\n\r\n    if(did_level) {\r\n        character_level_div.innerText = `Level: ${character.xp.current_level}`;\r\n        update_displayed_health();\r\n    }\r\n}\r\n\r\nfunction update_displayed_xp_bonuses() {\r\n    data_entry_divs.character.innerHTML = `<span class=\"data_entry_name\">Base hero xp gain:</span><span class=\"data_entry_value\">x${Math.round(100*get_hero_xp_gain())/100}</span>`;\r\n    data_entry_divs.skills.innerHTML = `<span class=\"data_entry_name\">Base skill xp gain:</span><span class=\"data_entry_value\">x${Math.round(100*get_skills_overall_xp_gain())/100}</span>`;\r\n}\r\n\r\nfunction update_displayed_stamina_efficiency() {\r\n    data_entry_divs.stamina.innerHTML = `<span class=\"data_entry_name\">Stamina efficiency:</span><span class=\"data_entry_value\">${Math.round(100*character.stats.full.stamina_efficiency)/100 || 1}</span>`;\r\n}\r\n\r\nfunction update_displayed_dialogue(dialogue_key) {\r\n    const dialogue = dialogues[dialogue_key];\r\n    \r\n    clear_action_div();\r\n    \r\n    const dialogue_answer_div = document.createElement(\"div\");\r\n    dialogue_answer_div.id = \"dialogue_answer_div\";\r\n    action_div.appendChild(dialogue_answer_div);\r\n    Object.keys(dialogue.textlines).forEach(function(key) { //add buttons for textlines\r\n            if(dialogue.textlines[key].is_unlocked && !dialogue.textlines[key].is_finished) { //do only if text_line is not unavailable\r\n                if(dialogue.textlines[key].required_flags) {\r\n                    if(dialogue.textlines[key].required_flags.yes && !Array.isArray(dialogue.textlines[key].required_flags.yes) || dialogue.textlines[key].required_flags.no && !Array.isArray(dialogue.textlines[key].required_flags.no)) {\r\n                        console.error(`Textline \"${key}\" in dialogue \"${dialogue_key}\" has required flag passed as a single value but it should be an array!`)\r\n                    }\r\n                    if(dialogue.textlines[key].required_flags.yes) {\r\n                        for(let i = 0; i < dialogue.textlines[key].required_flags.yes.length; i++) {\r\n                            \r\n                            if(!global_flags[dialogue.textlines[key].required_flags.yes[i]]) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(dialogue.textlines[key].required_flags.no) {\r\n                        for(let i = 0; i < dialogue.textlines[key].required_flags.no.length; i++) {\r\n                            if(global_flags[dialogue.textlines[key].required_flags.no[i]]) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                const textline_div = document.createElement(\"div\");\r\n                textline_div.innerHTML = `\"${dialogue.textlines[key].name}\"`;\r\n                textline_div.classList.add(\"dialogue_textline\");\r\n                textline_div.setAttribute(\"data-textline\", key);\r\n                textline_div.setAttribute(\"onclick\", `start_textline(this.getAttribute('data-textline'))`);\r\n                action_div.appendChild(textline_div);\r\n            }\r\n    });\r\n\r\n    if(dialogue.trader) {\r\n        const trade_div = document.createElement(\"div\");\r\n        trade_div.innerHTML = `<i class=\"material-icons\">storefront</i>  ` + traders[dialogue.trader].trade_text;\r\n        trade_div.classList.add(\"dialogue_trade\")\r\n        trade_div.setAttribute(\"data-trader\", dialogue.trader);\r\n        trade_div.setAttribute(\"onclick\", \"startTrade(this.getAttribute('data-trader'))\")\r\n        action_div.appendChild(trade_div);\r\n    }\r\n\r\n    const end_dialogue_div = document.createElement(\"div\");\r\n\r\n    end_dialogue_div.innerHTML = \"<i class='material-icons'>arrow_back</i> \" + dialogue.ending_text;\r\n    end_dialogue_div.classList.add(\"end_dialogue_button\");\r\n    end_dialogue_div.setAttribute(\"onclick\", \"end_dialogue()\");\r\n\r\n    action_div.appendChild(end_dialogue_div);\r\n}\r\n\r\nfunction update_displayed_textline_answer({text, is_description}) {\r\n    if(is_description) {\r\n        document.getElementById(\"dialogue_answer_div\").innerHTML =  \"*\"+text+\"*\";\r\n    } else {\r\n        document.getElementById(\"dialogue_answer_div\").innerHTML = '<i>\"' + text + '\"</i>';\r\n    }\r\n}\r\n\r\nfunction exit_displayed_trade() {\r\n    action_div.style.display = \"\";\r\n    trade_div.style.display = \"none\";\r\n}\r\n\r\nfunction start_activity_display(current_activity) {\r\n    clear_action_div();\r\n    const action_status_div = document.createElement(\"div\");\r\n    action_status_div.innerText = activities[current_activity.activity_name].action_text;\r\n    action_status_div.id = \"action_status_div\";\r\n    const action_xp_div = document.createElement(\"div\");\r\n    if(activities[current_activity.activity_name].base_skills_names) {\r\n\r\n        const percent_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.round(10000*skills[activities[current_activity.activity_name].base_skills_names].current_xp/skills[activities[current_activity.activity_name].base_skills_names].xp_to_next_lvl)/100}%`\r\n        const curr_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.floor(skills[activities[current_activity.activity_name].base_skills_names].current_xp)}`;\r\n        const needed_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.ceil(skills[activities[current_activity.activity_name].base_skills_names].xp_to_next_lvl)}`;\r\n\r\n        if(activities[current_activity.activity_name].type !== \"GATHERING\") {\r\n            action_xp_div.innerText = `Getting ${current_activity.skill_xp_per_tick} base xp per in-game minute to `;\r\n        } else {\r\n            action_xp_div.innerText = `Getting ${current_activity.skill_xp_per_tick} base xp per gathering cycle to `;\r\n        }\r\n        \r\n        if(curr_xp !== \"Max\") {\r\n            action_xp_div.innerText += ` ${skills[activities[current_activity.activity_name].base_skills_names].name()} (${percent_xp}  [${curr_xp}/${needed_xp}])`;\r\n        } else {\r\n            action_xp_div.innerText += ` ${skills[activities[current_activity.activity_name].base_skills_names].name()} (Maxxed out!)`;\r\n        }\r\n\r\n        if(activities[current_activity.activity_name].type !== \"GATHERING\") {\r\n            const time_needed = Math.ceil((needed_xp-curr_xp)/(current_activity.skill_xp_per_tick*get_skill_xp_gain(skills[activities[current_activity.activity_name].base_skills_names].skill_id)));\r\n            if(!isNaN(time_needed)) {\r\n                action_xp_div.innerHTML += `<br>Next level in ${format_reading_time(time_needed)}`;\r\n            }\r\n        } else {\r\n            const time_needed = Math.ceil(current_activity.gathering_time_needed * (needed_xp-curr_xp)/(current_activity.skill_xp_per_tick*get_skill_xp_gain(skills[activities[current_activity.activity_name].base_skills_names].skill_id)));\r\n            if(!isNaN(time_needed)) {\r\n                action_xp_div.innerHTML += `<br>Next level in ${format_reading_time(time_needed)}`;\r\n            }\r\n        }\r\n            \r\n    } else {\r\n        console.warn(`Activity \"${current_activity.activity_name}\" has no skills assigned!`);\r\n    }\r\n    action_xp_div.id = \"action_xp_div\";\r\n\r\n    const action_end_div = document.createElement(\"div\");\r\n    action_end_div.setAttribute(\"onclick\", \"end_activity()\");\r\n    action_end_div.id = \"action_end_div\";\r\n\r\n\r\n    const action_end_text = document.createElement(\"div\");\r\n    action_end_text.innerText = `Finish ${current_activity.activity_name}`;\r\n    action_end_text.id = \"action_end_text\";\r\n\r\n\r\n    action_end_div.appendChild(action_end_text);\r\n\r\n    if(activities[current_activity.activity_name].type === \"JOB\") {\r\n        const action_end_earnings = document.createElement(\"div\");\r\n        action_end_earnings.innerHTML = `(earnings: ${format_money(0)})`;\r\n        action_end_earnings.id = \"action_end_earnings\";\r\n\r\n        action_end_div.appendChild(action_end_earnings);\r\n    }\r\n\r\n    action_div.appendChild(action_status_div);\r\n    action_div.appendChild(action_xp_div);\r\n\r\n    if(current_activity.gained_resources) {\r\n        const action_progress_bar_max = document.createElement(\"div\");\r\n        const action_progress_bar = document.createElement(\"div\");\r\n        action_progress_bar_max.appendChild(action_progress_bar);\r\n        action_progress_bar.id = \"gathering_progress_bar\";\r\n        action_progress_bar.style.width = 385*current_activity.gathering_time/current_activity.gathering_time_needed+\"px\";\r\n        action_progress_bar_max.id = \"gathering_progress_bar_max\";\r\n        action_div.appendChild(action_progress_bar_max);\r\n        action_progress_bar_max.appendChild(create_gathering_tooltip(current_activity));\r\n    }\r\n    \r\n    action_div.appendChild(action_end_div);\r\n\r\n    if(activities[current_activity.activity_name].type === \"JOB\") \r\n    {\r\n        const time_info_div = document.createElement(\"div\");\r\n        time_info_div.id = \"time_for_earnings_div\";\r\n\r\n        if(!enough_time_for_earnings(current_activity)) {\r\n            time_info_div.innerHTML = `There's not enough time left to earn more, but ${character.name} might still learn something...`;\r\n        }\r\n        else {\r\n            time_info_div.innerHTML = `Next earnings in: ${format_working_time(current_activity.working_period - current_activity.working_time)}`;\r\n        }\r\n        action_div.insertBefore(time_info_div, action_div.children[2]);\r\n    }\r\n\r\n    start_activity_animation();\r\n}\r\n\r\nfunction update_displayed_ongoing_activity(current_activity, is_job){\r\n    if(is_job) {\r\n        document.getElementById(\"action_end_earnings\").innerHTML = `(earnings: ${format_money(current_activity.earnings)})`\r\n        const time_info_div = document.getElementById(\"time_for_earnings_div\");\r\n        \r\n        if(!enough_time_for_earnings(current_activity)) {\r\n            time_info_div.innerHTML = `There's not enough time left to earn more, but ${character.name} might still learn something...`;\r\n        } else {\r\n            time_info_div.innerHTML = `Next earnings in: ${format_working_time(current_activity.working_period - current_activity.working_time%current_activity.working_period)}`;\r\n        }\r\n    }\r\n    const action_xp_div = document.getElementById(\"action_xp_div\");\r\n    if(!action_xp_div) {\r\n        console.warn(`Failed to find htmlElement with id \"action_xp_div\" for activity \"${current_activity.activity_id}\"`);\r\n        return;\r\n    }\r\n\r\n    const percent_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.round(10000*skills[activities[current_activity.activity_name].base_skills_names].current_xp/skills[activities[current_activity.activity_name].base_skills_names].xp_to_next_lvl)/100}%`\r\n    const curr_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.floor(skills[activities[current_activity.activity_name].base_skills_names].current_xp)}`;\r\n    const needed_xp = get_total_skill_level(activities[current_activity.activity_name].base_skills_names) == skills[activities[current_activity.activity_name].base_skills_names].max_level? \"Max\": `${Math.ceil(skills[activities[current_activity.activity_name].base_skills_names].xp_to_next_lvl)}`;\r\n    \r\n    if(activities[current_activity.activity_name].type !== \"GATHERING\") {\r\n        action_xp_div.innerText = `Getting ${current_activity.skill_xp_per_tick} base xp per in-game minute to `;\r\n    } else {\r\n        action_xp_div.innerText = `Getting ${current_activity.skill_xp_per_tick} base xp per gathering cycle to `;\r\n    }\r\n\r\n    if(curr_xp !== \"Max\") {\r\n        action_xp_div.innerText += ` ${skills[activities[current_activity.activity_name].base_skills_names].name()} (${percent_xp}  [${curr_xp}/${needed_xp}])`;\r\n    } else {\r\n        action_xp_div.innerText += ` ${skills[activities[current_activity.activity_name].base_skills_names].name()} (Maxxed out!)`;\r\n    }\r\n\r\n    if(activities[current_activity.activity_name].type !== \"GATHERING\") {\r\n        const time_needed = Math.ceil((needed_xp-curr_xp)/(current_activity.skill_xp_per_tick*get_skill_xp_gain(skills[activities[current_activity.activity_name].base_skills_names].skill_id)));\r\n        if(!isNaN(time_needed)) {\r\n            action_xp_div.innerHTML += `<br>Next level in ${format_reading_time(time_needed)}`;\r\n        }\r\n    } else {\r\n        const time_needed = Math.ceil(current_activity.gathering_time_needed * (needed_xp-curr_xp)/(current_activity.skill_xp_per_tick*get_skill_xp_gain(skills[activities[current_activity.activity_name].base_skills_names].skill_id)));\r\n        if(!isNaN(time_needed)) {\r\n            action_xp_div.innerHTML += `<br>Next level in ${format_reading_time(time_needed)}`;\r\n        }\r\n    }\r\n\r\n    if(current_activity.gained_resources) {\r\n        document.getElementById(\"gathering_progress_bar\").style.width = 385*current_activity.gathering_time/current_activity.gathering_time_needed+\"px\";\r\n    }\r\n}\r\n\r\nfunction start_location_action_display(selected_action) {\r\n    clear_action_div();\r\n\r\n    const action = current_location.actions[selected_action]\r\n    const action_status_div = document.createElement(\"div\");\r\n    action_status_div.innerText = action.action_text;\r\n    action_status_div.id = \"action_status_div\";\r\n    action_div.appendChild(action_status_div);\r\n\r\n    const action_progress_bar_max = document.createElement(\"div\");\r\n    const action_progress_bar = document.createElement(\"div\");\r\n    action_progress_bar_max.appendChild(action_progress_bar);\r\n    action_progress_bar.id = \"action_progress_bar\";\r\n    action_progress_bar.style.width = \"0px\";\r\n    action_progress_bar_max.id = \"action_progress_bar_max\";\r\n    action_div.appendChild(action_progress_bar_max);\r\n\r\n    const action_end_div = document.createElement(\"div\");\r\n    action_end_div.setAttribute(\"onclick\", \"end_location_action()\");\r\n    action_end_div.id = \"action_end_div\";\r\n\r\n\r\n    const action_end_text = document.createElement(\"div\");\r\n    action_end_text.innerText = `Give up for now`;\r\n    action_end_text.id = \"action_end_text\";\r\n\r\n\r\n    action_end_div.appendChild(action_end_text);\r\n    action_div.appendChild(action_end_div);\r\n\r\n\r\n    start_activity_animation();\r\n}\r\n\r\nfunction update_location_action_progress_bar(percent) {\r\n        document.getElementById(\"action_progress_bar\").style.width = 385*percent+\"px\";\r\n}\r\n\r\nfunction set_location_action_finish_text(text) {\r\n    document.getElementById(\"action_status_div\").innerHTML = text;\r\n}\r\n\r\nfunction update_location_action_finish_button() {\r\n    document.getElementById(\"action_end_div\").innerHTML = \"Finish\";\r\n}\r\n\r\nfunction start_sleeping_display(){\r\n    clear_action_div();\r\n\r\n    const action_status_div = document.createElement(\"div\");\r\n    action_status_div.innerText = \"Sleeping...\";\r\n    action_status_div.id = \"action_status_div\";\r\n\r\n    const action_end_div = document.createElement(\"div\");\r\n    action_end_div.setAttribute(\"onclick\", \"end_sleeping()\");\r\n    action_end_div.id = \"action_end_div\";\r\n\r\n\r\n    const action_end_text = document.createElement(\"div\");\r\n    action_end_text.innerText = `Wake up`;\r\n    action_end_text.id = \"action_end_text\";\r\n\r\n    \r\n    action_end_div.appendChild(action_end_text);\r\n\r\n    action_div.appendChild(action_status_div);\r\n    action_div.appendChild(action_end_div);\r\n    start_activity_animation();\r\n}\r\n\r\nfunction start_reading_display(title) {\r\n    clear_action_div();\r\n\r\n    const action_status_div = document.createElement(\"div\");\r\n    action_status_div.innerText = `Reading the book, ${format_reading_time(item_templates[title].getRemainingTime())} left`;\r\n    action_status_div.id = \"action_status_div\";\r\n\r\n    const action_end_div = document.createElement(\"div\");\r\n    action_end_div.setAttribute(\"onclick\", \"end_reading()\");\r\n    action_end_div.id = \"action_end_div\";\r\n\r\n\r\n    const action_end_text = document.createElement(\"div\");\r\n    action_end_text.innerText = `Stop reading for now`;\r\n    action_end_text.id = \"action_end_text\";\r\n\r\n    action_end_div.appendChild(action_end_text);\r\n\r\n    action_div.appendChild(action_status_div);\r\n    action_div.appendChild(action_end_div);\r\n    start_activity_animation({book_title: title});\r\n}\r\n\r\n/**\r\n * //creates new skill bar\r\n * @param {Skill} skill \r\n */\r\nfunction create_new_skill_bar(skill) {\r\n    if(!skill_bar_divs[skill.category]) {\r\n        skill_bar_divs[skill.category] = {};\r\n\r\n        const skill_category_div = document.createElement(\"div\");\r\n        skill_category_div.innerHTML = `<i class=\"material-icons icon skill_dropdown_icon\"> keyboard_double_arrow_down </i>${skill.category} skills`;\r\n        skill_category_div.dataset.skill_category = skill.category;\r\n        skill_category_div.classList.add(\"skill_category_div\");\r\n\r\n        const skill_category_skills = document.createElement(\"div\");\r\n        skill_category_skills.dataset.skill_category_skills = true;\r\n        skill_category_div.appendChild(skill_category_skills);\r\n        \r\n        skill_list.appendChild(skill_category_div);\r\n\r\n        skill_category_div.addEventListener(\"click\", (event)=>{\r\n            if(event.target.classList.contains(\"skill_category_div\")) {\r\n                event.target.classList.toggle(\"skill_category_expanded\");\r\n            } else if(event.target.classList.contains(\"skill_dropdown_icon\")) {\r\n                event.target.parentNode.classList.toggle(\"skill_category_expanded\");\r\n            }\r\n        })\r\n\r\n    }\r\n    if(skill_bar_divs[skill.category][skill.skill_id]) {\r\n        console.trace(`Tried to create a skillbar for skill \"${skill.skill_id}\", but it already has one!`);\r\n        return;\r\n    }\r\n    skill_bar_divs[skill.category][skill.skill_id] = document.createElement(\"div\");\r\n\r\n    const skill_bar_max = document.createElement(\"div\");\r\n    const skill_bar_current = document.createElement(\"div\");\r\n    const skill_bar_text = document.createElement(\"div\");\r\n    const skill_bar_name = document.createElement(\"div\");\r\n    const skill_bar_xp = document.createElement(\"div\");\r\n\r\n    const skill_tooltip = document.createElement(\"div\");\r\n    const tooltip_xp = document.createElement(\"div\");\r\n    const tooltip_xp_gain = document.createElement(\"div\");\r\n    const tooltip_desc = document.createElement(\"div\");\r\n    const tooltip_effect = document.createElement(\"div\");\r\n    const tooltip_milestones = document.createElement(\"div\");\r\n    const tooltip_next = document.createElement(\"div\");\r\n    \r\n    skill_bar_max.classList.add(\"skill_bar_max\");\r\n    skill_bar_current.classList.add(\"skill_bar_current\");\r\n    skill_bar_text.classList.add(\"skill_bar_text\");\r\n    skill_bar_name.classList.add(\"skill_bar_name\");\r\n    skill_bar_xp.classList.add(\"skill_bar_xp\");\r\n    skill_tooltip.classList.add(\"skill_tooltip\");\r\n    tooltip_next.classList.add(\"skill_tooltip_next_milestone\");\r\n\r\n    skill_bar_text.appendChild(skill_bar_name);\r\n    skill_bar_text.append(skill_bar_xp);\r\n\r\n    tooltip_xp_gain.classList.add(\"skill_xp_gain\");\r\n\r\n    skill_tooltip.appendChild(tooltip_xp);\r\n    skill_tooltip.appendChild(tooltip_xp_gain);\r\n    skill_tooltip.appendChild(tooltip_desc);\r\n    skill_tooltip.appendChild(tooltip_effect); \r\n    skill_tooltip.appendChild(tooltip_milestones);\r\n    skill_tooltip.appendChild(tooltip_next);\r\n\r\n    tooltip_desc.innerHTML = `<span class=\"skill_id\">id: \"${skill.skill_id}\"</span><br><br>${skill.description}`;\r\n    if(skill.flavour_text) {\r\n        tooltip_desc.innerHTML += `<br><span class=\"skill_flavour_text\">\"${skill.flavour_text}\"</span>`;\r\n    }\r\n    if(skill.get_effect_description()) {\r\n        tooltip_desc.innerHTML += `<br><br>`;\r\n    }\r\n    if(skill.parent_skill) {\r\n        tooltip_desc.innerHTML += `Parent skill: ${skill.parent_skill}<br><br>`; \r\n    }\r\n    \r\n    skill_bar_max.appendChild(skill_bar_text);\r\n    skill_bar_max.appendChild(skill_bar_current);\r\n    skill_bar_max.appendChild(skill_tooltip);\r\n\r\n    skill_bar_divs[skill.category][skill.skill_id].appendChild(skill_bar_max);\r\n    skill_bar_divs[skill.category][skill.skill_id].setAttribute(\"data-skill\", skill.skill_id);\r\n    skill_bar_divs[skill.category][skill.skill_id].classList.add(\"skill_div\");\r\n    skill_list.querySelector(`[data-skill_category=${skill.category}]`).querySelector(\"[data-skill_category_skills]\").appendChild(skill_bar_divs[skill.category][skill.skill_id]);\r\n\r\n    //sorts skill_list div alphabetically\r\n    sort_displayed_skills({});\r\n    sort_displayed_skill_categories();\r\n    update_displayed_skill_xp_gain(skill);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Skill} skill \r\n * @param {Boolean} leveled_up \r\n * @returns \r\n */\r\nfunction update_displayed_skill_bar(skill, leveled_up=true) {\r\n    /*\r\n    skill_bar divs: \r\n        skill -> children (1): \r\n            skill_bar_max -> children(3): \r\n                skill_bar_text -> children(2):\r\n                    skill_bar_name,\r\n                    skill_bar_xp\r\n                skill_bar_current, \r\n                skill_tooltip -> children(5):\r\n                    tooltip_xp,\r\n                    tooltip_xp_gain,\r\n                    tooltip_desc,\r\n                    tooltip_effect,\r\n                    tooltip_milestones,\r\n                    tooltip_next\r\n    */\r\n\r\n    if(!skill_bar_divs[skill.category][skill.skill_id]) {\r\n        return;\r\n    }\r\n\r\n    update_displayed_skill_level(skill);\r\n\r\n    if(skill.current_xp !== \"Max\") {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[0].children[1].innerHTML = `${100*Math.floor(skill.current_xp/skill.xp_to_next_lvl*1000)/1000}%`;\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[0].innerHTML = `${expo(skill.current_xp)}/${expo(skill.xp_to_next_lvl)}`;\r\n\r\n    } else {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[0].children[1].innerHTML = `Max!`;\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[0].innerHTML = `Maxed out!`;\r\n    }\r\n    //skill_bar_xp && tooltip_xp\r\n\r\n    skill_bar_divs[skill.category][skill.skill_id].children[0].children[1].style.width = `${100*skill.current_xp/skill.xp_to_next_lvl}%`;\r\n    //skill_bar_current\r\n\r\n    if(get_unlocked_skill_rewards(skill.skill_id)) {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[4].innerHTML  = `<br>${get_unlocked_skill_rewards(skill.skill_id)}`;\r\n    }\r\n\r\n    if(typeof get_next_skill_milestone(skill.skill_id) !== \"undefined\") {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[5].innerHTML  = `lvl ${get_next_skill_milestone(skill.skill_id)}: ???`;\r\n    } else {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[5].innerHTML = \"\";\r\n    }\r\n\r\n    if(typeof skill.get_effect_description !== \"undefined\") {\r\n        skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[3].innerHTML = `${skill.get_effect_description()}`;\r\n        //tooltip_effect\r\n    }\r\n    \r\n    if(leveled_up) {\r\n        sort_displayed_skills({sort_by: skill_sorting}); //in case of a name change on levelup\r\n    }\r\n}\r\n\r\nfunction update_displayed_skill_level(skill) {\r\n    if(!skill_bar_divs[skill.category]?.[skill.skill_id]) {\r\n        return;\r\n    }\r\n\r\n    skill_bar_divs[skill.category][skill.skill_id].children[0].children[0].children[0].innerHTML = `${skill.name()} : level ${skill.current_level}/${skill.max_level}`;\r\n    const bonus = character.bonus_skill_levels.full[skill.skill_id];\r\n    if(bonus != 0) {\r\n        if(bonus > 0) {\r\n            skill_bar_divs[skill.category][skill.skill_id].children[0].children[0].children[0].innerHTML += ` <b>[+${bonus}]</b>`;\r\n        } else {\r\n            skill_bar_divs[skill.category][skill.skill_id].children[0].children[0].children[0].innerHTML += ` <b>[${bonus}]</b>`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction update_displayed_skill_description(skill) {\r\n    if(!skill_bar_divs[skill.category][skill.skill_id]) {\r\n        return;\r\n    }\r\n    skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[3].innerHTML = `${skill.get_effect_description()}`;\r\n}\r\n\r\nfunction update_displayed_skill_xp_gain(skill) {\r\n    if(!skill_bar_divs[skill.category] || !skill_bar_divs[skill.category][skill.skill_id]){\r\n        return;\r\n    }\r\n    const xp_gain = Math.round(100*skill.get_parent_xp_multiplier()*get_skill_xp_gain(skill.skill_id))/100 || 1;\r\n    skill_bar_divs[skill.category][skill.skill_id].children[0].children[2].children[1].innerHTML = `XP gain: x${xp_gain}<br><span>XP cost scaling: x${skill.xp_scaling}</span>`;\r\n}\r\n\r\nfunction update_all_displayed_skills_xp_gain(){\r\n    Object.keys(skill_bar_divs).forEach(category => {\r\n        Object.keys(skill_bar_divs[category]).forEach(skill_id => {\r\n            update_displayed_skill_xp_gain(skills[skill_id]);\r\n        });\r\n    });\r\n}\r\n\r\nfunction sort_displayed_skills({sort_by=\"name\", change_direction=false}) {\r\n\r\n    if(change_direction){\r\n        if(sort_by && sort_by === skill_sorting) {\r\n            if(skill_sorting_direction === \"asc\") {\r\n                skill_sorting_direction = \"desc\";\r\n            } else {\r\n                skill_sorting_direction = \"asc\";\r\n            }\r\n        } else {\r\n            if(sort_by === \"level\") {\r\n                skill_sorting_direction = \"desc\";\r\n            } else {\r\n                skill_sorting_direction = \"asc\";\r\n            }\r\n        }\r\n    }\r\n\r\n    skill_sorting = sort_by;\r\n\r\n    let plus = skill_sorting_direction==\"asc\"?1:-1;\r\n    let minus = skill_sorting_direction===\"asc\"?-1:1;\r\n    for(let i = 0; i < skill_list.children.length; i++) {\r\n        \r\n        [...skill_list.children[i].querySelector(\"[data-skill_category_skills\").children].sort((a,b) => {\r\n            let elem_a;\r\n            let elem_b;\r\n            if(sort_by === \"level\") {\r\n                skill_sorting = sort_by;\r\n                elem_a = skills[a.getAttribute(\"data-skill\")].current_level;\r\n                elem_b = skills[b.getAttribute(\"data-skill\")].current_level;\r\n            } else {\r\n                elem_a = skills[a.getAttribute(\"data-skill\")].name();\r\n                elem_b = skills[b.getAttribute(\"data-skill\")].name();\r\n                skill_sorting = \"name\";\r\n            }\r\n    \r\n            if(elem_a > elem_b) {\r\n                return plus;\r\n            } else {\r\n                return minus;\r\n            }\r\n    \r\n    \r\n        }).forEach(node=>skill_list.children[i].querySelector(\"[data-skill_category_skills\").appendChild(node));\r\n    }\r\n}\r\n\r\n/**\r\n * sorts displayed skill categories alphabeticaly\r\n */\r\nfunction sort_displayed_skill_categories() {\r\n    [...skill_list.children].sort((a,b) => {\r\n        if(a.dataset.skill_category > b.dataset.skill_category) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }).forEach(node=>skill_list.appendChild(node));\r\n}\r\n\r\n/**\r\n * @description updates the list of stances, \r\n */\r\nfunction update_displayed_stance_list(stances, current_stance, fav_stances) {\r\n    while(stance_list.firstChild) {\r\n        stance_list.removeChild(stance_list.lastChild);\r\n    }\r\n    Object.keys(stance_bar_divs).forEach(bar => {\r\n        delete stance_bar_divs[bar];\r\n    })\r\n\r\n    stance_list.innerHTML = \r\n    `<tr class=\"stance_list_entry stance_list_header\">\r\n        <th class=\"stance_list_header stance_list_header_fav\">Fav</th>\r\n        <th class=\"stance_list_header stance_list_header_select\">Select</th>\r\n        <th class=\"stance_list_header stance_list_header_name\">Name</th>\r\n    </tr>`\r\n\r\n    Object.keys(stances).forEach(stance => {\r\n        if(stances[stance].is_unlocked) {\r\n            stance_bar_divs[stance] = document.createElement(\"tr\");\r\n            stance_bar_divs[stance].classList.add(\"stance_list_entry\");\r\n            stance_bar_divs[stance].dataset.stance = stance;\r\n\r\n            const fav_selection = `<td class=\"stances_button stances_button_checkbox\"><input type=\"checkbox\" id=\"stances_fav_${stance}\" name=\"stance_fav_selection\" onclick=\"fav_stance('${stance}')\"></td>`;\r\n            const stance_selection = `<td class=\"stances_button stances_button_radio\"><input type=\"radio\" id=\"stances_select_${stance}\" name=\"stance_list_selection\" onclick=\"select_stance('${stance}')\"></td>`;\r\n            const stance_info = \r\n                `<td class=\"stances_name\"><label for=\"stances_select_${stance}\">${stances[stance].name}</td>`\r\n\r\n            stance_bar_divs[stance].innerHTML = fav_selection;\r\n            stance_bar_divs[stance].innerHTML += stance_selection;\r\n            stance_bar_divs[stance].innerHTML += stance_info\r\n            \r\n            const stance_tooltip_row = document.createElement(\"td\");\r\n            \r\n            stance_tooltip_row.appendChild(create_stance_tooltip(stances[stance]));\r\n            stance_bar_divs[stance].appendChild(stance_tooltip_row);\r\n            stance_list.append(stance_bar_divs[stance]);\r\n        }\r\n    });\r\n\r\n    //different stamina cost: cheaper first; same stamina cost: sort alphabetically\r\n    [...stance_list.children].sort((a,b)=>{\r\n        const stance_a = stances[a.getAttribute(\"data-stance\")];\r\n        const stance_b = stances[b.getAttribute(\"data-stance\")];\r\n        if(!stance_b) {\r\n            return 1;\r\n        } else if(!stance_a) {\r\n            return -1;\r\n        }\r\n\r\n        if(!stance_a || !stance_b || !stance_a.is_unlocked || !stance_b.is_unlocked) {\r\n            console.error(`No such stance as either '${stance_a}' or '${stance_b}', or at least one of them is not yet unlocked!`);\r\n        }\r\n        \r\n        if(stance_a.stamina_cost < stance_b.stamina_cost) {\r\n            return -1;\r\n        } else if(stance_a.stamina_cost > stance_b.stamina_cost) {\r\n            return 1;\r\n        } else {\r\n            if(stance_a.name > stance_b.name) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        }\r\n    }).forEach(node=>stance_list.appendChild(node));\r\n\r\n    update_displayed_stance(current_stance);\r\n    update_displayed_faved_stances(fav_stances);\r\n}\r\n\r\nfunction create_stance_tooltip(stance) {\r\n    const tooltip_div = document.createElement(\"div\");\r\n    tooltip_div.classList.add(\"stance_tooltip\");\r\n    tooltip_div.innerHTML = \r\n    `<div>${stance.name}</div><br>\r\n    <div>${stance.getDescription()}</div><br>\r\n    <div>Stamina cost: ${stance.stamina_cost}</div>\r\n    <div class='stance_tooltip_stats'>${create_stance_tooltip_stats(stance)}</div`;\r\n\r\n    let target_count = stance.target_count;\r\n    if(target_count > 1 && stance.related_skill) {\r\n        target_count = target_count + Math.round(target_count * get_total_skill_level(stance.related_skill)/skills[stance.related_skill].max_level);\r\n    }\r\n\r\n    if(target_count > 1) {\r\n        tooltip_div.innerHTML += `\r\n        <br><div class='stance_tooltip_hitcount'>${stance.randomize_target_count?\"Randomly hits up to\":\"Hits up to\"} ${target_count} enemies</div>`;\r\n    }\r\n\r\n    return tooltip_div;\r\n}\r\n\r\nfunction create_stance_tooltip_stats(stance) {\r\n    let desc = \"\";\r\n    const stats = stance.getStats()\r\n    Object.keys(stats).forEach(stat => {\r\n        desc += `<br>x${Math.round(100*stats[stat])/100} ${stat_names[stat]}`;\r\n    });\r\n\r\n    return desc;\r\n}\r\n\r\nfunction update_stance_tooltip(stance) {\r\n    stance_bar_divs[stance.id].querySelector(\".stance_tooltip_stats\").innerHTML = create_stance_tooltip_stats(stance);\r\n\r\n    let target_count = stance.target_count;\r\n    if(target_count > 1){\r\n        if(stance.related_skill) {\r\n            target_count = target_count + Math.round(target_count * get_total_skill_level(stance.related_skill)/skills[stance.related_skill].max_level);\r\n        }\r\n        stance_bar_divs[stance.id].querySelector(\".stance_tooltip_hitcount\").innerHTML = `${stance.randomize_target_count?\"Randomly hits up to\":\"Hits up to\"} ${target_count} enemies</div>`;\r\n    } \r\n}\r\n\r\n/**\r\n * \r\n * @param {Stance} stance current stance \r\n */\r\nfunction update_displayed_stance(stance) {\r\n    stance_bar_divs[stance.id].children[1].children[0].checked = true;\r\n    document.getElementById(\"character_stance_name\").children[0].innerHTML = stance.name;\r\n\r\n    const selection = document.getElementById(\"character_stance_selection\");\r\n\r\n    if(selection.children) {\r\n        if(selection.querySelector(`[data-stance='${stance.id}']`)) {\r\n            selection.querySelector(`[data-stance='${stance.id}']`).children[0].checked = true;\r\n        } else if(!faved_stances[stance.id] && selection.querySelector('[data-stance] :checked')) {\r\n            selection.querySelector('[data-stance] :checked').checked = false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction update_displayed_faved_stances(stances) {\r\n    \r\n    const list = document.getElementById(\"character_stance_selection\");\r\n    list.innerHTML = \"\";\r\n    Object.keys(faved_stances).forEach(stance => {\r\n        stance_bar_divs[stance].children[0].children[0].checked = true;\r\n\r\n        const node = \r\n        `<div data-stance=\"${stance}\"><input type=\"radio\" id=\"stances_quick_select_${stance}\" name=\"stance_quick_selection\" onclick=\"select_stance('${stance}')\">\r\n         <label for=\"stances_quick_select_${stance}\">${stances[stance].name}</div>`;\r\n        list.innerHTML += node;\r\n    });\r\n\r\n\r\n    //different stamina cost: cheaper first; same stamina cost: sort alphabetically\r\n    [...list.children].sort((a,b)=>{\r\n        const stance_a = stances[a.getAttribute(\"data-stance\")];\r\n        const stance_b = stances[b.getAttribute(\"data-stance\")];\r\n\r\n        if(!stance_a || !stance_b || !stance_a.is_unlocked || !stance_b.is_unlocked) {\r\n            console.error(`No such stance as either '${stance_a}' or '${stance_b}', or at least one of them is not yet unlocked!`);\r\n        }\r\n        \r\n        if(stance_a.stamina_cost < stance_b.stamina_cost) {\r\n            return -1;\r\n        } else if(stance_a.stamina_cost > stance_b.stamina_cost) {\r\n            return 1;\r\n        } else {\r\n            if(stance_a.name > stance_b.name) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        }\r\n    }).forEach(node=>list.appendChild(node));\r\n\r\n    //mark selected stance as checked in quick selection\r\n\r\n    const selection = document.getElementById(\"character_stance_selection\");\r\n    if(selection.children && selection.querySelector(`[data-stance='${selected_stance}']`)) {\r\n        selection.querySelector(`[data-stance='${selected_stance}']`).children[0].checked = true;\r\n    }\r\n}\r\n\r\n/**\r\n * creates a new bestiary entry;\r\n * called when a new enemy is killed (or, you know, loading a save)\r\n * @param {String} enemy_name \r\n */\r\nfunction create_new_bestiary_entry(enemy_name) {\r\n    bestiary_entry_divs[enemy_name] = document.createElement(\"div\");\r\n    \r\n    const enemy = enemy_templates[enemy_name];\r\n\r\n    const name_div = document.createElement(\"div\");\r\n    name_div.innerHTML = enemy_name;\r\n    name_div.classList.add(\"bestiary_entry_name\");\r\n    const kill_counter = document.createElement(\"div\");\r\n    kill_counter.innerHTML = enemy_killcount[enemy_name];\r\n    kill_counter.classList.add(\"bestiary_entry_kill_count\");\r\n    \r\n\r\n    const bestiary_tooltip = document.createElement(\"div\");\r\n    const tooltip_xp = document.createElement(\"div\"); //base xp enemy gives\r\n    tooltip_xp.innerHTML = `<br>Base xp value: ${enemy.xp_value} <br><br>`;\r\n    const tooltip_desc = document.createElement(\"div\"); //enemy description\r\n    tooltip_desc.innerHTML = enemy.description;\r\n\r\n    const tooltip_tags = document.createElement(\"div\"); //enemy description\r\n\r\n    Object.keys(enemy.tags).forEach(tag => {\r\n        tooltip_tags.innerHTML += `[${tag}] `\r\n    });\r\n    tooltip_tags.innerHTML += \"<br><br>\";\r\n\r\n    const tooltip_stats = document.createElement(\"div\"); //base enemy stats\r\n    tooltip_stats.innerHTML = \"Stats: <br>\"\r\n\r\n    const stat_line_0 = document.createElement(\"div\");\r\n    stat_line_0.classList.add(\"grid_container\");\r\n\r\n    const stat_0 = document.createElement(\"div\");\r\n    const stat_0_name = document.createElement(\"div\");\r\n    const stat_0_value = document.createElement(\"div\");\r\n\r\n    stat_0.classList.add(\"stat_slot_div\");\r\n    stat_0_name.classList.add(\"stat_name\");\r\n    stat_0_value.classList.add(\"stat_value\");\r\n\r\n    stat_0_name.innerHTML = \"Health:\";\r\n    stat_0_value.innerHTML = `${enemy.stats.health}`;\r\n    stat_0.append(stat_0_name, stat_0_value);\r\n\r\n    const stat_1 = document.createElement(\"div\");\r\n    const stat_1_name = document.createElement(\"div\");\r\n    const stat_1_value = document.createElement(\"div\");\r\n\r\n    stat_1.classList.add(\"stat_slot_div\");\r\n    stat_1_name.classList.add(\"stat_name\");\r\n    stat_1_value.classList.add(\"stat_value\");\r\n\r\n    stat_1_name.innerHTML = `Defense:`;\r\n    stat_1_value.innerHTML = `${enemy.stats.defense}`;\r\n    stat_1.append(stat_1_name, stat_1_value);\r\n\r\n    stat_line_0.append(stat_0, stat_1);\r\n\r\n\r\n    const stat_line_2 = document.createElement(\"div\");\r\n    stat_line_2.classList.add(\"grid_container\");\r\n\r\n    const stat_2 = document.createElement(\"div\");\r\n    const stat_2_name = document.createElement(\"div\");\r\n    const stat_2_value = document.createElement(\"div\");\r\n\r\n    stat_2.classList.add(\"stat_slot_div\");\r\n    stat_2_name.classList.add(\"stat_name\");\r\n    stat_2_value.classList.add(\"stat_value\");\r\n\r\n    stat_2_name.innerHTML = \"Attack power:\";\r\n    stat_2_value.innerHTML = `${enemy.stats.attack}`;\r\n    if(enemy.stats.attack_count > 1) {\r\n        stat_2_value.innerHTML += `x${enemy.stats.attack_count}`;\r\n    }\r\n    stat_2.append(stat_2_name, stat_2_value);\r\n\r\n    const stat_3 = document.createElement(\"div\");\r\n    const stat_3_name = document.createElement(\"div\");\r\n    const stat_3_value = document.createElement(\"div\");\r\n\r\n    stat_3.classList.add(\"stat_slot_div\");\r\n    stat_3_name.classList.add(\"stat_name\");\r\n    stat_3_value.classList.add(\"stat_value\");\r\n\r\n    stat_3_name.innerHTML = `Attack speed:`;\r\n    stat_3_value.innerHTML = `${enemy.stats.attack_speed}`;\r\n    stat_3.append(stat_3_name, stat_3_value);\r\n\r\n    stat_line_2.append(stat_2, stat_3);\r\n\r\n    const stat_line_4 = document.createElement(\"div\");\r\n    stat_line_4.classList.add(\"grid_container\");\r\n\r\n    const stat_4 = document.createElement(\"div\");\r\n    const stat_4_name = document.createElement(\"div\");\r\n    const stat_4_value = document.createElement(\"div\");\r\n\r\n    stat_4.classList.add(\"stat_slot_div\");\r\n    stat_4_name.classList.add(\"stat_name\");\r\n    stat_4_value.classList.add(\"stat_value\");\r\n\r\n    stat_4_name.innerHTML = \"AP:\";\r\n    stat_4_value.innerHTML = `${Math.round(enemy.stats.dexterity * Math.sqrt(enemy.stats.intuition || 1))}`;\r\n    stat_4.append(stat_4_name, stat_4_value);\r\n\r\n    const stat_5 = document.createElement(\"div\");\r\n    const stat_5_name = document.createElement(\"div\");\r\n    const stat_5_value = document.createElement(\"div\");\r\n\r\n    stat_5.classList.add(\"stat_slot_div\");\r\n    stat_5_name.classList.add(\"stat_name\");\r\n    stat_5_value.classList.add(\"stat_value\");\r\n\r\n    stat_5_name.innerHTML = \"EP:\";\r\n    stat_5_value.innerHTML = `${Math.round(enemy.stats.agility * Math.sqrt(enemy.stats.intuition || 1))}`;\r\n    stat_5.append(stat_5_name, stat_5_value);\r\n    stat_line_4.append(stat_4, stat_5);\r\n\r\n    \r\n    tooltip_stats.appendChild(stat_line_0);\r\n    tooltip_stats.appendChild(stat_line_2);\r\n    tooltip_stats.appendChild(stat_line_4);\r\n\r\n    const tooltip_drops = document.createElement(\"div\"); //enemy drops\r\n    if(enemy.loot_list.length > 0) {\r\n        tooltip_drops.innerHTML = \"<br>Loot list:\";\r\n        const loot_line = document.createElement(\"div\");\r\n        const loot_name = document.createElement(\"div\");\r\n        const loot_chance = document.createElement(\"div\");\r\n        const loot_chance_base = document.createElement(\"div\");\r\n        const loot_chance_current = document.createElement(\"div\");\r\n\r\n        loot_line.classList.add(\"loot_slot_div\");\r\n        loot_name.classList.add(\"loot_name\");\r\n        loot_chance.classList.add(\"loot_chance\");\r\n        loot_chance_base.classList.add(\"loot_chance_base\");\r\n        loot_chance_current.classList.add(\"loot_chance_current\");\r\n\r\n        loot_name.innerHTML = `Item name`;\r\n        loot_chance_base.innerHTML = `base %`;\r\n        loot_chance_current.innerHTML = `current %`;\r\n        loot_chance.append(loot_chance_current, loot_chance_base);\r\n        loot_line.append(loot_name, loot_chance);\r\n\r\n        tooltip_drops.appendChild(loot_line);\r\n    }\r\n\r\n    for(let i = 0; i < enemy.loot_list.length; i++) {\r\n        const loot_line = document.createElement(\"div\");\r\n        const loot_name = document.createElement(\"div\");\r\n        const loot_chance = document.createElement(\"div\");\r\n        const loot_chance_base = document.createElement(\"div\");\r\n        const loot_chance_current = document.createElement(\"div\");\r\n\r\n        loot_line.classList.add(\"loot_slot_div\");\r\n        loot_name.classList.add(\"loot_name\");\r\n        loot_chance.classList.add(\"loot_chance\");\r\n        loot_chance_base.classList.add(\"loot_chance_base\");\r\n        loot_chance_current.classList.add(\"loot_chance_current\");\r\n\r\n        loot_name.innerHTML = `${enemy.loot_list[i].item_name}`;\r\n        loot_chance_base.innerHTML = `[${enemy.loot_list[i].chance*100}%]`;\r\n        loot_chance_current.innerHTML = `${Math.round(10000*enemy.loot_list[i].chance*enemy.get_droprate_modifier())/100}%`;\r\n        loot_chance.append(loot_chance_current, loot_chance_base);\r\n        loot_line.append(loot_name, loot_chance);\r\n\r\n        tooltip_drops.appendChild(loot_line);\r\n    }\r\n\r\n    bestiary_tooltip.classList.add(\"bestiary_entry_tooltip\");\r\n    \r\n    bestiary_tooltip.appendChild(tooltip_desc);\r\n    bestiary_tooltip.appendChild(tooltip_xp);\r\n    bestiary_tooltip.appendChild(tooltip_tags);\r\n    bestiary_tooltip.appendChild(tooltip_stats);\r\n    bestiary_tooltip.appendChild(tooltip_drops);\r\n\r\n    bestiary_entry_divs[enemy_name].appendChild(name_div);\r\n    bestiary_entry_divs[enemy_name].appendChild(kill_counter);\r\n    bestiary_entry_divs[enemy_name].appendChild(bestiary_tooltip);\r\n\r\n    bestiary_entry_divs[enemy_name].setAttribute(\"data-bestiary\", enemy.rank);\r\n    bestiary_entry_divs[enemy_name].classList.add(\"bestiary_entry_div\");\r\n    bestiary_list.appendChild(bestiary_entry_divs[enemy_name]);\r\n\r\n    //sorts bestiary_list div by enemy rank\r\n    [...bestiary_list.children].sort((a,b)=>parseInt(a.getAttribute(\"data-bestiary\")) - parseInt(b.getAttribute(\"data-bestiary\")))\r\n                                .forEach(node=>bestiary_list.appendChild(node));\r\n}\r\n\r\n/**\r\n * updates the bestiary entry of an enemy, that is killcount and on-hover droprates\r\n * @param {String} enemy_name \r\n */\r\nfunction update_bestiary_entry(enemy_name) {\r\n    bestiary_entry_divs[enemy_name].children[1].innerHTML = enemy_killcount[enemy_name];\r\n}\r\n\r\nfunction clear_bestiary() {\r\n    Object.keys(bestiary_entry_divs).forEach((enemy) => {\r\n        delete bestiary_entry_divs[enemy];\r\n    });\r\n}\r\n\r\nfunction clear_skill_list(){\r\n    while(skill_list.firstChild) {\r\n        skill_list.removeChild(skill_list.lastChild);\r\n    } //remove skill bars from display\r\n\r\n}\r\n\r\nfunction update_enemy_attack_bar(enemy_id, num) {\r\n    enemies_div.children[enemy_id].querySelector(\".enemy_attack_bar\").style.width = `${Math.min(num*100,100)}%`;\r\n}\r\n\r\nfunction update_character_attack_bar(num) {\r\n    character_attack_bar.style.width = `${Math.min(num*100,100)}%`;\r\n}\r\n\r\nfunction update_backup_load_button(date_string){\r\n    if(date_string) {\r\n        backup_load_button.innerText = `Load the backup autosave [${date_string.replaceAll(\"_\",\":\")}]`;\r\n        backup_load_button.style[\"background-image\"] = `var(--options_gradient);`;\r\n        backup_load_button.style[\"background-color\"] = \"transparent\";\r\n        backup_load_button.style.color = \"white\";\r\n        backup_load_button.style.cursor = \"pointer\";\r\n    } else {\r\n        backup_load_button.style[\"background-image\"] = \"none\";\r\n        backup_load_button.style[\"background-color\"] = \"#181818\";\r\n        backup_load_button.style.color = \"gray\";\r\n        backup_load_button.style.cursor = \"not-allowed\";\r\n    }\r\n}\r\n\r\nfunction update_other_save_load_button(date_string, is_dev) {\r\n    if(is_dev) {\r\n        other_save_load_button.innerText = `Import save from main version`;\r\n    } else {\r\n        other_save_load_button.innerText = `Import save from dev version`;\r\n    }\r\n    if(date_string !== undefined) {\r\n        other_save_load_button.style[\"background-image\"] = `var(--options_gradient);`;\r\n        other_save_load_button.style[\"background-color\"] = \"transparent\";\r\n        other_save_load_button.style.color = \"white\";\r\n        other_save_load_button.style.cursor = \"pointer\";\r\n        if(date_string) {\r\n            other_save_load_button.innerText += ` [${date_string.replaceAll(\"_\",\":\")}]`;\r\n        } else {\r\n            other_save_load_button.innerText += ` [unknown date]`;\r\n        }\r\n    } else {\r\n        other_save_load_button.style[\"background-image\"] = \"none\";\r\n        other_save_load_button.style[\"background-color\"] = \"#181818\";\r\n        other_save_load_button.style.color = \"gray\";\r\n        other_save_load_button.style.cursor = \"not-allowed\";\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * Toggles a specificed class for target 'element', removing it from any other element that might have had it.\r\n * If 'siblings_only' is true, class will be removed only from siblings\r\n * @param {Object} params\r\n * @param {HTMLElement} params.element\r\n * @param {Boolean} [params.siblings_only]\r\n * @param {String} params.class_name\r\n */\r\nfunction toggle_exclusive_class({element, siblings_only=false, class_name}) {\r\n    const elems = siblings_only?element.parentNode.querySelectorAll(`.${class_name}`):document.getElementsByClassName(class_name);\r\n    const has_class = element.classList.contains(class_name);\r\n    for(let i = 0; i < elems.length; i++) {\r\n        elems[i].classList.remove(class_name);\r\n    }\r\n\r\n    if(!has_class) {\r\n        element.classList.add(class_name);\r\n    }\r\n}\r\nfunction remove_class_from_all(class_name) {\r\n    const elems = document.getElementsByClassName(class_name);\r\n    while(elems.length > 0) {\r\n        elems.item(0).classList.remove(class_name);\r\n    }\r\n}\r\n\r\nfunction is_element_above_x(element, x) {\r\n    const rect = element.getBoundingClientRect();\r\n    const rect2 = x.getBoundingClientRect();\r\n\r\n    return rect.bottom <= rect2.top;\r\n}\r\n\r\nexport {\r\n    start_activity_animation,\r\n    end_activity_animation,\r\n    update_displayed_trader,\r\n    update_displayed_trader_inventory,\r\n    update_displayed_character_inventory,\r\n    sort_displayed_inventory,\r\n    create_item_tooltip,\r\n    update_displayed_money,\r\n    log_message,\r\n    clear_action_div,\r\n    update_displayed_enemies,\r\n    update_displayed_health_of_enemies,\r\n    update_displayed_normal_location,\r\n    update_displayed_combat_location,\r\n    log_loot,\r\n    update_displayed_equipment,\r\n    update_displayed_health,\r\n    update_displayed_stamina,\r\n    update_displayed_stats,\r\n    update_displayed_effects,\r\n    update_displayed_effect_durations,\r\n    capitalize_first_letter,\r\n    format_money,\r\n    update_displayed_time,\r\n    update_displayed_character_xp,\r\n    update_displayed_dialogue,\r\n    update_displayed_textline_answer,\r\n    exit_displayed_trade,\r\n    start_activity_display,\r\n    start_sleeping_display,\r\n    create_new_skill_bar, update_displayed_skill_bar, update_displayed_skill_description, update_displayed_skill_level,\r\n    update_displayed_skill_xp_gain,\r\n    update_all_displayed_skills_xp_gain,\r\n    clear_skill_bars,\r\n    update_displayed_ongoing_activity,\r\n    clear_skill_list,\r\n    update_character_attack_bar,\r\n    clear_message_log,\r\n    update_enemy_attack_bar,\r\n    remove_fast_travel_choice,\r\n    create_new_bestiary_entry,\r\n    update_bestiary_entry,\r\n    clear_bestiary,\r\n    start_reading_display,\r\n    sort_displayed_skills,\r\n    update_displayed_xp_bonuses,\r\n    update_displayed_stance_list,\r\n    update_displayed_stamina_efficiency,\r\n    update_displayed_stance,\r\n    update_displayed_faved_stances,\r\n    update_stance_tooltip,\r\n    update_gathering_tooltip,\r\n    update_displayed_location_types,\r\n    open_crafting_window,\r\n    close_crafting_window,\r\n    switch_crafting_recipes_page,\r\n    switch_crafting_recipes_subpage,\r\n    create_displayed_crafting_recipes,\r\n    update_displayed_component_choice,\r\n    update_displayed_material_choice,\r\n    update_recipe_tooltip,\r\n    update_displayed_crafting_recipes,\r\n    update_item_recipe_visibility,\r\n    update_item_recipe_tooltips,\r\n    update_displayed_book,\r\n    update_backup_load_button, update_other_save_load_button,\r\n    start_location_action_display,\r\n    set_location_action_finish_text,\r\n    update_location_action_progress_bar,\r\n    update_location_action_finish_button,\r\n    update_displayed_storage, exit_displayed_storage,\r\n    update_displayed_storage_inventory,\r\n    update_location_icon\r\n}", "\"use strict\";\r\n\r\nimport { InventoryHaver } from \"./inventory.js\";\r\nimport { skill_categories, skills, weapon_type_to_skill } from \"./skills.js\";\r\nimport { update_displayed_character_inventory, update_displayed_equipment, \r\n         update_displayed_stats,\r\n         update_displayed_health, update_displayed_stamina, \r\n         update_displayed_skill_xp_gain, update_all_displayed_skills_xp_gain,\r\n         update_displayed_skill_level, \r\n         update_displayed_xp_bonuses, \r\n         update_displayed_stamina_efficiency} from \"./display.js\";\r\nimport { active_effects, current_location, current_stance, favourite_consumables, remove_consumable_from_favourites } from \"./main.js\";\r\nimport { current_game_time, is_night } from \"./game_time.js\";\r\nimport { item_templates } from \"./items.js\";\r\n\r\nconst base_block_chance = 0.75; //+20 from the skill\r\nconst base_xp_cost = 10;\r\n\r\nclass Hero extends InventoryHaver {\r\n        constructor() {\r\n                super();\r\n                this.base_stats = {\r\n                        max_health: 50, \r\n                        health: 50,\r\n                        health_regeneration_flat: 0, //in combat\r\n                        health_regeneration_percent: 0, //in combat\r\n                        health_loss_flat: 0, //despite the name, it's values below 0 that mean actual health loss\r\n                        health_loss_percent: 0,\r\n                        max_stamina: 50,\r\n                        stamina: 50,\r\n                        stamina_regeneration_flat: 0, //in combat\r\n                        stamina_regeneration_percent: 0, //in combat\r\n                        stamina_efficiency: 1,\r\n                        max_mana: 0,\r\n                        mana: 0,\r\n                        mana_regeneration_flat: 0, //in combat\r\n                        mana_regeneration_percent: 0, //in combat\r\n                        mana_efficiency: 1,\r\n                        strength: 10, \r\n                        agility: 10, \r\n                        dexterity: 10, \r\n                        intuition: 10,\r\n                        magic: 0, \r\n                        attack_speed: 1, \r\n                        crit_rate: 0.05, \r\n                        crit_multiplier: 1.3,\r\n                        attack_power: 0, \r\n                        defense: 0,\r\n                        block_strength: 0,\r\n                        block_chance: 0,\r\n                        evasion_points: 0, //EP\r\n                        attack_points: 0, //AP\r\n                };\r\n                this.name = \"Hero\";\r\n                this.titles = {};\r\n                this.stats = {\r\n                        full: {...this.base_stats}, \r\n                        total_flat: {},\r\n                        total_multiplier: {},\r\n                        flat: {\r\n                                level: {},\r\n                                skills: {},\r\n                                equipment: {},\r\n                                skill_milestones: {},\r\n                                books: {},\r\n                                light_level: {},\r\n                                environment: {},\r\n                        },\r\n                        multiplier: {\r\n                                skills: {},\r\n                                skill_milestones: {},\r\n                                equipment: {},\r\n                                books: {},\r\n                                stance: {},\r\n                                light_level: {},\r\n                                environment: {},\r\n                        }\r\n                };\r\n                this.reputation = { //effects go up to 1000?\r\n                        village: 0,\r\n                        slums: 0,\r\n                        town: 0,\r\n                };\r\n                this.bonus_skill_levels = {\r\n                        full: {\r\n                                //all skills added in main.js in setup()\r\n                        },\r\n                        flat: {\r\n                                equipment: {},\r\n                                active_effects: {},\r\n                                skills: {}, //for some rare cases, generally bonuses should be limited to \"temporary\" sources\r\n                        }\r\n                };\r\n                this.xp_bonuses = {\r\n                        total_multiplier: {\r\n                                hero: 1,\r\n                                all: 1,\r\n                                all_skill: 1,\r\n                                //then all skills and categories added in main.js in setup()\r\n                        },\r\n                        multiplier: {\r\n                                levels: {},\r\n                                skills: {},\r\n                                //equipment: {},\r\n                                books: {}\r\n                        }\r\n                };\r\n                this.equipment = {\r\n                        head: null, torso: null, \r\n                        arms: null, ring: null, \r\n                        weapon: null, \"off-hand\": null,\r\n                        legs: null, feet: null, \r\n                        amulet: null, artifact: null,\r\n                \r\n                        axe: null, \r\n                        pickaxe: null,\r\n                        sickle: null,\r\n                };\r\n                this.money = 0;\r\n                this.xp = {\r\n                        current_level: 0, total_xp: 0, current_xp: 0, xp_to_next_lvl: base_xp_cost, \r\n                        total_xp_to_next_lvl: base_xp_cost, base_xp_cost: base_xp_cost, xp_scaling: 1.7,\r\n                }\r\n        }\r\n        add_xp({xp_to_add, use_bonus = true}) {\r\n                if(use_bonus) {\r\n                        xp_to_add *= (character.xp_bonuses.total_multiplier.hero || 1) * (character.xp_bonuses.total_multiplier.all || 1);\r\n                }\r\n                character.xp.total_xp += xp_to_add;\r\n        \r\n                if(xp_to_add + character.xp.current_xp < character.xp.xp_to_next_lvl) { // no levelup\r\n                        character.xp.current_xp += xp_to_add;\r\n                }\r\n                else { //levelup\r\n                        let level_after_xp = 0;\r\n                        \r\n                        while(character.xp.total_xp >= character.xp.total_xp_to_next_lvl) {\r\n                                level_after_xp += 1;\r\n                                \r\n                                character.xp.total_xp_to_next_lvl = Math.round(character.xp.base_xp_cost * (1 - character.xp.xp_scaling ** (level_after_xp + 1))/(1 - character.xp.xp_scaling));\r\n                        } //calculates lvl reached after adding xp\r\n        \r\n                        let total_xp_to_previous_lvl = Math.round(character.xp.base_xp_cost * (1 - character.xp.xp_scaling ** level_after_xp)/(1 - character.xp.xp_scaling));\r\n                        //xp needed for current lvl, same formula but for n-1\r\n        \r\n                        const gains = character.get_level_bonus(level_after_xp);\r\n        \r\n                        character.xp.xp_to_next_lvl = character.xp.total_xp_to_next_lvl - total_xp_to_previous_lvl;\r\n                        character.xp.current_level = level_after_xp;\r\n                        character.xp.current_xp = character.xp.total_xp - total_xp_to_previous_lvl;\t\t\r\n                        \r\n                        return `${character.name} is getting stronger. Reached level ${character.xp.current_level} ${gains}`;\r\n                }\r\n        }\r\n\r\n        /**\r\n         * gets bonuses to stats based on current level and level passed as param\r\n         * @param {Number} level \r\n         * @returns stats bonuses from leveling\r\n         */\r\n        get_level_bonus(level) {\r\n\r\n                let gained_hp = 0;\r\n                let gained_stamina = 0;\r\n                let gained_str = 0;\r\n                let gained_agi = 0;\r\n                let gained_dex = 0;\r\n                let gained_int = 0;\r\n        \r\n                const gained_skill_xp_multiplier = 1.03;\r\n                let total_skill_xp_multiplier = 1;\r\n        \r\n                for(let i = character.xp.current_level + 1; i <= level; i++) {\r\n                        if(i % 2 == 1) {\r\n                                gained_str += Math.ceil(i/10);\r\n                                gained_int += Math.ceil(i/10);\r\n                        } else {\r\n                                gained_agi += Math.ceil(i/10);\r\n                                gained_dex += Math.ceil(i/10);\r\n                        }\r\n        \r\n                        gained_hp += 10 * Math.ceil(i/10);\r\n                        gained_stamina += 5; //5 * Math.ceil(i/10) ?;\r\n                        total_skill_xp_multiplier = total_skill_xp_multiplier * gained_skill_xp_multiplier;\r\n                }\r\n        \r\n                character.stats.flat.level.max_health = (character.stats.flat.level.max_health || 0) + gained_hp;\r\n                character.stats.flat.level.health = character.stats.flat.level.max_health;\r\n                character.stats.flat.level.max_stamina = (character.stats.flat.level.max_stamina || 0) + gained_stamina;\r\n                character.stats.flat.level.stamina = character.stats.flat.level.max_stamina;\r\n                character.stats.flat.level.strength = (character.stats.flat.level.strength || 0) + gained_str;\r\n                character.stats.flat.level.intuition = (character.stats.flat.level.intuition || 0) + gained_int;\r\n                character.stats.flat.level.agility = (character.stats.flat.level.agility || 0) + gained_agi;\r\n                character.stats.flat.level.dexterity = (character.stats.flat.level.dexterity || 0) + gained_dex;\r\n        \r\n                character.xp_bonuses.multiplier.levels.all_skill = (character.xp_bonuses.multiplier.levels.all_skill || 1) * total_skill_xp_multiplier;\r\n        \r\n                let gains = `<br>HP increased by ${gained_hp}<br>Stamina increased by ${gained_stamina}`;\r\n                if(gained_str > 0) {\r\n                        gains += `<br>Strength increased by ${gained_str}`;\r\n                }\r\n                if(gained_agi > 0) {\r\n                        gains += `<br>Agility increased by ${gained_agi}`;\r\n                }\r\n                if(gained_dex > 0) {\r\n                        gains += `<br>Dexterity increased by ${gained_dex}`;\r\n                }\r\n                if(gained_int > 0) {\r\n                        gains += `<br>Intuition increased by ${gained_int}`;\r\n                }\r\n        \r\n                gains += `<br>Skill xp gains increased by ${Math.round((gained_skill_xp_multiplier-1)*100)}%`;\r\n                \r\n                return gains;\r\n        }\r\n}\r\n\r\nconst character = new Hero();\r\n\r\n//todo: move all remaining stuff to the class\r\n\r\n/**\r\n * adds skill milestone bonuses to character stats\r\n * called when a new milestone is reached\r\n * @param {{flats, multipliers}} bonuses \r\n */\r\ncharacter.stats.add_skill_milestone_bonus = function ({stats = {}, xp_multipliers = {}}) {\r\n        Object.keys(stats).forEach(stat => {\r\n                if(stats[stat].flat) {\r\n                        character.stats.flat.skill_milestones[stat] = (character.stats.flat.skill_milestones[stat] || 0) + stats[stat].flat;\r\n                }\r\n                if(stats[stat].multiplier) {\r\n                        character.stats.multiplier.skill_milestones[stat] = (character.stats.multiplier.skill_milestones[stat] || 1) * stats[stat].multiplier;\r\n                }\r\n        });\r\n\r\n        if(xp_multipliers?.hero) {\r\n                character.xp_bonuses.multiplier.skills.hero = (character.xp_bonuses.multiplier.skills.hero || 1) * xp_multipliers.hero;\r\n        }\r\n        if(xp_multipliers?.all) {\r\n                character.xp_bonuses.multiplier.skills.all = (character.xp_bonuses.multiplier.skills.all || 1) * xp_multipliers.all;\r\n        }\r\n        if(xp_multipliers?.all_skill) {\r\n                character.xp_bonuses.multiplier.skills.all_skill = (character.xp_bonuses.multiplier.skills.all_skill || 1) * xp_multipliers.all_skill;\r\n        }\r\n\r\n        Object.keys(skills).forEach(skill => {\r\n                if(xp_multipliers[skill]) {\r\n                        character.xp_bonuses.multiplier.skills[skill] = (character.xp_bonuses.multiplier.skills[skill] || 1) * xp_multipliers[skill];\r\n                }\r\n        });\r\n        Object.keys(skill_categories).forEach(category => {\r\n                const cat = \"category_\"+category;\r\n                if(xp_multipliers[cat]) {\r\n                        character.xp_bonuses.multiplier.skills[cat] = (character.xp_bonuses.multiplier.skills[cat] || 1) * xp_multipliers[cat];\r\n                }\r\n        });\r\n}\r\n\r\n/**\r\n * adds skill milestone bonuses to character stats\r\n * called when a new milestone is reached\r\n * @param {{flats, multipliers}} bonuses \r\n */\r\ncharacter.stats.add_book_bonus = function ({multipliers = {}, xp_multipliers = {}}) {\r\n        Object.keys(character.base_stats).forEach(stat => {\r\n                if(multipliers[stat]) {\r\n                        character.stats.multiplier.books[stat] = (character.stats.multiplier.books[stat] || 1) * multipliers[stat];\r\n                }\r\n        });\r\n       \r\n        if(xp_multipliers?.hero) {\r\n                character.xp_bonuses.multiplier.skills.hero = (character.xp_bonuses.multiplier.skills.hero || 1) * xp_multipliers.hero;\r\n        }\r\n        if(xp_multipliers?.all) {\r\n                character.xp_bonuses.multiplier.skills.all = (character.xp_bonuses.multiplier.skills.all || 1) * xp_multipliers.all;\r\n        }\r\n        if(xp_multipliers?.all_skill) {\r\n                character.xp_bonuses.multiplier.skills.all_skill = (character.xp_bonuses.multiplier.skills.all_skill || 1) * xp_multipliers.all_skill;\r\n        }\r\n\r\n        Object.keys(skills).forEach(skill => {\r\n                if(xp_multipliers[skill]) {\r\n                        character.xp_bonuses.multiplier.skills[skill] = (character.xp_bonuses.multiplier.skills[skill] || 1) * xp_multipliers[skill];\r\n                }\r\n        });\r\n}\r\n\r\ncharacter.stats.add_active_effect_bonus = function() {\r\n        character.stats.flat.active_effect = {};\r\n        character.stats.multiplier.active_effect = {};\r\n\r\n        Object.keys(active_effects).forEach(effect_key => {\r\n                let multiplier = 1;\r\n\r\n                let effects = get_effect_with_bonuses(active_effects[effect_key]);\r\n                for(const [key, value] of Object.entries(effects.stats)) {\r\n                        if(value.flat) {\r\n                                character.stats.flat.active_effect[key] = (character.stats.flat.active_effect[key] || 0) + value.flat*multiplier;\r\n                        }\r\n\r\n                        if(value.multiplier) {\r\n                                character.stats.multiplier.active_effect[key] = (character.stats.multiplier.active_effect[key] || 1) * value.multiplier*multiplier;\r\n                        }\r\n                }\r\n                for(const [key, value] of Object.entries(effects.bonus_skill_levels)) {\r\n                        character.bonus_skill_levels.flat.active_effects[key] = (character.bonus_skill_levels.flat.active_effects[key] || 0) + value;\r\n                }\r\n        });\r\n}\r\n\r\n/**\r\n * add all stat bonuses from equipment, including def/atk\r\n * called on equipment changes\r\n */\r\ncharacter.stats.add_all_equipment_bonus = function() {\r\n        \r\n        //reset as they will be recalculated\r\n        character.stats.flat.equipment = {};\r\n        character.stats.multiplier.equipment = {};\r\n        character.bonus_skill_levels.flat.equipment = {};\r\n\r\n        //iterate over slots\r\n        Object.keys(character.equipment).forEach(slot => {\r\n                if(!character.equipment[slot]) {\r\n                        return;\r\n                }\r\n                \r\n                if(character.equipment[slot].getDefense) {\r\n                        character.stats.flat.equipment.defense = (character.stats.flat.equipment.defense || 0) + character.equipment[slot].getDefense();\r\n                }\r\n                const stats = character.equipment[slot].getStats();\r\n                const bonuses = character.equipment[slot].getBonusSkillLevels();\r\n                //iterate over stats in slotted item\r\n                Object.keys(stats).forEach(stat => {\r\n                        if(stats[stat].flat) {\r\n                                character.stats.flat.equipment[stat] = (character.stats.flat.equipment[stat] || 0) + stats[stat].flat;\r\n                        }\r\n\r\n                        if(stats[stat].multiplier) {\r\n                                character.stats.multiplier.equipment[stat] = (character.stats.multiplier.equipment[stat] || 1) * stats[stat].multiplier;\r\n                        }\r\n                });\r\n\r\n                Object.keys(bonuses).forEach(bonus => {\r\n                        if(bonuses[bonus]) {\r\n                                character.bonus_skill_levels.flat.equipment[bonus] = (character.bonus_skill_levels.flat.equipment[bonus] || 0) + bonuses[bonus];\r\n                        }\r\n                });\r\n        });\r\n\r\n        character.stats.add_weapon_type_bonuses(); //add weapon speed bonus (technically a bonus related to equipment, so its in this function)\r\n}\r\n\r\ncharacter.stats.add_weapon_type_bonuses = function() {\r\n        if(character.equipment.weapon == null) {\r\n                character.stats.multiplier.skills.attack_power = get_total_skill_coefficient({skill_id:\"Unarmed\"});\r\n                character.stats.multiplier.skills.attack_speed = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Unarmed\"})**0.3333;\r\n                character.stats.multiplier.skills.attack_points = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Unarmed\"})**0.3333;\r\n                character.stats.multiplier.skills.evasion_points = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Unarmed\"})**0.3333;\r\n        } else {\r\n                character.stats.multiplier.skills.attack_speed = 1;\r\n                character.stats.multiplier.skills.attack_power = get_total_skill_coefficient({skill_id:weapon_type_to_skill[character.equipment.weapon.weapon_type]});\r\n                character.stats.multiplier.skills.attack_points = get_total_skill_coefficient({skill_id:weapon_type_to_skill[character.equipment.weapon.weapon_type]})**0.3333;\r\n                character.stats.multiplier.skills.evasion_points = 1;\r\n        }\r\n}\r\n\r\n/**\r\n * add all non-milestone stat bonuses from skills\r\n * called in update_stats()\r\n * only a few skills really matter here\r\n */\r\ncharacter.stats.add_all_skill_level_bonus = function() {\r\n        character.stats.flat.skills.defense = get_total_level_bonus(\"Iron skin\");\r\n\r\n        character.stats.multiplier.skills.stamina_efficiency = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Running\"});\r\n\r\n        character.stats.multiplier.skills.strength = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Weightlifting\"}) \r\n                                                        * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Climbing\"})\r\n                                                        * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Breathing\"});\r\n\r\n        character.stats.multiplier.skills.block_strength = 1 + 5*get_total_level_bonus(\"Shield blocking\");\r\n\r\n        character.stats.multiplier.skills.agility = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Equilibrium\"}) \r\n                                                        * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Climbing\"})\r\n                                                        * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Breathing\"});\r\n        \r\n        character.stats.multiplier.skills.dexterity = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Climbing\"});                                                \r\n\r\n        character.stats.multiplier.skills.max_stamina = get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Breathing\"});\r\n\r\n        character.stats.add_weapon_type_bonuses();\r\n}\r\n\r\n/**\r\n * add all stat bonuses/penalties from stances\r\n * called in update_stats()\r\n * multipliers only \r\n */\r\ncharacter.stats.add_all_stance_bonus = function() {\r\n        const multipliers = current_stance.getStats();\r\n        Object.keys(character.base_stats).forEach(stat => {\r\n                if(multipliers[stat]) {\r\n                        character.stats.multiplier.stance[stat] = multipliers[stat] || 1;\r\n                        //replacing instead of multiplying, since these come from singular source\r\n                } else {\r\n                        character.stats.multiplier.stance[stat] = 1;\r\n                }\r\n        });\r\n}\r\n\r\n/**\r\n * only supports multiplicative penalties for now\r\n */\r\ncharacter.stats.add_location_penalties = function() {\r\n        let effects = {};\r\n        let light_modifier = 1;\r\n        \r\n        if(current_location) {\r\n                if(!(\"connected_locations\" in current_location)) {\r\n                        effects = current_location.get_total_effect().hero_penalty;\r\n                }\r\n\r\n                if(current_location.light_level === \"dark\" || current_location.light_level === \"normal\" && is_night(current_game_time)) {\r\n                        light_modifier = 0.5 + 0.5* get_total_skill_level(\"Night vision\")/skills[\"Night vision\"].max_level;\r\n                        character.stats.multiplier.light_level.evasion_points = light_modifier;\r\n                        character.stats.multiplier.light_level.attack_points = light_modifier;\r\n                } else {\r\n                        character.stats.multiplier.light_level.evasion_points = 1;\r\n                        character.stats.multiplier.light_level.attack_points = 1;\r\n                }\r\n        }\r\n\r\n        character.stats.multiplier.environment = {};\r\n        character.stats.flat.environment = {};\r\n        Object.keys(effects.multipliers || {}).forEach(effect => {\r\n                character.stats.multiplier.environment[effect] = effects.multipliers[effect];\r\n        });\r\n        Object.keys(effects.flats || {}).forEach(effect => {\r\n                character.stats.flat.environment[effect] = effects.flats[effect];\r\n        });\r\n}\r\n\r\n/**\r\n * full stat recalculation, call whenever something changes\r\n */\r\ncharacter.update_stats = function () {\r\n    const missing_health = Math.max((character.stats.full[\"max_health\"] - character.stats.full[\"health\"]), 0) || 0;   \r\n    const missing_stamina = Math.max((character.stats.full[\"max_stamina\"] - character.stats.full[\"stamina\"]), 0) || 0;   \r\n    const missing_mana = Math.max((character.stats.full[\"max_mana\"] - character.stats.full[\"mana\"]), 0) || 0;   \r\n    //to avoid fully restoring all whenever this function is called\r\n\r\n    character.stats.add_all_skill_level_bonus();\r\n    character.stats.add_all_stance_bonus();\r\n\r\n    Object.keys(character.stats.full).forEach(stat => {\r\n        let stat_sum = 0;\r\n        let stat_mult = 1;\r\n\r\n        if(stat === \"block_chance\") {\r\n                stat_sum = base_block_chance + Math.round(get_total_level_bonus(\"Shield blocking\") * 10000)/10000;\r\n        } else if(stat === \"attack_points\") {\r\n                stat_sum = Math.sqrt(character.stats.full.intuition) * character.stats.full.dexterity * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Combat\"});\r\n        } else if(stat === \"evasion_points\") {\r\n                stat_sum = character.stats.full.agility * Math.sqrt(character.stats.full.intuition) * get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Evasion\"});\r\n        } else {\r\n                //just sum all flats\r\n                Object.values(character.stats.flat).forEach(piece => {\r\n                        stat_sum += (piece[stat] || 0);\r\n                });\r\n        }\r\n\r\n        Object.values(character.stats.multiplier).forEach(piece => {\r\n                stat_mult *= (piece[stat] || 1);\r\n        });\r\n\r\n        character.stats.full[stat] = (character.base_stats[stat] + stat_sum) * stat_mult;\r\n\r\n        character.stats.total_flat[stat] =  character.base_stats[stat] + stat_sum;\r\n        character.stats.total_multiplier[stat] = stat_mult || 1;\r\n\r\n        if(stat === \"health\") {\r\n                character.stats.full.health = Math.max(0, character.stats.full[\"max_health\"] - missing_health);\r\n        } else if(stat === \"stamina\") {\r\n                character.stats.full.stamina = Math.max(0, character.stats.full[\"max_stamina\"] - missing_stamina);\r\n        } else if(stat === \"mana\") {\r\n                character.stats.full.mana = Math.max(0, character.stats.full[\"max_mana\"] - missing_mana);\r\n        }\r\n    });\r\n\r\n     \r\n    if(character.equipment.weapon != null) { \r\n        character.stats.full.attack_power = (character.stats.full.strength/10) * character.equipment.weapon.getAttack() * character.stats.total_multiplier.attack_power;\r\n    } \r\n    else {\r\n        character.stats.full.attack_power = (character.stats.full.strength/10) * character.stats.total_multiplier.attack_power;\r\n    }\r\n    \r\n    character.stats.total_flat.attack_power = character.stats.full.attack_power/character.stats.total_multiplier.attack_power;\r\n    Object.keys(character.xp_bonuses.total_multiplier).forEach(bonus_target => {\r\n        character.xp_bonuses.total_multiplier[bonus_target] = \r\n                  (character.xp_bonuses.multiplier.levels[bonus_target] || 1) \r\n                * (character.xp_bonuses.multiplier.skills[bonus_target] || 1) \r\n                * (character.xp_bonuses.multiplier.books[bonus_target] || 1); \r\n\r\n        const bonus = character.xp_bonuses.total_multiplier[bonus_target];\r\n\r\n        if(bonus != 1){\r\n                if (bonus_target !== \"hero\") {\r\n                        if(bonus_target === \"all\" || bonus_target === \"all_skill\" || bonus_target.includes(\"category_\")) {\r\n                                update_all_displayed_skills_xp_gain();\r\n                        } else {\r\n                                update_displayed_skill_xp_gain(skills[bonus_target]);\r\n                        }\r\n                }\r\n                if(bonus_target === \"hero\" || bonus_target === \"all\") {\r\n                        update_displayed_xp_bonuses();\r\n                }\r\n        }\r\n    });\r\n\r\n    Object.keys(character.bonus_skill_levels.full).forEach(bonus_target => {\r\n        if(bonus_target.includes(\"category_\")) {\r\n                return;\r\n        }\r\n        const category = \"category_\"+skills[bonus_target].category;\r\n        character.bonus_skill_levels.full[bonus_target] = \r\n                  (character.bonus_skill_levels.flat.equipment[bonus_target] || 0) \r\n                + (character.bonus_skill_levels.flat.active_effects[bonus_target] || 0) \r\n                + (character.bonus_skill_levels.flat.skills[bonus_target] || 0)\r\n                + (character.bonus_skill_levels.flat.equipment[category] || 0) \r\n                + (character.bonus_skill_levels.flat.active_effects[category] || 0) \r\n                + (character.bonus_skill_levels.flat.skills[category] || 0);\r\n        \r\n        const bonus = character.bonus_skill_levels.full[bonus_target];\r\n\r\n        if(bonus != 0){\r\n                update_displayed_skill_level(skills[bonus_target]);\r\n        }        \r\n    });\r\n}\r\n\r\ncharacter.get_stamina_multiplier = function () {\r\n        if(character.stats.full.stamina == 0) {\r\n                return 0.5 + get_total_level_bonus(\"Persistence\");\r\n        }\r\n        return 1;\r\n}\r\n\r\ncharacter.get_attack_speed = function () {\r\n        let spd = character.stats.full.attack_speed * character.get_stamina_multiplier();\r\n        return spd;\r\n}\r\n\r\ncharacter.get_attack_power = function () {\r\n        return character.stats.full.attack_power * character.get_stamina_multiplier();\r\n}\r\n\r\ncharacter.wears_armor = function () {\r\n        return  (character.equipment.head && character.equipment.head.getDefense() !== 0) ||\r\n                (character.equipment.torso && character.equipment.torso.getDefense() !== 0) ||\r\n                (character.equipment.arms && character.equipment.arms.getDefense() !== 0) ||\r\n                (character.equipment.legs && character.equipment.legs.getDefense() !== 0) ||\r\n                (character.equipment.feet && character.equipment.feet.getDefense() !== 0);\r\n}\r\n\r\n/**\r\n * \r\n * @param {*}\r\n * @returns [actual damage taken; Boolean if character should faint] \r\n */\r\ncharacter.take_damage = function ({damage_values, can_faint = true, give_skill_xp = true}) {\r\n        /*\r\n        TODO:\r\n                - damage types: \"physical\", \"elemental\", \"magic\"\r\n                - each with it's own defense on equipment (and potentially spells)\r\n                - damage elements (for elemental damage type)\r\n                - resistance skills\r\n        */\r\n        let fainted;\r\n\r\n        damage_values = damage_values.map(val => {\r\n                if(val < 1) {\r\n                        return Math.max(Math.ceil(10*val)/10, 0);\r\n                } else {\r\n                        return Math.ceil(10*Math.max(val - character.stats.full.defense, val*0.05, 1))/10;\r\n                }\r\n        });\r\n        const damage_taken = damage_values.reduce((a,b)=>a+b);\r\n        character.stats.full.health -= damage_taken;\r\n\r\n        if(character.stats.full.health <= 0 && can_faint) {\r\n                fainted = true;\r\n                character.stats.full.health = 0;\r\n        } else {\r\n                fainted = false;\r\n        }\r\n\r\n        if(give_skill_xp) {\r\n                //TODO give xp to resistance skills when taking damge\r\n        }\r\n\r\n        return {damage_taken, fainted};\r\n}\r\n\r\ncharacter.get_character_money = function () {\r\n        return character.money;\r\n}\r\n\r\n/**\r\n * @param {Array} items [{item_key or item_id, count},...] \r\n */\r\nfunction add_to_character_inventory(items) {\r\n        const was_anything_new_added = character.add_to_inventory(items);\r\n\r\n        update_displayed_character_inventory({was_anything_new_added});\r\n}\r\n\r\n/**\r\n * @param {Array} items [{item_key, item_count}]\r\n */\r\nfunction remove_from_character_inventory(items) {\r\n        character.remove_from_inventory(items);\r\n        update_displayed_character_inventory();\r\n\r\n        for(let i = 0; i < items.length; i++) {\r\n                if(character.inventory[items[i].item_key]) {\r\n                        continue;\r\n                }\r\n                const {id} = JSON.parse(items[i].item_key);\r\n                if(id && item_templates[id].tags.usable && favourite_consumables[id]) {\r\n                        remove_consumable_from_favourites(id);\r\n                }\r\n        }\r\n}\r\n\r\n/**\r\n * @description equips passed item, doesn't do anything more with it;\r\n * don't call this one directly (except for when loading save data), but via equip_item_from_inventory()\r\n * @param: game item object\r\n */\r\nfunction equip_item(item) {\r\n\r\n        if(!item) {\r\n                update_displayed_equipment();\r\n                update_displayed_character_inventory();\r\n                character.stats.add_all_equipment_bonus();\r\n                \r\n                update_character_stats();\r\n                return;\r\n        }\r\n\r\n        const prev_item = character.equipment[item.equip_slot];\r\n        unequip_item(item.equip_slot, true);\r\n        character.equipment[item.equip_slot] = item;\r\n        \r\n        update_displayed_equipment();\r\n        update_displayed_character_inventory();\r\n        character.stats.add_all_equipment_bonus();\r\n        \r\n        update_character_stats();\r\n        manage_changed_skill_bonuses(item);\r\n        if(prev_item) {\r\n                manage_changed_skill_bonuses(prev_item);\r\n        }\r\n}\r\n\r\n/**\r\n * equips item and removes it from inventory\r\n * @param item_key\r\n **/\r\n function equip_item_from_inventory(item_key) {\r\n        if(item_key in character.inventory) { //check if its in inventory, just in case\r\n            //add specific item to equipment slot\r\n            // -> id and name tell which exactly item it is, then also check slot in item object and thats all whats needed\r\n            equip_item(character.inventory[item_key].item);\r\n            remove_from_character_inventory([{item_key}]);\r\n            \r\n            //update_character_stats(); //called in equip_item()\r\n        }\r\n}\r\n    \r\nfunction unequip_item(item_slot, already_calculated=false) {\r\n        if(character.equipment[item_slot] != null) {\r\n                const item = character.equipment[item_slot];\r\n                add_to_character_inventory([{item_key: item.getInventoryKey()}]);\r\n                character.equipment[item_slot] = null;\r\n                update_displayed_equipment();\r\n                update_displayed_character_inventory();\r\n                if(!already_calculated){\r\n                        character.stats.add_all_equipment_bonus();\r\n                        update_character_stats();\r\n                        manage_changed_skill_bonuses(item);\r\n                }\r\n        }\r\n}\r\n\r\nfunction manage_changed_skill_bonuses(item) {\r\n        const bonus_skill_levels = Object.keys(item.getBonusSkillLevels());\r\n        if(bonus_skill_levels.length > 0) {\r\n                for(let i = 0; i < bonus_skill_levels.length; i++) {\r\n                        if(bonus_skill_levels[i].includes(\"category_\")) {\r\n                                continue;\r\n                        }\r\n                        update_displayed_skill_level(skills[bonus_skill_levels[i]]);\r\n                }\r\n        }\r\n}\r\n\r\nfunction add_location_penalties() {\r\n        character.stats.add_location_penalties();\r\n}\r\n\r\n/**\r\n * updates character stats + their display \r\n */\r\nfunction update_character_stats() {\r\n        character.stats.add_location_penalties();\r\n        character.update_stats();\r\n\r\n        update_displayed_stats();\r\n        update_displayed_health();\r\n        update_displayed_stamina();\r\n        update_displayed_stamina_efficiency();\r\n        \r\n        //update_displayed_mana();\r\n}\r\n\r\n/**\r\n * updates character stats related to combat, things that are more situational and/or based on other stats, kept separately from them\r\n */\r\n\r\nfunction get_skill_xp_gain(skill_name) {\r\n        const category = \"category_\"+skills[skill_name].category;\r\n        return (character.xp_bonuses.total_multiplier.all_skill || 1) \r\n              * (character.xp_bonuses.total_multiplier.all || 1) \r\n              * (character.xp_bonuses.total_multiplier[skill_name] || 1)\r\n              * (character.xp_bonuses.total_multiplier[category] || 1);\r\n}\r\n\r\nfunction get_skills_overall_xp_gain() {\r\n        return (character.xp_bonuses.total_multiplier.all_skill || 1) * (character.xp_bonuses.total_multiplier.all || 1)\r\n}\r\n\r\nfunction get_hero_xp_gain() {\r\n        return (character.xp_bonuses.total_multiplier.hero || 1) * (character.xp_bonuses.total_multiplier.all || 1)\r\n}\r\n\r\nfunction get_total_skill_level(skill_id) {\r\n        return skills[skill_id].current_level + (character.bonus_skill_levels.full[skill_id] || 0);\r\n}\r\n\r\nfunction get_total_level_bonus(skill_id) {\r\n        return skills[skill_id].get_level_bonus(get_total_skill_level(skill_id));\r\n}\r\n\r\nfunction get_total_skill_coefficient({scaling_type, skill_id}) {\r\n        return skills[skill_id].get_coefficient({scaling_type, skill_level: get_total_skill_level(skill_id)});\r\n}\r\n\r\nfunction get_effect_with_bonuses(active_effect) {\r\n        let multiplier = 1;\r\n        if(active_effect.tags.medicine) {\r\n                multiplier *= get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id:\"Medicine\"});\r\n        }\r\n        let boosted = {stats: {}, bonus_skill_levels: {...active_effect.effects.bonus_skill_levels}};\r\n        for(const [key, value] of Object.entries(active_effect.effects.stats)) {\r\n                boosted.stats[key] = {};\r\n                if(value.flat && key.includes(\"_flat\")) {\r\n                        boosted.stats[key].flat = value.flat*multiplier**2;\r\n                }\r\n                if(value.flat && key.includes(\"_percent\")) {\r\n                        //this exclusively means percent based regeneration and is therefore treated as multiplicative effect\r\n                        boosted.stats[key].flat = value.flat*multiplier;\r\n                }\r\n                if(value.multiplier) {\r\n                        boosted.stats[key].multiplier = value.multiplier*multiplier;\r\n                }      \r\n        }\r\n\r\n        return boosted;\r\n}\r\n\r\nexport {character, add_to_character_inventory, remove_from_character_inventory, equip_item_from_inventory, equip_item, \r\n        unequip_item, update_character_stats, get_skill_xp_gain, get_hero_xp_gain, get_skills_overall_xp_gain, add_location_penalties,\r\n        get_total_skill_level, get_total_level_bonus, get_total_skill_coefficient, get_effect_with_bonuses};\r\n", "\"use strict\";\r\n\r\nconst skills = {};\r\nconst skill_categories = {};\r\n\r\nimport { get_total_level_bonus, get_total_skill_coefficient, get_total_skill_level } from \"./character.js\";\r\nimport { get_crafting_quality_caps } from \"./crafting_recipes.js\";\r\nimport {stat_names} from \"./misc.js\";\r\n\r\nconst weapon_type_to_skill = {\r\n    \"axe\": \"Axes\",\r\n    \"dagger\": \"Daggers\",\r\n    \"hammer\": \"Hammers\",\r\n    \"sword\": \"Swords\",\r\n    \"spear\": \"Spears\",\r\n    \"staff\": \"Staffs\",\r\n    \"wand\": \"Wands\"\r\n};\r\n\r\nlet unknown_skill_name = \"?????\";\r\n\r\nconst which_skills_affect_skill = {};\r\n\r\nclass Skill {\r\n    constructor({skill_id, \r\n                  names, \r\n                  description, \r\n                  flavour_text, \r\n                  max_level = 60, \r\n                  max_level_coefficient = 1, \r\n                  max_level_bonus = 0, \r\n                  base_xp_cost = 40, \r\n                  visibility_treshold = 10,\r\n                  get_effect_description = () => { return ''; }, \r\n                  parent_skill = null, \r\n                  milestones = {},\r\n                  xp_scaling = 1.8,\r\n                  is_unlocked = true,\r\n                  category,\r\n                }) \r\n    {\r\n        if(skill_id === \"all\" || skill_id === \"hero\" || skill_id === \"all_skill\") {\r\n            //would cause problem with how xp_bonuses are implemented\r\n            throw new Error(`Id \"${skill_id}\" is not allowed for skills`);\r\n        }\r\n\r\n        this.skill_id = skill_id;\r\n        this.names = names; // put only {0: name} to have skill always named the same, no matter the level\r\n        this.description = description;\r\n        this.flavour_text = flavour_text;\r\n        this.current_level = 0; //initial lvl\r\n        this.max_level = max_level; //max possible lvl, dont make it too high\r\n        this.max_level_coefficient = max_level_coefficient; //multiplicative bonus for levels\r\n        this.max_level_bonus = max_level_bonus; //other type bonus for levels\r\n        this.current_xp = 0; // how much of xp_to_next_lvl there is currently\r\n        this.total_xp = 0; // total collected xp, on loading calculate lvl based on this (so to not break skills if scaling ever changes)\r\n        this.base_xp_cost = base_xp_cost; //xp to go from lvl 1 to lvl 2\r\n        this.visibility_treshold = visibility_treshold < base_xp_cost ? visibility_treshold : base_xp_cost; \r\n        this.is_unlocked = is_unlocked;\r\n        //xp needed for skill to become visible and to get \"unlock\" message; try to keep it less than xp needed for lvl\r\n        this.xp_to_next_lvl = base_xp_cost; //for display only\r\n        this.total_xp_to_next_lvl = base_xp_cost; //total xp needed to lvl up\r\n        this.get_effect_description = get_effect_description;\r\n        this.is_parent = false;\r\n        if(!category) {\r\n            console.warn(`Skill \"${this.skill_id}\" has no category defined and was defaulted to miscellaneous`);\r\n            this.category = \"Miscellaneous\";\r\n        } else {\r\n            this.category = category;\r\n        }\r\n        skill_categories[this.category] = true;\r\n        \r\n        if(parent_skill) {\r\n            if(skills[parent_skill]) {\r\n                this.parent_skill = parent_skill;\r\n                skills[parent_skill].is_parent = true;\r\n            } else {\r\n                throw new Error(`Skill \"${parent_skill}\" doesn't exist, so it can't be set as a parent skill`)\r\n            }\r\n        }\r\n\r\n        this.milestones = milestones;\r\n\r\n        this.xp_scaling = xp_scaling > 1 ? xp_scaling : 1.6;\r\n        //how many times more xp needed for next level\r\n    }\r\n\r\n    name() {\r\n        if(this.visibility_treshold > this.total_xp || !this.is_unlocked) {\r\n            return unknown_skill_name;\r\n        }\r\n \r\n        const keys = Object.keys(this.names);\r\n        if (keys.length == 1) {\r\n            return (this.names[keys[0]]);\r\n        }\r\n        else {\r\n            let rank_name;\r\n            for (var i = 0; i <= keys.length; i++) {\r\n                if (this.current_level >= parseInt(keys[i])) {\r\n                    rank_name = this.names[keys[i]];\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            return rank_name;\r\n        }\r\n    }\r\n\r\n    add_xp({xp_to_add = 0}) {\r\n        if(xp_to_add == 0 || !this.is_unlocked) {\r\n            return {};\r\n        }\r\n        xp_to_add = Math.round(xp_to_add*100)/100;\r\n        let skill_name = this.name();\r\n        //grab name beforehand, in case it changes after levelup (levelup message should appear BEFORE skill name change message, so this is necessary)\r\n\r\n        this.total_xp = Math.round(100*(this.total_xp + xp_to_add))/100;\r\n        if (this.current_level < this.max_level) { //not max lvl\r\n            if (Math.round(100*(xp_to_add + this.current_xp))/100 < this.xp_to_next_lvl) { // no levelup\r\n                this.current_xp = Math.round(100*(this.current_xp + xp_to_add))/100;\r\n            }\r\n            else { //levelup\r\n                \r\n                let level_after_xp = 0;\r\n                let unlocks = {skills: [], recipes: []};\r\n\r\n                //its alright if this goes over max level, it will be overwritten in a if-else below that\r\n                while(this.total_xp >= this.total_xp_to_next_lvl) {\r\n\r\n                    level_after_xp += 1;\r\n                    this.total_xp_to_next_lvl = Math.round(100*this.base_xp_cost * (1 - this.xp_scaling ** (level_after_xp + 1)) / (1 - this.xp_scaling))/100;\r\n\r\n                    if(this.milestones[level_after_xp]?.unlocks?.skills) {\r\n                        unlocks.skills.push(...this.milestones[level_after_xp].unlocks.skills);\r\n                    }\r\n                    if(this.milestones[level_after_xp]?.unlocks?.recipes) {\r\n                        unlocks.recipes.push(...this.milestones[level_after_xp].unlocks.recipes);\r\n                    }\r\n                } //calculates lvl reached after adding xp\r\n                //probably could be done much more efficiently, but it shouldn't be a problem anyway\r\n\r\n                \r\n                let total_xp_to_previous_lvl = Math.round(100*this.base_xp_cost * (1 - this.xp_scaling ** level_after_xp) / (1 - this.xp_scaling))/100;\r\n                //xp needed for current lvl, same formula but for n-1\r\n\r\n                if(level_after_xp == 0) { //this was for an older issue that seems to have been long fixed\r\n                    console.warn(`Something went wrong, calculated level of skill \"${this.skill_id}\" after a levelup was 0.`\r\n                    +`\\nxp_added: ${xp_to_add};\\nprevious level: ${this.current_level};\\ntotal xp: ${this.total_xp};`\r\n                    +`\\ntotal xp for that level: ${total_xp_to_previous_lvl};\\ntotal xp for next level: ${this.total_xp_to_next_lvl}`);\r\n                }\r\n\r\n                let gains;\r\n                if(level_after_xp < this.max_level) { //wont reach max lvl\r\n                    gains = this.get_bonus_stats(level_after_xp);\r\n                    this.xp_to_next_lvl = Math.round(100*(this.total_xp_to_next_lvl - total_xp_to_previous_lvl))/100;\r\n                    this.current_level = level_after_xp;\r\n                    this.current_xp = Math.round(100*(this.total_xp - total_xp_to_previous_lvl))/100;\r\n                } else { //will reach max lvl\r\n                    gains = this.get_bonus_stats(this.max_level);\r\n                    this.current_level = this.max_level;\r\n                    this.total_xp_to_next_lvl = \"Already reached max lvl\";\r\n                    this.current_xp = \"Max\";\r\n                    this.xp_to_next_lvl = \"Max\";\r\n                }\r\n\r\n                skill_name = skill_name===unknown_skill_name?this.name():skill_name;\r\n                //swap name if it was unknown, otherwise leave it as it was (for properly messaging skill name change)\r\n                let message = `${skill_name} has reached level ${this.current_level}`;\r\n\r\n                if (Object.keys(gains.stats).length > 0 || Object.keys(gains.xp_multipliers).length > 0) { \r\n                    message += `<br><br> Thanks to ${skill_name} reaching new milestone, %HeroName% gained: `;\r\n\r\n                    if (gains.stats) {\r\n                        Object.keys(gains.stats).forEach(stat => {\r\n                            if(gains.stats[stat].flat) {\r\n                                message += `<br> +${gains.stats[stat].flat} ${stat_names[stat].replace(\"_\",\" \")}`;\r\n                            }\r\n                            if(gains.stats[stat].multiplier) {\r\n                                message += `<br> x${Math.round(100*gains.stats[stat].multiplier)/100} ${stat_names[stat].replace(\"_\",\" \")}`;\r\n                            }   \r\n                        });\r\n                    }\r\n\r\n                    if (gains.xp_multipliers) {\r\n                        Object.keys(gains.xp_multipliers).forEach(xp_multiplier => {\r\n                            let name;\r\n                            if(xp_multiplier !== \"all\" && xp_multiplier !== \"hero\" && xp_multiplier !== \"all_skill\" && !xp_multiplier.includes(\"category_\")) {\r\n                                name = skills[xp_multiplier].name();\r\n                                if(!skills[xp_multiplier]) {\r\n                                    console.warn(`Skill ${this.skill_id} tried to reward an xp multiplier for something that doesn't exist: ${xp_multiplier}. I could be a misspelled skill name`);\r\n                                }\r\n                            } else {\r\n                                name = xp_multiplier.replace(\"_\",\" \");\r\n                            }\r\n\r\n                            if(xp_multiplier.includes(\"category_\")) {\r\n                                message += `<br> x${Math.round(100*gains.xp_multipliers[xp_multiplier])/100} ${name.replace(\"category_\", \"\")} skills xp gain`;\r\n                            } else {\r\n                                message += `<br> x${Math.round(100*gains.xp_multipliers[xp_multiplier])/100} ${name} xp gain`;\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return {message, gains, unlocks};\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * @description only called on leveling; calculates all the bonuses gained, so they can be added to hero and logged in message log\r\n     * @param {*} level \r\n     * @returns bonuses from milestones\r\n     */\r\n    get_bonus_stats(level) {\r\n        //probably should rename, since it's not just stats anymore\r\n        const gains = {stats: {}, xp_multipliers: {}};\r\n\r\n        let stats;\r\n        let xp_multipliers;\r\n\r\n        for (let i = this.current_level + 1; i <= level; i++) {\r\n            if (this.milestones[i]) {\r\n                stats = this.milestones[i].stats;\r\n                xp_multipliers = this.milestones[i].xp_multipliers;\r\n                \r\n                if(stats) {\r\n                    Object.keys(stats).forEach(stat => {\r\n                        if(!gains.stats[stat]) {\r\n                            gains.stats[stat] = {};\r\n                        }\r\n                        if(stats[stat].flat) {\r\n                            gains.stats[stat].flat = (gains.stats[stat].flat || 0) + stats[stat].flat;\r\n                        }\r\n                        if(stats[stat].multiplier) {\r\n                            gains.stats[stat].multiplier =  (gains.stats[stat].multiplier || 1) * stats[stat].multiplier;\r\n                        }\r\n                        \r\n                    });\r\n                }\r\n\r\n                if(xp_multipliers) {\r\n                    Object.keys(xp_multipliers).forEach(multiplier_key => {\r\n                        gains.xp_multipliers[multiplier_key] = (gains.xp_multipliers[multiplier_key] || 1) * xp_multipliers[multiplier_key];\r\n                        if(which_skills_affect_skill[multiplier_key]) {\r\n                            if(!which_skills_affect_skill[multiplier_key].includes(this.skill_id)) {\r\n                                which_skills_affect_skill[multiplier_key].push(this.skill_id);\r\n                            }\r\n                        } else {\r\n                            which_skills_affect_skill[multiplier_key] = [this.skill_id];\r\n                        }\r\n                       \r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n        Object.keys(gains.stats).forEach((stat) => {\r\n            if(gains.stats[stat].multiplier) {\r\n                gains.stats[stat].multiplier = Math.round(100 * gains.stats[stat].multiplier) / 100;\r\n            }\r\n        });\r\n        \r\n        return gains;\r\n    }\r\n    get_coefficient({scaling_type, skill_level}) { //starts from 1\r\n        //maybe lvl as param, with current lvl being used if it's undefined?\r\n\r\n        switch (scaling_type) {\r\n            case \"flat\":\r\n                return 1 + Math.round((this.max_level_coefficient - 1) * (skill_level || this.current_level) / this.max_level * 1000) / 1000;\r\n            case \"multiplicative\":\r\n                return Math.round(Math.pow(this.max_level_coefficient, (skill_level || this.current_level) / this.max_level) * 1000) / 1000;\r\n            default: //same as on multiplicative\r\n                return Math.round(Math.pow(this.max_level_coefficient, (skill_level || this.current_level) / this.max_level) * 1000) / 1000;\r\n        }\r\n    }\r\n    get_level_bonus(level) { //starts from 0\r\n        return this.max_level_bonus * (level || this.current_level) / this.max_level;\r\n    }\r\n    get_parent_xp_multiplier() {\r\n        if(this.parent_skill) {\r\n            return (1.1**Math.max(0,skills[this.parent_skill].current_level-this.current_level));\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param {String} skill_id key from skills object\r\n * @returns all unlocked leveling rewards, formatted to string\r\n */\r\nfunction get_unlocked_skill_rewards(skill_id) {\r\n    let unlocked_rewards = '';\r\n    const skill = skills[skill_id];\r\n    \r\n        const milestones = Object.keys(skill.milestones).filter(level => level <= skill.current_level);\r\n        if(milestones.length > 0) {\r\n            unlocked_rewards = `lvl ${milestones[0]}: ${format_skill_rewards(skill.milestones[milestones[0]])}`;\r\n            for(let i = 1; i < milestones.length; i++) {\r\n                unlocked_rewards += `<br>\\n\\nlvl ${milestones[i]}: ${format_skill_rewards(skill.milestones[milestones[i]])}`;\r\n            }\r\n        } else { //no rewards\r\n            return '';\r\n        }\r\n\r\n    return unlocked_rewards;\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} skill_id key used in skills object\r\n * @returns next lvl at which skill has any rewards\r\n */\r\nfunction get_next_skill_milestone(skill_id){\r\n\r\n    return Object.keys(skills[skill_id].milestones).find(\r\n        level => level > skills[skill_id].current_level);\r\n}\r\n\r\n/**\r\n * @param milestone milestone from object rewards - {stats: {stat1, stat2... }} \r\n * @returns rewards formatted to a nice string\r\n */\r\nfunction format_skill_rewards(milestone){\r\n    let formatted = '';\r\n    if(milestone.stats) {\r\n        let temp = '';\r\n        Object.keys(milestone.stats).forEach(stat => {\r\n            if(milestone.stats[stat].flat) {\r\n                if(formatted) {\r\n                    formatted += `, +${milestone.stats[stat].flat} ${stat_names[stat]}`;\r\n                } else {\r\n                    formatted = `+${milestone.stats[stat].flat} ${stat_names[stat]}`;\r\n                }\r\n            }\r\n            if(milestone.stats[stat].multiplier) {\r\n                if(temp) {\r\n                    temp += `, x${milestone.stats[stat].multiplier} ${stat_names[stat]}`;\r\n                } else {\r\n                    temp = `x${milestone.stats[stat].multiplier} ${stat_names[stat]}`;\r\n                }\r\n            }\r\n        });\r\n\r\n        if(formatted) {\r\n            if(temp) {\r\n                formatted += \", \" + temp;\r\n            }\r\n        } else {\r\n            formatted = temp;\r\n        }\r\n    }\r\n\r\n    if(milestone.xp_multipliers) {\r\n        const xp_multipliers = Object.keys(milestone.xp_multipliers);\r\n        let name;\r\n        if(xp_multipliers[0] !== \"all\" && xp_multipliers[0] !== \"hero\" && xp_multipliers[0] !== \"all_skill\") {\r\n            if(xp_multipliers[0].includes(\"category_\")) {\r\n                name = xp_multipliers[0].replace(\"category_\", \"\") + \" skills\";\r\n            } else {\r\n                name = skills[xp_multipliers[0]].name();\r\n            }\r\n        } else {\r\n            name = xp_multipliers[0].replace(\"_\",\" \");\r\n        }\r\n        if(formatted) {\r\n            formatted += `, x${milestone.xp_multipliers[xp_multipliers[0]]} ${name} xp gain`;\r\n        } else {\r\n            formatted = `x${milestone.xp_multipliers[xp_multipliers[0]]} ${name} xp gain`;\r\n        }\r\n        for(let i = 1; i < xp_multipliers.length; i++) {\r\n            let name;\r\n            if(xp_multipliers[i] !== \"all\" && xp_multipliers[i] !== \"hero\" && xp_multipliers[i] !== \"all_skill\") {\r\n                if(xp_multipliers[i].includes(\"category_\")) {\r\n                    name = xp_multipliers[i].replace(\"category_\", \"\") + \" skills\";\r\n                } else {\r\n                    name = skills[xp_multipliers[i]].name();\r\n                }\r\n            } else {\r\n                name = xp_multipliers[i].replace(\"_\",\" \");\r\n            }\r\n            formatted += `, x${milestone.xp_multipliers[xp_multipliers[i]]} ${name} xp gain`;\r\n        }\r\n    }\r\n    if(milestone.unlocks) {\r\n        if(milestone.unlocks.skills) {\r\n            const unlocked_skills = milestone.unlocks.skills;\r\n            if(formatted) {\r\n                formatted += `, <br> Unlocked skill \"${milestone.unlocks.skills[0]}\"`;\r\n            } else {\r\n                formatted = `Unlocked skill \"${milestone.unlocks.skills[0]}\"`;\r\n            }\r\n            for(let i = 1; i < unlocked_skills.length; i++) {\r\n                formatted += `, \"${milestone.unlocks.skills[i]}\"`;\r\n            }\r\n        }\r\n        if(milestone.unlocks.recipes) {\r\n            const phrasing = milestone.unlocks.recipes.length > 1?\"new recipes\":\"a new recipe\";\r\n            if(formatted) {\r\n                formatted += `, <br> Unlocked ${phrasing}`;\r\n            } else {\r\n                formatted = `Unlocked ${phrasing}`;\r\n            }\r\n        }\r\n        \r\n    }\r\n    return formatted;\r\n}\r\n\r\n//basic combat skills\r\n(function(){\r\n    skills[\"Combat\"] = new Skill({skill_id: \"Combat\", \r\n                                names: {0: \"Combat\"}, \r\n                                category: \"Combat\",\r\n                                description: \"Overall combat ability\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies AP by ${Math.round(get_total_skill_coefficient({skill_id:\"Combat\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                }});\r\n    \r\n    skills[\"Pest killer\"] = new Skill({skill_id: \"Pest killer\", \r\n                                names: {0: \"Pest killer\", 15: \"Pest slayer\"}, \r\n                                description: \"Small enemies might not seem very dangerous, but it's not that easy to hit them!\", \r\n                                max_level_coefficient: 2,\r\n                                category: \"Combat\",\r\n                                base_xp_cost: 100,\r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies AP against small-type enemies by ${Math.round(get_total_skill_coefficient({skill_id:\"Pest killer\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        xp_multipliers: {\r\n                                            Combat: 1.05,\r\n                                        },\r\n                                    },\r\n                                    2: {\r\n                                        xp_multipliers: {\r\n                                            category_Combat: 1.05,\r\n                                        },\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            dexterity: {flat: 1},\r\n                                        },\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            dexterity: {multiplier: 1.05},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Evasion: 1.05,\r\n                                            \"Shield blocking\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            dexterity: {flat: 1},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Combat: 1.05,\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            dexterity: {multiplier: 1.05},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            category_Combat: 1.05,\r\n                                        }\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            dexterity: {flat: 2},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Combat: 1.05,\r\n                                        }\r\n                                    },\r\n                                    \r\n                                }\r\n                            });    \r\n                                \r\n    skills[\"Giant slayer\"] = new Skill({skill_id: \"Giant slayer\", \r\n                                names: {0: \"Giant killer\", 15: \"Giant slayer\"}, \r\n                                description: \"Large opponents might seem scary, but just don't get hit and you should be fine!\", \r\n                                max_level_coefficient: 2,\r\n                                category: \"Combat\",\r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies EP against large-type enemies by ${Math.round(get_total_skill_coefficient({skill_id:\"Giant slayer\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                }});\r\n\r\n    skills[\"Evasion\"] = new Skill({skill_id: \"Evasion\", \r\n                                names: {0: \"Evasion\"},                                \r\n                                description:\"Ability to evade attacks\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 20,\r\n                                category: \"Combat\",\r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies EP by ${Math.round(get_total_skill_coefficient({skill_id:\"Evasion\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 1},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Equilibrium: 1.05,\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            \"agility\": {\r\n                                                flat: 1,\r\n                                                multiplier: 1.05,\r\n                                            }\r\n                                        },\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 2},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Equilibrium: 1.05,\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            \"agility\": {\r\n                                                flat: 1,\r\n                                                multiplier: 1.05,\r\n                                            }\r\n                                        },\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 2},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Equilibrium: 1.05,\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n    skills[\"Shield blocking\"] = new Skill({skill_id: \"Shield blocking\", \r\n                                    names: {0: \"Shield blocking\"}, \r\n                                    description: \"Ability to block attacks with shield\", \r\n                                    max_level: 30, \r\n                                    max_level_bonus: 0.2,\r\n                                    category: \"Combat\",\r\n                                    get_effect_description: ()=> {\r\n                                        return `Increases block chance by flat ${Math.round(get_total_level_bonus(\"Shield blocking\")*1000)/10}%. Increases blocked damage by ${Math.round(get_total_level_bonus(\"Shield blocking\")*5000)/10}%`;\r\n                                    }});\r\n    \r\n     skills[\"Unarmed\"] = new Skill({skill_id: \"Unarmed\", \r\n                                    names: {0: \"Unarmed\", 10: \"Brawling\", 20: \"Martial arts\"}, \r\n                                    description: \"It's definitely, unquestionably, undoubtedly better to just use a weapon instead of doing this. But sure, why not?\",\r\n                                    category: \"Combat\",\r\n                                    get_effect_description: ()=> {\r\n                                        return `Multiplies damage dealt in unarmed combat by ${Math.round(get_total_skill_coefficient({skill_id:\"Unarmed\",scaling_type:\"multiplicative\"})*1000)/1000}. \r\nMultiplies attack speed, EP and AP in unarmed combat by ${Math.round((get_total_skill_coefficient({skill_id:\"Unarmed\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                    },\r\n                                    max_level_coefficient: 64, //even with 8x more it's still gonna be worse than just using a weapon lol\r\n                                    milestones: {\r\n                                        2: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 1},\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                Weightlifting: 1.05,\r\n                                            }\r\n                                        },\r\n                                        4: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 1},\r\n                                                \"dexterity\": {flat: 1},\r\n                                            }\r\n                                        },\r\n                                        6: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 1},\r\n                                                \"dexterity\": {flat: 1},\r\n                                                \"agility\": {flat: 1},\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                Weightlifting: 1.1,\r\n                                            }\r\n                                        },\r\n                                        8: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 1},\r\n                                                \"dexterity\": {flat: 1},\r\n                                                \"agility\": {flat: 1},\r\n                                            }\r\n                                        },\r\n                                        10: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 2},\r\n                                                \"dexterity\": {flat: 1},\r\n                                                \"agility\": {flat: 1},\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                Running: 1.2,\r\n                                            }\r\n                                        },\r\n                                        12: {\r\n                                            stats: {\r\n                                                \"strength\": {flat: 2},\r\n                                                \"dexterity\": {flat: 2},\r\n                                                \"agility\": {flat: 2},\r\n                                            }\r\n                                        },\r\n                                    }});                                \r\n})();\r\n\r\n//combat stances\r\n(function(){\r\n    skills[\"Stance mastery\"] = new Skill({skill_id: \"Stance mastery\", \r\n                                    names: {0: \"Stance proficiency\", 10: \"Stance mastery\"}, \r\n                                    description: \"Knowledge on how to apply different stances in combat\",\r\n                                    base_xp_cost: 60,\r\n                                    category: \"Stance\",\r\n                                    max_level: 30,\r\n                                    get_effect_description: ()=> {\r\n                                        return `Increases xp gains of all combat stance skills of level lower than this, x1.1 per level of difference`;\r\n                                    },\r\n                                });\r\n    skills[\"Quick steps\"] = new Skill({skill_id: \"Quick steps\", \r\n                                names: {0: \"Quick steps\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A swift and precise technique that abandons strength in favor of greater speed\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the 'Quick Steps' stance`;\r\n                                }});\r\n    skills[\"Heavy strike\"] = new Skill({skill_id: \"Heavy strike\", \r\n                                names: {0: \"Crushing force\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A powerful and dangerous technique that abandons speed in favor of overwhelmingly strong attacks\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the \"Crushing force\" stance`;\r\n                                }});\r\n    skills[\"Wide swing\"] = new Skill({skill_id: \"Wide swing\", \r\n                                names: {0: \"Broad arc\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A special technique that allows striking multiple enemies at once, although at a cost of lower damage\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the \"Broad arc\" stance`;\r\n                                }});\r\n    skills[\"Defensive measures\"] = new Skill({skill_id: \"Defensive measures\", \r\n                                names: {0: \"Defensive measures\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A careful technique focused much more on defense than on attacking\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the 'Defensive Measures' stance`;\r\n                                }});\r\n    skills[\"Berserker's stride\"] = new Skill({skill_id: \"Berserker's stride\", \r\n                                names: {0: \"Berserker's stride\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A wild and dangerous technique that focuses on dealing as much damage as possible, while completely ignoring own defense\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the 'Berserker's Stride' stance`;\r\n                                }});                  \r\n    skills[\"Flowing water\"] = new Skill({skill_id: \"Flowing water\", \r\n                                names: {0: \"Flowing water\"}, \r\n                                parent_skill: \"Stance mastery\",\r\n                                description: \"A wild and dangerous technique that focuses on dealing as much damage as possible, while completely ignoring own defense\", \r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 60,\r\n                                category: \"Stance\",\r\n                                max_level: 30,\r\n                                get_effect_description: ()=> {\r\n                                    return `Improves efficiency of the 'Flowing Water' stance`;\r\n                                }});         \r\n                               \r\n})();\r\n\r\n//environment related skills\r\n(function(){\r\n    skills[\"Spatial awareness\"] = new Skill({\r\n                                            skill_id: \"Spatial awareness\", \r\n                                            names: {0: \"Spatial awareness\"}, \r\n                                            description: \"Understanding where you are in relation to other creatures and objects\", \r\n                                            get_effect_description: ()=> {\r\n                                                return `Reduces environmental penalty in open areas by ^${Math.round(100-100*get_total_skill_level(\"Spatial awareness\")/skills[\"Spatial awareness\"].max_level)/100}`;\r\n                                            },\r\n                                            category: \"Environmental\",\r\n                                            milestones: {\r\n                                                1: {\r\n                                                    xp_multipliers:{ \r\n                                                        Evasion: 1.1,\r\n                                                        \"Shield blocking\": 1.1,\r\n                                                    },\r\n                                                },\r\n                                                3: {\r\n                                                    xp_multipliers: {\r\n                                                        Combat: 1.1,\r\n                                                    }\r\n                                                },\r\n                                                5: {\r\n                                                    xp_multipliers: {\r\n                                                        category_Combat: 1.1,\r\n                                                    },\r\n                                                    stats: {\r\n                                                        intuition: {flat: 1},\r\n                                                    }\r\n                                                },\r\n                                                8: {\r\n                                                    xp_multipliers: {\r\n                                                        all_skill: 1.1,\r\n                                                    }\r\n                                                },\r\n                                                10: {\r\n                                                    xp_multipliers:{ \r\n                                                        Evasion: 1.1,\r\n                                                        \"Shield blocking\": 1.1,\r\n                                                        Combat: 1.1,\r\n                                                    },\r\n                                                    stats: {\r\n                                                        intuition: {flat: 1},\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n    skills[\"Tight maneuvers\"] = new Skill({\r\n                                        skill_id: \"Tight maneuvers\", \r\n                                        names: {0: \"Tight maneuvers\"}, \r\n                                        description: \"Learn how to fight in narrow environment, where there's not much space for dodging attacks\", \r\n                                        category: \"Environmental\",\r\n                                        get_effect_description: ()=> {\r\n                                            return `Reduces environmental penalty in narrow areas by ^${Math.round(100-100*get_total_skill_level(\"Tight maneuvers\")/skills[\"Tight maneuvers\"].max_level)/100}`;\r\n                                        },\r\n                                        milestones: {\r\n                                            3: {\r\n                                                xp_multipliers: {\r\n                                                    Evasion: 1.1,\r\n                                                    \"Shield blocking\": 1.1,\r\n                                                }\r\n                                            },\r\n                                            5: {\r\n                                                xp_multipliers: {\r\n                                                    Combat: 1.1,\r\n                                                }\r\n                                            },\r\n                                            7: {\r\n                                                xp_multipliers: {\r\n                                                    Evasion: 1.1,\r\n                                                    \"Shield blocking\": 1.1,\r\n                                                }\r\n                                            },\r\n                                            10: {\r\n                                                xp_multipliers: {\r\n                                                    Evasion: 1.1,\r\n                                                    \"Shield blocking\": 1.1,\r\n                                                    Combat: 1.1,\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n    skills[\"Night vision\"] = new Skill({\r\n                                    skill_id: \"Night vision\",\r\n                                    names: {0: \"Night vision\"},\r\n                                    description: \"Ability to see in darkness\",\r\n                                    base_xp_cost: 600,\r\n                                    xp_scaling: 1.9,\r\n                                    max_level: 10,\r\n                                    category: \"Environmental\",\r\n                                    get_effect_description: () => {\r\n                                        return `Reduces darkness penalty (except for 'pure darkness') by ^${Math.round(100-100*get_total_skill_level(\"Night vision\")/skills[\"Night vision\"].max_level)/100}`;\r\n                                    },\r\n                                    milestones: {\r\n                                        2: {\r\n                                            stats: {\r\n                                                intuition: {flat: 1},\r\n                                            }\r\n                                        },\r\n                                        3: {\r\n                                            xp_multipliers: {\r\n                                                Evasion: 1.05,\r\n                                                \"Shield blocking\": 1.05,\r\n                                            }\r\n                                        },\r\n                                        5: {\r\n                                            stats: {\r\n                                                intuition: {flat: 1},\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                \"Presence sensing\": 1.05\r\n                                            }\r\n\r\n                                            },\r\n                                        7: {    \r\n                                            xp_multipliers: \r\n                                            {\r\n                                                Combat: 1.1,\r\n                                            },\r\n                                            stats: {\r\n                                                intuition: {multiplier: 1.05},\r\n                                            }\r\n                                        },\r\n                                        8: {\r\n                                            xp_multipliers: {\r\n                                                \"Presence sensing\": 1.1,\r\n                                            }\r\n                                        },\r\n                                        10: {\r\n                                            xp_multipliers: {\r\n                                                \"Presence sensing\": 1.2,\r\n                                                Evasion: 1.05,\r\n                                                \"Shield blocking\": 1.05, \r\n                                            },\r\n                                            stats: {\r\n                                                intuition: {multiplier: 1.05},\r\n                                            }\r\n                                        }\r\n                                    }\r\n                            });\r\n    skills[\"Presence sensing\"] = new Skill({\r\n                skill_id: \"Presence sensing\",\r\n                names: {0: \"Presence sensing\"},\r\n                description: \"Ability to sense a presence without using your eyes\",\r\n                base_xp_cost: 60,\r\n                xp_scaling: 2,\r\n                max_level: 20,\r\n                category: \"Environmental\",\r\n                get_effect_description: () => {\r\n                    return `Reduces extreme darkness penalty by ^${Math.round(100-100*get_total_skill_level(\"Presence sensing\")/skills[\"Presence sensing\"].max_level)/100}`;\r\n                },\r\n                milestones: {\r\n                    1: {\r\n                        stats: {\r\n                            intuition: {flat: 1},\r\n                        },\r\n                        xp_multipliers: {\r\n                            \"Night vision\": 1.2,\r\n                        }\r\n                    },\r\n                    \r\n                    2: {\r\n                        xp_multipliers: {\r\n                            Evasion: 1.1,\r\n                            \"Shield blocking\": 1.2,\r\n                        }\r\n                    },\r\n                    4: {\r\n                        stats: {\r\n                            intuition: {flat: 1},\r\n                        },\r\n                        xp_multipliers: {\r\n                            \"Combat\": 1.1\r\n                        }\r\n\r\n                        },\r\n                    5: {    \r\n                        xp_multipliers: \r\n                        {\r\n                            all_skill: 1.05,\r\n                            \"Night vision\": 1.2,\r\n                        },\r\n                        stats: {\r\n                            intuition: {multiplier: 1.1},\r\n                        }\r\n                    },\r\n                    7: {\r\n                        stats: {\r\n                            intuition: {flat: 1},\r\n                        },\r\n                        xp_multipliers: {\r\n                            hero: 1.05,\r\n                            \"Night vision\": 1.2,\r\n                        }\r\n                    },\r\n                    10: {\r\n                        xp_multipliers: {\r\n                            all_skill: 1.05,\r\n                            \"Night vision\": 1.2,\r\n                        }\r\n                    },\r\n                    12: {\r\n                        xp_multipliers: {\r\n                            all: 1.05,\r\n                        },\r\n                        stats: {\r\n                            intuition: {multiplier: 1.1},\r\n                        }\r\n                    },\r\n                }\r\n    });\r\n\r\n    skills[\"Strength of mind\"] = new Skill({\r\n        skill_id: \"Strength of mind\", \r\n        names: {0: \"Strength of mind\"}, \r\n        description: \"Resist and reject the unnatural influence. Turn your psyche into an iron fortress.\",\r\n        category: \"Environmental\",\r\n        base_xp_cost: 120,\r\n        max_level: 40,\r\n        xp_scaling: 1.9,\r\n        get_effect_description: ()=> {\r\n            return `Reduces eldritch effects by ^${Math.round(100-100*get_total_skill_level(\"Strength of mind\")/skills[\"Strength of mind\"].max_level)/100}`;\r\n        },\r\n        milestones: {\r\n            1: {\r\n                xp_multipliers: {\r\n                    all_skill: 1.05,\r\n                }\r\n            },\r\n            2: {    \r\n                stats: {\r\n                    intuition: {flat: 1},\r\n                },\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                    \"Persistence\": 1.05,\r\n                }\r\n            },\r\n            3: {\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                }\r\n            },\r\n            5: {\r\n                xp_multipliers: {\r\n                    all_skill: 1.05,\r\n                }\r\n            },\r\n            7: {    \r\n                stats: {\r\n                    intuition: {flat: 1},\r\n                },\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                    \"Persistence\": 1.05,\r\n                }\r\n            },\r\n            8: {\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                }\r\n            },\r\n            10: {\r\n                xp_multipliers: {\r\n                    all: 1.05,\r\n                }\r\n            },\r\n            12: {    \r\n                stats: {\r\n                    intuition: {multiplier: 1.2},\r\n                },\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                    \"Persistence\": 1.05,\r\n                }\r\n            },\r\n        }\r\n    });\r\n\r\n    skills[\"Heat resistance\"] = new Skill({\r\n        skill_id: \"Heat resistance\",\r\n        names: {0: \"Heat resistance\"},\r\n        description: \"Ability to survive and function in high temperatures\",\r\n        base_xp_cost: 100,\r\n        max_level: 40,\r\n        category: \"Environmental\",\r\n        get_effect_description: () => {\r\n            return `Reduces penalty from hot locations`;\r\n        }\r\n    });\r\n    skills[\"Cold resistance\"] = new Skill({\r\n        skill_id: \"Cold resistance\",\r\n        names: {0: \"Cold resistance\"},\r\n        description: \"Ability to survive and function in low temperatures\",\r\n        base_xp_cost: 100,\r\n        max_level: 40,\r\n        category: \"Environmental\",\r\n        get_effect_description: () => {\r\n            return `Reduces penalty from cold locations`;\r\n        }\r\n    });\r\n\r\n    skills[\"Dazzle resistance\"] = new Skill({\r\n        skill_id: \"Dazzle resistance\",\r\n        names: {0: \"Dazzle resistance\"},\r\n        description: \"Don't look at the sun, it's bad for your eyes\",\r\n        base_xp_cost: 60,\r\n        max_level: 30,\r\n        category: \"Environmental\",\r\n        get_effect_description: ()=> {\r\n            return `Reduces hit and evasion penalty in super bright areas`;\r\n        },\r\n        max_level_bonus: 0.5\r\n    });\r\n})();\r\n\r\n//weapon skills\r\n(function(){\r\n    skills[\"Weapon mastery\"] = new Skill({skill_id: \"Weapon mastery\", \r\n                                    names: {0: \"Weapon proficiency\", 15: \"Weapon mastery\"}, \r\n                                    description: \"Knowledge of all weapons\",\r\n                                    category: \"Weapon\",\r\n                                    get_effect_description: ()=> {\r\n                                        return `Increases xp gains of all weapon skills of level lower than this, x1.1 per level of difference`;\r\n                                    },\r\n                                });\r\n    skills[\"Swords\"] = new Skill({skill_id: \"Swords\", \r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Swordsmanship\"}, \r\n                                category: \"Weapon\",\r\n                                description: \"The noble art of swordsmanship\", \r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealt with swords by ${Math.round(get_total_skill_coefficient({skill_id:\"Swords\",scaling_type:\"multiplicative\"})*1000)/1000}.\r\nMultiplies AP with swords by ${Math.round((get_total_skill_coefficient({skill_id:\"Swords\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            \"strength\": {flat: 1},\r\n                                            \"crit_rate\": {flat: 0.01},\r\n                                        },\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 1},\r\n                                            \"crit_multiplier\": {flat: 0.1}, \r\n                                        },\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 2},\r\n                                        }\r\n                                    },\r\n                                },\r\n                                max_level_coefficient: 8\r\n                            });\r\n\r\n    skills[\"Axes\"] = new Skill({skill_id: \"Axes\", \r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Axe combat\"}, \r\n                                category: \"Weapon\",\r\n                                description: \"Ability to fight with use of axes\", \r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealt with axes by ${Math.round(get_total_skill_coefficient({skill_id:\"Axes\",scaling_type:\"multiplicative\"})*1000)/1000}.\r\nMultiplies AP with axes by ${Math.round((get_total_skill_coefficient({skill_id:\"Axes\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            \"strength\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                            \"strength\": {flat: 1},\r\n                                        },\r\n\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                                \"strength\": {multiplier: 1.05},\r\n                                        },\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 2},\r\n                                        }\r\n                                    },\r\n                                },\r\n                                max_level_coefficient: 8});\r\n\r\n    skills[\"Spears\"] = new Skill({skill_id: \"Spears\", \r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Spearmanship\"}, \r\n                                category: \"Weapon\",\r\n                                description: \"The ability to fight with the most deadly weapon in the history\", \r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealt with spears by ${Math.round(get_total_skill_coefficient({skill_id:\"Spears\",scaling_type:\"multiplicative\"})*1000)/1000}.\r\nMultiplies AP with spears by ${Math.round((get_total_skill_coefficient({skill_id:\"Spears\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            \"strength\": {flat: 1},\r\n                                            \"crit_rate\": {flat: 0.01},\r\n                                        },\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            \"strength\": {flat: 1},\r\n                                            \"crit_multiplier\": {flat: 0.1}, \r\n                                        },\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 2},\r\n                                        }\r\n                                    },\r\n                                },\r\n                                max_level_coefficient: 8\r\n                            });\r\n\r\n    skills[\"Hammers\"] = new Skill({skill_id: \"Hammers\", \r\n                                        parent_skill: \"Weapon mastery\",\r\n                                        names: {0: \"Hammer combat\"}, \r\n                                        category: \"Weapon\",\r\n                                        description: \"Ability to fight with use of battle hammers. Why bother trying to cut someone, when you can just crack all their bones?\", \r\n                                        get_effect_description: ()=> {\r\n                                            return `Multiplies damage dealt with battle hammers by ${Math.round(get_total_skill_coefficient({skill_id:\"Hammers\",scaling_type:\"multiplicative\"})*1000)/1000}.\r\nMultiplies AP with hammers by ${Math.round((get_total_skill_coefficient({skill_id:\"Hammers\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                        },\r\n                                        milestones: {\r\n                                            1: {\r\n                                                stats: {\r\n                                                    \"strength\": {flat: 1},\r\n                                                }\r\n                                            },\r\n                                            3: {\r\n                                                stats: {\r\n                                                    \"strength\": {flat: 1},\r\n                                                }\r\n                                            },\r\n                                            5: {\r\n                                                stats: {\r\n                                                    \"strength\": {flat: 1},\r\n                                                    \"dexterity\": {flat: 1},\r\n                                                },\r\n                                            },\r\n                                            7: {\r\n                                                stats: {\r\n                                                    \"strength\": {flat: 1},\r\n                                                }\r\n                                            },\r\n                                            10: {\r\n                                                stats: {\r\n                                                    \"strength\": {flat: 1},\r\n                                                    \"dexterity\": {flat: 1}, \r\n                                                },\r\n                                            },\r\n                                            12: {\r\n                                                stats: {\r\n                                                    \"dexterity\": {flat: 2},\r\n                                                }\r\n                                            },\r\n                                        },\r\n                                        max_level_coefficient: 8\r\n                                    });\r\n\r\n    skills[\"Daggers\"] = new Skill({skill_id: \"Daggers\",\r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Dagger combat\"},\r\n                                category: \"Weapon\",\r\n                                description: \"The looked upon art of fighting (and stabbing) with daggers\",\r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealt with daggers by ${Math.round(get_total_skill_coefficient({skill_id:\"Daggers\",scaling_type:\"multiplicative\"})*1000)/1000}.\r\nMultiplies AP with daggers by ${Math.round((get_total_skill_coefficient({skill_id:\"Daggers\",scaling_type:\"multiplicative\"})**0.3333)*1000)/1000}`;\r\n                                },\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            \"agility\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            \"crit_multiplier\": {flat: 0.1},\r\n                                            \"crit_rate\": {flat: 0.01},\r\n                                        },\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 1},\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            \"crit_rate\": {flat: 0.02},\r\n                                            \"crit_multiplier\": {flat: 0.1}, \r\n                                        },\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"dexterity\": {flat: 2},\r\n                                        }\r\n                                    },\r\n                                },\r\n                                max_level_coefficient: 8\r\n                            });\r\n\r\n    skills[\"Wands\"] = new Skill({skill_id: \"Wands\", \r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Wand casting\"}, \r\n                                category: \"Weapon\",\r\n                                description: \"Ability to cast spells with magic wands, increases damage dealt\", \r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealt with wands by ${Math.round(get_total_skill_coefficient({skill_id:\"Wands\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                },\r\n                                max_level_coefficient: 8});\r\n\r\n    skills[\"Staffs\"] = new Skill({skill_id: \"Staffs\", \r\n                                parent_skill: \"Weapon mastery\",\r\n                                names: {0: \"Staff casting\"}, \r\n                                category: \"Weapon\",\r\n                                description: \"Ability to cast spells with magic staffs, increases damage dealt\", \r\n                                get_effect_description: ()=> {\r\n                                    return `Multiplies damage dealth with staffs by ${Math.round(get_total_skill_coefficient({skill_id:\"Staffs\",scaling_type:\"multiplicative\"})*1000)/1000}`;\r\n                                },\r\n                                max_level_coefficient: 8});\r\n})();\r\n\r\n//work related\r\n(function(){\r\n    skills[\"Farming\"] = new Skill({skill_id: \"Farming\", \r\n                                names: {0: \"Farming\"}, \r\n                                description: \"Even a simple action of plowing some fields, can be performed better with skills and experience\",\r\n                                base_xp_cost: 40,\r\n                                category: \"Activity\",\r\n                                max_level: 10,\r\n                                xp_scaling: 1.6,\r\n                                max_level_coefficient: 2,\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            max_stamina: {flat: 2},\r\n                                        },\r\n                                    },\r\n                                    2: {\r\n                                        stats: {\r\n                                            strength: {flat: 1}\r\n                                        },\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            dexterity: {flat: 1},\r\n                                            max_stamina: {flat: 2},\r\n                                        }\r\n                                    },\r\n                                    4: {\r\n                                        stats: {\r\n                                            strength: {flat: 1},\r\n                                            max_stamina: {flat: 2},\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            strength: {flat: 1},\r\n                                            max_stamina: {flat: 2},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Herbalism\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    6: {\r\n                                        stats: {\r\n                                            strength: {flat: 1},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            Weightlifting: 1.1,\r\n                                        }\r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            dexterity: {flat: 1},\r\n                                            max_stamina: {flat: 2},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Unarmed\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    8: {\r\n                                        stats: {\r\n                                            strength: {flat: 1},\r\n                                            max_stamina: {flat: 2},\r\n                                        }\r\n                                    },\r\n                                    9: {\r\n                                        stats: {\r\n                                            strength: {flat: 1},\r\n                                            dexterity: {flat: 1},\r\n                                        },\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            max_stamina: {flat: 4},\r\n                                            strength: {multiplier: 1.05},\r\n                                            dexterity: {multiplier: 1.05},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Unarmed\": 1.1,\r\n                                            \"Herbalism\": 1.1,\r\n                                        }\r\n                                    }\r\n                                }});\r\n})();\r\n\r\n//non-work activity related\r\n(function(){\r\n    skills[\"Sleeping\"] = new Skill({skill_id: \"Sleeping\",\r\n                                    names: {0: \"Sleeping\"}, \r\n                                    description: \"Good, regular sleep is the basis of getting stronger and helps your body heal.\",\r\n                                    base_xp_cost: 1000,\r\n                                    visibility_treshold: 300,\r\n                                    xp_scaling: 2,\r\n                                    category: \"Activity\",\r\n                                    max_level: 10,\r\n                                    max_level_coefficient: 2.5,    \r\n                                    milestones: {\r\n                                        2: {\r\n                                            stats: {\r\n                                                \"max_health\": {\r\n                                                    flat: 10,\r\n                                                    multiplier: 1.05,\r\n                                                }\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                all: 1.05,\r\n                                            }\r\n                                        },\r\n                                        4: {\r\n                                            stats: {\r\n                                                \"max_health\": {\r\n                                                    flat: 20,\r\n                                                    multiplier: 1.05,\r\n                                                }\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                all: 1.05,\r\n                                            },\r\n                                        },\r\n                                        5: {\r\n                                            unlocks: {\r\n                                                skills: [\r\n                                                    \"Meditation\"\r\n                                                ]\r\n                                            }\r\n                                        },\r\n                                        6: {\r\n                                            stats: {\r\n                                                \"max_health\": {\r\n                                                    flat: 30,\r\n                                                    multiplier: 1.05,\r\n                                                }\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                all: 1.05,\r\n                                                \"Meditation\": 1.1,\r\n                                            }\r\n                                        },\r\n                                        8: {\r\n                                            stats: {\r\n                                                \"max_health\": {\r\n                                                    flat: 40,\r\n                                                    multiplier: 1.05,\r\n                                                }\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                all: 1.05,\r\n                                            }\r\n                                        },\r\n                                        10: {\r\n                                            stats: {\r\n                                                \"max_health\": {\r\n                                                    flat: 50,\r\n                                                    multiplier: 1.1,\r\n                                                }\r\n                                            },\r\n                                            xp_multipliers: {\r\n                                                all: 1.1,\r\n                                                \"Meditation\": 1.1,\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });                         \r\n    skills[\"Meditation\"] = new Skill({skill_id: \"Meditation\",\r\n                                names: {0: \"Meditation\"}, \r\n                                description: \"Focus your mind\",\r\n                                base_xp_cost: 200,\r\n                                category: \"Activity\",\r\n                                max_level: 30, \r\n                                is_unlocked: false,\r\n                                visibility_treshold: 0,\r\n                                milestones: {\r\n                                    2: {\r\n                                        stats: {\r\n                                            \"intuition\": {flat: 1},\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            all: 1.05,\r\n                                            \"Presence sensing\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    4: {\r\n                                        stats: {\r\n                                            \"intuition\": {\r\n                                                flat: 1, \r\n                                                multiplier: 1.05\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            all: 1.05,\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        xp_multipliers: {\r\n                                            \"Sleeping\": 1.1,\r\n                                            \"Breathing\": 1.1,\r\n                                            \"Presence sensing\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    6: {\r\n                                        stats: {\r\n                                            \"intuition\": {\r\n                                                flat: 2,\r\n                                            }\r\n                                        },\r\n                                    },\r\n                                    8: {\r\n                                        stats: {\r\n                                            \"intuition\": {\r\n                                                multiplier: 1.05\r\n                                            },\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            all: 1.05,\r\n                                            \"Sleeping\": 1.1,\r\n                                            \"Breathing\": 1.1,\r\n                                            \"Presence sensing\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            \"intuition\": {\r\n                                                flat: 2,\r\n                                                multiplier: 1.05\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            all: 1.1,\r\n                                            \"Sleeping\": 1.1,\r\n                                            \"Breathing\": 1.1,\r\n                                            \"Presence sensing\": 1.1,\r\n                                        }\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            \"intuition\": {\r\n                                                flat: 2,\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            all: 1.05,\r\n                                            \"Presence sensing\": 1.1,\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });                            \r\n    skills[\"Running\"] = new Skill({skill_id: \"Running\",\r\n                                description: \"Great way to improve the efficiency of the body\",\r\n                                names: {0: \"Running\"},\r\n                                max_level: 50,\r\n                                category: \"Activity\",\r\n                                max_level_coefficient: 2,\r\n                                base_xp_cost: 50,\r\n                                milestones: {\r\n                                    1: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 1\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                    3: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 1\r\n                                            },\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Breathing\": 1.1,\r\n                                        }\r\n                                    },\r\n                                    5: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 1,\r\n                                            },\r\n                                            max_stamina: {\r\n                                                multiplier: 1.05,\r\n                                            }\r\n                                        },                                          \r\n                                    },\r\n                                    7: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 1,\r\n                                                multiplier: 1.05,\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Breathing\": 1.05,\r\n                                        }\r\n                                    },\r\n                                    10: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 1,\r\n                                                multiplier: 1.05,\r\n                                            },\r\n                                            max_stamina: {\r\n                                                multiplier: 1.05,\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Breathing\": 1.1,\r\n                                        }\r\n                                    },\r\n                                    12: {\r\n                                        stats: {\r\n                                            agility: {\r\n                                                flat: 2\r\n                                            },\r\n                                            max_stamina: {\r\n                                                flat: 5\r\n                                            }\r\n                                        },\r\n                                        xp_multipliers: {\r\n                                            \"Breathing\": 1.05,\r\n                                        }\r\n                                    }\r\n                                },\r\n                                get_effect_description: ()=> {\r\n                                    let value = get_total_skill_coefficient({skill_id:\"Running\",scaling_type:\"multiplicative\"})\r\n                                    return `Multiplies stamina efficiency by ${Math.round(value*100)/100}`;\r\n                                },\r\n                            });\r\n    skills[\"Weightlifting\"] = new Skill({skill_id: \"Weightlifting\",\r\n    description: \"No better way to get stronger than by lifting heavy things\",\r\n    names: {0: \"Weightlifting\"},\r\n    max_level: 50,\r\n    category: \"Activity\",\r\n    max_level_coefficient: 4,\r\n    base_xp_cost: 50,\r\n    milestones: {\r\n        1: {\r\n            stats: {\r\n            strength: {\r\n                flat: 1\r\n            },\r\n            },\r\n        },\r\n        3: {\r\n            stats: {\r\n            strength: {\r\n                flat: 1\r\n            },\r\n            },\r\n            xp_multipliers: {\r\n                \"Unarmed\": 1.05,\r\n            }\r\n        },\r\n        5: {\r\n            stats: {\r\n            strength: {\r\n                flat: 1,\r\n                multiplier: 1.05,\r\n            },\r\n            max_stamina: {\r\n                multiplier: 1.05,\r\n            }\r\n            },\r\n        },\r\n        7: {\r\n            stats: {\r\n                strength: {\r\n                    flat: 1\r\n                },\r\n            },\r\n            xp_multipliers: {\r\n                \"Unarmed\": 1.1,\r\n            }\r\n        },\r\n        10: {\r\n            stats: {\r\n                strength: {\r\n                flat: 1, \r\n                multiplier: 1.05\r\n            },\r\n            max_stamina: {\r\n                multiplier: 1.05,\r\n            }\r\n            },\r\n        },\r\n        12: {\r\n            stats: {\r\n                strength: {\r\n                    flat: 2\r\n                },\r\n                max_stamina: {\r\n                    flat: 5\r\n                }\r\n            }\r\n        }\r\n    },\r\n    get_effect_description: ()=> {\r\n      let value = get_total_skill_coefficient({skill_id:\"Weightlifting\",scaling_type:\"multiplicative\"})\r\n      return `Multiplies strength by ${Math.round(value*100)/100}`;\r\n    },\r\n    \r\n    });\r\n    skills[\"Equilibrium\"] = new Skill({skill_id: \"Equilibrium\",\r\n    description: \"Nothing will throw you off your balance (at least the physical one)\",\r\n    names: {0: \"Equilibrium\"},\r\n    category: \"Activity\",\r\n    max_level: 50,\r\n    max_level_coefficient: 4,\r\n    base_xp_cost: 50,\r\n    milestones: {\r\n        1: {\r\n            stats: {\r\n                agility: {flat: 1},\r\n            },\r\n        },\r\n        3: {\r\n            stats: {\r\n                intuition: {flat: 1},\r\n            }\r\n        },\r\n        5: {\r\n            stats: {\r\n                agility: {\r\n                    flat: 1,\r\n                    multiplier: 1.05,\r\n                },\r\n                strength: {flat: 1},\r\n                max_stamina: {multiplier: 1.05},\r\n            },\r\n            xp_multipliers: {\r\n                \"Unarmed\": 1.1,\r\n            }\r\n        },\r\n        7: {\r\n            stats: {\r\n                intuition: {flat: 1},\r\n            },\r\n        },\r\n        9: {\r\n            stats: {\r\n                strength: {flat: 1},\r\n            }\r\n        },\r\n        10: {\r\n            stats: {\r\n                agility: {flat: 1},\r\n                intuition: {multiplier: 1.05},\r\n                max_stamina: {multiplier: 1.05},\r\n            },\r\n        },\r\n        12: {\r\n            stats: {\r\n                agility: {flat: 1},\r\n                strength: {flat: 1},\r\n            }\r\n        }\r\n    },\r\n    get_effect_description: ()=> {\r\n      let value = get_total_skill_coefficient({skill_id:\"Equilibrium\",scaling_type:\"multiplicative\"});\r\n      return `Multiplies agility by ${Math.round(value*100)/100}`;\r\n    },\r\n    \r\n    });\r\n\r\n    skills[\"Climbing\"] = new Skill({skill_id: \"Climbing\",\r\n        description: \"Intense and slightly dangerous form of training that involves majority of your muscles\",\r\n        names: {0: \"Climbing\"},\r\n        max_level: 50,\r\n        category: \"Activity\",\r\n        max_level_coefficient: 2,\r\n        base_xp_cost: 50,\r\n        milestones: {\r\n            1: {\r\n                stats: {\r\n                    agility: {\r\n                        flat: 1\r\n                    },\r\n                },\r\n            },\r\n            3: {\r\n                stats: {\r\n                    strength: {\r\n                        flat: 1\r\n                    },\r\n                },\r\n            },\r\n            5: {\r\n                stats: {\r\n                    agility: {\r\n                        multiplier: 1.05,\r\n                    },\r\n                    max_stamina: {\r\n                        multiplier: 1.03,\r\n                    }\r\n                },\r\n            },\r\n            7: {\r\n                stats: {\r\n                    strength: {\r\n                        flat: 1\r\n                    },\r\n                },\r\n            },\r\n            10: {\r\n                stats: {\r\n                    strength: {\r\n                        multiplier: 1.05\r\n                    },\r\n                    max_stamina: {\r\n                        multiplier: 1.03,\r\n                    }\r\n                },\r\n            },\r\n            12: {\r\n                stats: {\r\n                    strength: {\r\n                        flat: 2\r\n                    },\r\n                    agility: {\r\n                        flat: 2\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        get_effect_description: ()=> {\r\n          let value = get_total_skill_coefficient({skill_id:\"Climbing\",scaling_type:\"multiplicative\"});\r\n\r\n          return `Multiplies strength, dexterity and agility by ${Math.round(value*100)/100}`;\r\n        },\r\n    });\r\n})();\r\n\r\n//resource gathering related\r\n(function(){\r\n    skills[\"Woodcutting\"] = new Skill({skill_id: \"Woodcutting\", \r\n        names: {0: \"Woodcutting\"}, \r\n        description: \"Get better with chopping the wood\",\r\n        category: \"Gathering\",\r\n        base_xp_cost: 10,\r\n        visibility_treshold: 4,\r\n        xp_scaling: 1.6,\r\n    });\r\n\r\n    skills[\"Mining\"] = new Skill({skill_id: \"Mining\",\r\n        names: {0: \"Mining\"}, \r\n        description: \"Get better with mining the ores\",\r\n        category: \"Gathering\",\r\n        base_xp_cost: 10,\r\n        visibility_treshold: 4,\r\n        xp_scaling: 1.6,\r\n    });\r\n\r\n    skills[\"Herbalism\"] = new Skill({skill_id: \"Herbalism\",\r\n        names: {0: \"Herbalism\"}, \r\n        description: \"Knowledge of useful plants and mushrooms\",\r\n        category: \"Gathering\",\r\n        base_xp_cost: 10,\r\n        visibility_treshold: 4,\r\n        xp_scaling: 1.6,\r\n    });\r\n\r\n    skills[\"Animal handling\"] = new Skill({\r\n        skill_id: \"Animal handling\",\r\n        names: {0: \"Animal handling\"}, \r\n        description: \"Knowledge and skills required to deal with a wide variety of animals\",\r\n        category: \"Gathering\",\r\n        base_xp_cost: 10,\r\n        visibility_treshold: 4,\r\n        xp_scaling: 1.6,\r\n    });\r\n})();\r\n\r\n//crafting skills\r\n(function(){\r\n    skills[\"Crafting\"] = new Skill({\r\n        skill_id: \"Crafting\", \r\n        names: {0: \"Crafting\"}, \r\n        description: \"Turn smaller pieces into one bigger thing\",\r\n        category: \"Crafting\",\r\n        base_xp_cost: 40,\r\n        xp_scaling: 1.5,\r\n        max_level: 60,\r\n        get_effect_description: () => {\r\n            return `Quality cap: ${get_crafting_quality_caps(\"Crafting\").components}% for comps, ${get_crafting_quality_caps(\"Crafting\").equipment}% for eq`;\r\n        },\r\n    });\r\n    skills[\"Smelting\"] = new Skill({\r\n        skill_id: \"Smelting\", \r\n        names: {0: \"Smelting\"}, \r\n        description: \"Turning raw ore into raw metal\",\r\n        category: \"Crafting\",\r\n        base_xp_cost: 40,\r\n        xp_scaling: 1.5,\r\n        max_level: 60,\r\n    });\r\n    skills[\"Forging\"] = new Skill({\r\n        skill_id: \"Forging\", \r\n        names: {0: \"Forging\"}, \r\n        description: \"Turning raw metal into something useful\",\r\n        category: \"Crafting\",\r\n        base_xp_cost: 40,\r\n        xp_scaling: 1.5,\r\n        max_level: 60,\r\n        get_effect_description: () => {\r\n            return `Quality cap: ${get_crafting_quality_caps(\"Forging\").components}% for components`;\r\n        },\r\n        milestones: {\r\n            10: {\r\n                unlocks: {\r\n                    recipes: [\r\n                        {category: \"smelting\", subcategory: \"items\", recipe_id: \"Steel ingot (inefficient)\"},\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    skills[\"Cooking\"] = new Skill({\r\n        skill_id: \"Cooking\", \r\n        names: {0: \"Cooking\"}, \r\n        description: \"Making the unedible edible\",\r\n        category: \"Crafting\",\r\n        base_xp_cost: 40,\r\n        xp_scaling: 1.5,\r\n        max_level: 60,\r\n    });\r\n    skills[\"Alchemy\"] = new Skill({\r\n        skill_id: \"Alchemy\", \r\n        names: {0: \"Alchemy\"}, \r\n        description: \"Extracting and enhancing useful properties of the ingredients\",\r\n        category: \"Crafting\",\r\n        base_xp_cost: 40,\r\n        xp_scaling: 1.5,\r\n        max_level: 60,\r\n    });\r\n})();\r\n\r\n//defensive skills\r\n(function(){\r\n    skills[\"Iron skin\"] = new Skill({\r\n        skill_id: \"Iron skin\",\r\n        category: \"Combat\",\r\n        names: {0: \"Tough skin\", 5: \"Wooden skin\", 10: \"Iron skin\"},\r\n        description: \"As it gets damaged, your skin regenerates to be tougher and tougher\",\r\n        base_xp_cost: 400,\r\n        xp_scaling: 1.9,\r\n        max_level: 30,\r\n        max_level_bonus: 30,\r\n        get_effect_description: ()=> {\r\n            return `Increases base defense by ${Math.round(get_total_level_bonus(\"Iron skin\"))}`;\r\n        },\r\n        milestones: {\r\n            3: {\r\n                stats: {\r\n                    max_health: {multiplier: 1.01},\r\n                }\r\n            },\r\n            5: {\r\n                stats: {\r\n                    max_health: {multiplier: 1.01},\r\n                }\r\n            },\r\n            7: {\r\n                stats: {\r\n                    max_health: {multiplier: 1.02},\r\n                }\r\n            },\r\n            10: {\r\n                stats: {\r\n                    max_health: {multiplier: 1.02},\r\n                }\r\n            },\r\n            12: {\r\n                stats: {\r\n                    max_health: {multiplier: 1.02},\r\n                }\r\n            }\r\n        }\r\n    }); \r\n})();\r\n\r\n//character skills and resistances\r\n(function(){\r\n    skills[\"Persistence\"] = new Skill({\r\n        skill_id: \"Persistence\",\r\n        names: {0: \"Persistence\"},\r\n        description: \"Do not give up, no matter what\",\r\n        base_xp_cost: 60,\r\n        category: \"Character\",\r\n        max_level: 30,\r\n        get_effect_description: ()=> {\r\n            return `Increases low stamina stat multiplier to x${(50+Math.round(get_total_level_bonus(\"Persistence\")*100000)/1000)/100} (originally x0.5)`;\r\n        },\r\n        milestones: {\r\n            2: {\r\n                stats: {\r\n                    max_stamina: {flat: 5},\r\n                },\r\n                xp_multipliers: {\r\n                    all_skill: 1.05,\r\n                }\r\n            },\r\n            4: {\r\n                stats: {\r\n                    max_stamina: {flat: 5},\r\n                },\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                }\r\n            },\r\n            6: {\r\n                stats: {\r\n                    max_stamina: {flat: 10},\r\n                },\r\n                xp_multipliers: {\r\n                    all: 1.05,\r\n                    \"Strength of mind\": 1.05,\r\n                }\r\n            },\r\n            8: {\r\n                stats: {\r\n                    max_stamina: {flat: 10},\r\n                },\r\n                xp_multipliers: {\r\n                    all: 1.05,\r\n                }\r\n            },\r\n            10: {\r\n                stats: {\r\n                    max_stamina: {multiplier: 1.1},\r\n                },\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                    \"Strength of mind\": 1.05,\r\n                }\r\n            },\r\n            12: {\r\n                stats: {\r\n                    max_stamina: {flat: 10},\r\n                },\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                }\r\n            },\r\n            14: {\r\n                stats: {\r\n                    stamina_efficiency: {multiplier: 1.1},\r\n                },\r\n                xp_multipliers: {\r\n                    all_skill: 1.05,\r\n                    \"Strength of mind\": 1.05,\r\n                }\r\n            }\r\n        },\r\n        max_level_bonus: 0.3\r\n    });\r\n    skills[\"Perception\"] = new Skill({\r\n        skill_id: \"Perception\", \r\n        names: {0: \"Perception\"}, \r\n        description: \"Better grasp on your senses allows you to notice small and hidden things, as well as to discern the true nature of what you obsere\",\r\n        \r\n        category: \"Character\",max_level_coefficient: 2,\r\n        get_effect_description: ()=> {\r\n            return ``;\r\n        },\r\n        milestones: {\r\n            //todo when skill is in use somewhere\r\n        }\r\n    }); \r\n    skills[\"Literacy\"] = new Skill({\r\n        skill_id: \"Literacy\", \r\n        names: {0: \"Literacy\"}, \r\n        description: \"Ability to read and understand written text\",\r\n        category: \"Character\",\r\n        base_xp_cost: 120,\r\n        max_level: 10,\r\n        xp_scaling: 2,\r\n        milestones: {\r\n            1: {\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                    \"Strength of mind\": 1.05,\r\n                }\r\n            },\r\n            2: {\r\n                xp_multipliers: {\r\n                    all_skill: 1.05,\r\n                }\r\n            },\r\n            3: {\r\n                xp_multipliers: {\r\n                    all: 1.05,\r\n                }\r\n            },\r\n            5: {\r\n                xp_multipliers: {\r\n                    hero: 1.05,\r\n                    \"Strength of mind\": 1.05,\r\n                }\r\n            }\r\n        }\r\n    }); \r\n    skills[\"Medicine\"] = new Skill({\r\n        skill_id: \"Medicine\",\r\n        names: {0: \"Medicine\"}, \r\n        description: \"Create better medicaments and improve your skill at treating wounds.\",\r\n        category: \"Character\",\r\n        max_level: 30,\r\n        visibility_treshold: 5,\r\n        max_level_coefficient: 2,\r\n        get_effect_description: ()=> {\r\n            let value = get_total_skill_coefficient({skill_id:\"Medicine\",scaling_type:\"multiplicative\"});\r\n            return `Multiplies additive effects of medicines by ${Math.round((value**2)*100)/100} and multiplicative effects by ${Math.round(value*100)/100}`;\r\n          },\r\n    });\r\n    skills[\"Breathing\"] = new Skill({\r\n        skill_id: \"Breathing\",\r\n        names: {0: \"Breathing\"},\r\n        description: \"Oxygen is the most important resource for improving the performance of your body. Learn how to take it in more efficiently.\",\r\n        flavour_text: \"You are now breathing manually\",\r\n        base_xp_cost: 300,\r\n        visibility_treshold: 290,\r\n        xp_scaling: 1.6,\r\n        category: \"Character\",\r\n        max_level_coefficient: 2,\r\n        max_level: 40,\r\n        milestones: {\r\n            3: {\r\n                xp_multipliers: {\r\n                    Running: 1.1,\r\n                    Meditation: 1.1,\r\n                },\r\n                stats: {\r\n                    attack_speed: {\r\n                        multiplier: 1.02,\r\n                    }\r\n                }\r\n            },\r\n            5: {\r\n                stats: {\r\n                    agility: {\r\n                        multiplier: 1.05,\r\n                    },\r\n                    stamina_efficiency: {\r\n                        multiplier: 1.05,\r\n                    }\r\n                },\r\n            },\r\n            7: {\r\n                xp_multipliers: {\r\n                    Running: 1.1,\r\n                    Meditation: 1.1,\r\n                }\r\n            },\r\n            10: {\r\n                stats: {\r\n                    strength: {\r\n                        multiplier: 1.05\r\n                    },\r\n                    max_stamina: {\r\n                        multiplier: 1.05,\r\n                    },\r\n                    attack_speed: {\r\n                        multiplier: 1.02,\r\n                    }\r\n                },\r\n            },\r\n            12: {\r\n                stats: {\r\n                    strength: {\r\n                        flat: 2\r\n                    },\r\n                    agility: {\r\n                        flat: 2\r\n                    }\r\n                },\r\n                xp_multipliers: {\r\n                    Running: 1.1,\r\n                    Meditation: 1.1,\r\n                }\r\n            }, \r\n            14: {\r\n                xp_multipliers: {\r\n                    Running: 1.1,\r\n                    Meditation: 1.1,\r\n                },\r\n                stats: {\r\n                    attack_speed: {\r\n                        multiplier: 1.03,\r\n                    },\r\n                    stamina_efficiency: {\r\n                        multiplier: 1.05,\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        get_effect_description: ()=> {\r\n            let value = get_total_skill_coefficient({skill_id:\"Breathing\",scaling_type:\"multiplicative\"});\r\n            return `Multiplies strength, agility and stamina by ${Math.round(value*100)/100}. Reduces thin air effects by ^${Math.round(100-100*get_total_skill_level(\"Breathing\")/skills[\"Breathing\"].max_level)/100}`;\r\n          },\r\n    });  \r\n})();\r\n\r\n//miscellaneous skills\r\n(function(){\r\n    skills[\"Haggling\"] = new Skill({\r\n        skill_id: \"Haggling\",\r\n        names: {0: \"Haggling\"},\r\n        description: \"The art of the deal\",\r\n        category: \"Character\",\r\n        base_xp_cost: 100,\r\n        max_level: 25,\r\n        get_effect_description: ()=> {\r\n            return `Lowers trader cost multiplier to ${Math.round((1 - get_total_level_bonus(\"Haggling\"))*100)}% of original value`;\r\n        },\r\n        max_level_bonus: 0.5,\r\n        milestones: {\r\n            2: {\r\n                stats: {\r\n                    intuition: {\r\n                        flat: 1\r\n                    },\r\n                },\r\n            },\r\n            3: {\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                },\r\n            },\r\n            5: {\r\n                stats: {\r\n                    intuition: {\r\n                        flat: 2\r\n                    },\r\n                },\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                    \"Persistence\": 1.05,\r\n                },\r\n            },\r\n            7: {\r\n                stats: {\r\n                    intuition: {\r\n                        flat: 2\r\n                    }\r\n                },\r\n            },\r\n            10: {\r\n                stats: {\r\n                    intuition: {\r\n                        flat: 2\r\n                    },\r\n                },\r\n                xp_multipliers: {\r\n                    \"Literacy\": 1.05,\r\n                    \"Persistence\": 1.05,\r\n                },\r\n                \r\n            }\r\n        }\r\n    });\r\n    \r\n})();\r\n\r\nexport {skills, skill_categories, get_unlocked_skill_rewards, get_next_skill_milestone, weapon_type_to_skill, which_skills_affect_skill};\r\n", "\"use strict\";\r\n\r\nimport { enemy_templates, Enemy } from \"./enemies.js\";\r\nimport { skills } from \"./skills.js\";\r\nimport { current_game_time } from \"./game_time.js\";\r\nimport { activities } from \"./activities.js\";\r\nimport { get_total_skill_level } from \"./character.js\";\r\nconst locations = {}; //contains all the created locations\r\nconst location_types = {};\r\n\r\nconst favourite_locations = {};\r\n\r\nclass Location {\r\n    constructor({\r\n                name, \r\n                id,\r\n                description, \r\n                connected_locations = [], \r\n                is_unlocked = true, \r\n                is_finished = false,\r\n                dialogues = [], \r\n                traders = [],\r\n                types = [], //{type, xp per tick}\r\n                housing = {},\r\n                light_level = \"normal\",\r\n                getDescription,\r\n                background_noises = [],\r\n                getBackgroundNoises,\r\n                crafting = null,\r\n                tags = {},\r\n            }) {\r\n        // always a safe zone\r\n\r\n        this.name = name; //needs to be the same as key in locations\r\n        this.id = id || name;\r\n        this.description = description;\r\n        this.getDescription = getDescription || function(){return description;}\r\n        this.background_noises = background_noises;\r\n        this.getBackgroundNoises = getBackgroundNoises || function(){return background_noises;}\r\n        this.connected_locations = connected_locations; \r\n        //[{location: Location, custom_text: text that replaces 'Go to [X]', time_needed: Number}]\r\n        this.is_unlocked = is_unlocked;\r\n        this.is_finished = is_finished; //for when it's in any way or form \"completed\" and player shouldn't be allowed back\r\n        this.dialogues = dialogues;\r\n        this.traders = traders;\r\n        this.activities = {};\r\n        this.actions = {};\r\n        this.types = types;\r\n        this.housing = housing;\r\n        /*\r\n            housing: {\r\n                is_unlocked: Boolean, \r\n                sleeping_xp_per_tick: Number,\r\n                text_to_start: String\r\n            }\r\n        */\r\n\r\n        this.light_level = light_level; //not really used for this type\r\n        this.crafting = crafting;\r\n        this.tags = tags;\r\n        this.tags[\"safe_zone\"] = true;\r\n        /* \r\n        crafting: {\r\n            is_unlocked: Boolean, \r\n            use_text: String, \r\n            tiers: {\r\n                crafting: Number,\r\n                forging: Number,\r\n                smelting: Number,\r\n                cooking: Number,\r\n                alchemy: Number,\r\n            }\r\n        },\r\n         */\r\n    }\r\n}\r\n\r\nclass Combat_zone {\r\n    constructor({name, \r\n                id,\r\n                 description, \r\n                 getDescription,\r\n                 is_unlocked = true, \r\n                 is_finished = false,\r\n                 types = [], //{type, xp_gain}\r\n                 enemy_groups_list = [],\r\n                 enemies_list = [], \r\n                 enemy_group_size = [1,1],\r\n                 enemy_count = 30,\r\n                 enemy_stat_variation = 0,\r\n                 parent_location, \r\n                 leave_text,\r\n                 first_reward = {},\r\n                 repeatable_reward = {},\r\n                 rewards_with_clear_requirement = [],\r\n                 otherUnlocks,\r\n                 unlock_text,\r\n                 is_challenge = false,\r\n                 tags = {},\r\n                }) {\r\n\r\n        this.name = name;\r\n        this.id = id || name;\r\n        this.unlock_text = unlock_text;\r\n        this.description = description;\r\n        this.getDescription = getDescription || function(){return description;}\r\n        this.otherUnlocks = otherUnlocks || function() {return;} //try not to use it if possible\r\n        this.is_unlocked = is_unlocked;\r\n        this.is_finished = is_finished;\r\n        this.types = types; //special properties of the location, e.g. \"narrow\" or \"dark\"\r\n        this.enemy_groups_list = enemy_groups_list; //predefined enemy teams, names only\r\n        this.enemies_list = enemies_list; //possible enemies (to be used if there's no enemy_groups_list), names only\r\n        this.enemy_group_size = enemy_group_size; // [min, max], used only if enemy_groups_list is not provided\r\n        if(!this.enemy_groups_list){\r\n            if(this.enemy_group_size[0] < 1) {\r\n                this.enemy_group_size[0] = 1;\r\n                console.error(`Minimum enemy group size in zone \"${this.name}\" is set to unallowed value of ${this.enemy_group_size[0]} and was corrected to lowest value possible of 1`);\r\n            }\r\n            if(this.enemy_group_size[0] > 8) {\r\n                this.enemy_group_size[0] = 8;\r\n                console.error(`Minimum enemy group size in zone \"${this.name}\" is set to unallowed value of ${this.enemy_group_size[0]} and was corrected to highest value possible of 8`);\r\n            }\r\n            if(this.enemy_group_size[1] < 1) {\r\n                this.enemy_group_size[1] = 1;\r\n                console.error(`Maximum enemy group size in zone \"${this.name}\" is set to unallowed value of ${this.enemy_group_size[1]} and was corrected to lowest value possible of 1`);\r\n            }\r\n            if(this.enemy_group_size[1] > 8) {\r\n                this.enemy_group_size[1] = 8;\r\n                console.error(`Maximum enemy group size in zone \"${this.name}\" is set to unallowed value of ${this.enemy_group_size[1]} and was corrected to highest value possible of 8`);\r\n            }\r\n        }\r\n        this.enemy_count = enemy_count; //how many enemy groups need to be killed for the clearing reward\r\n\r\n        if(this.enemy_groups_list.length == 0 && this.enemies_list.length == 0 ) {\r\n            throw new Error(`No enemies provided for zone \"${this.name}\"`);\r\n        }\r\n\r\n        this.enemy_groups_killed = 0; //killcount for clearing\r\n\r\n        this.enemy_stat_variation = enemy_stat_variation; // e.g. 0.1 means each stat can go 10% up/down from base value; random for each enemy in group\r\n        if(this.enemy_stat_variation < 0) {\r\n            this.enemy_stat_variation = 0;\r\n            console.error(`Stat variation for enemies in zone \"${this.name}\" is set to unallowed value and was corrected to a default 0`);\r\n        }\r\n\r\n        this.parent_location = parent_location;\r\n        if(!locations[this.parent_location.id]) {\r\n            throw new Error(`Couldn't add parent location \"${this.parent_location.name}\" to zone \"${this.name}\"`)\r\n        }\r\n\r\n        this.leave_text = leave_text; //text on option to leave\r\n        this.first_reward = first_reward; //reward for first clear\r\n        this.repeatable_reward = repeatable_reward; //reward for each clear, including first; all unlocks should be in this, just in case\r\n        this.rewards_with_clear_requirement = rewards_with_clear_requirement; //rewards that are only given on N-th clear\r\n\r\n        this.is_challenge = is_challenge;\r\n        //challenges can be completed only once \r\n\r\n        //skills and their xp gain on every tick, based on location types;\r\n        this.gained_skills = this.types\r\n            ?.map(type => {return {skill: skills[location_types[type.type].stages[type.stage || 1].related_skill], xp: type.xp_gain}})\r\n            .filter(skill => skill.skill);\r\n       \r\n        const temp_types = this.types.map(type => type.type);\r\n        if(temp_types.includes(\"bright\")) {\r\n            this.light_level = \"bright\";\r\n        }\r\n        else if(temp_types.includes(\"dark\")) {\r\n            this.light_level = \"dark\";\r\n        } else {\r\n            this.light_level = \"normal\";\r\n        }\r\n\r\n        this.tags = tags;\r\n        this.tags[\"Combat zone\"] = true;\r\n    }\r\n\r\n    get_next_enemies() {\r\n\r\n        const enemies = [];\r\n        let enemy_group = [];\r\n\r\n        if(this.enemy_groups_list.length > 0) { // PREDEFINED GROUPS EXIST\r\n\r\n            const index = Math.floor(Math.random() * this.enemy_groups_list.length);\r\n            enemy_group = this.enemy_groups_list[index]; //names\r\n\r\n        } else {  // PREDEFINED GROUPS DON'T EXIST\r\n\r\n            const group_size = this.enemy_group_size[0] + Math.floor(Math.random() * (this.enemy_group_size[1] - this.enemy_group_size[0]));\r\n            for(let i = 0; i < group_size; i++) {\r\n                enemy_group.push(this.enemies_list[Math.floor(Math.random() * this.enemies_list.length)]);\r\n            }\r\n        }\r\n \r\n        for(let i = 0; i < enemy_group.length; i++) {\r\n            const enemy = enemy_templates[enemy_group[i]];\r\n            let newEnemy;\r\n            if(this.enemy_stat_variation != 0) {\r\n\r\n                const variation = Math.random() * this.enemy_stat_variation;\r\n\r\n                const base = 1 + variation;\r\n                const vary = 2 * variation;\r\n                newEnemy = new Enemy({\r\n                                        name: enemy.name, \r\n                                        description: enemy.description, \r\n                                        xp_value: enemy.xp_value,\r\n                                        stats: {\r\n                                            health: Math.round(enemy.stats.health * (base - Math.random() * vary)),\r\n                                            attack: Math.round(enemy.stats.attack * (base - Math.random() * vary)),\r\n                                            agility: Math.round(enemy.stats.agility * (base - Math.random() * vary)),\r\n                                            dexterity: Math.round(enemy.stats.dexterity * (base - Math.random() * vary)),\r\n                                            magic: Math.round(enemy.stats.magic * (base - Math.random() * vary)),\r\n                                            intuition: Math.round(enemy.stats.intuition * (base - Math.random() * vary)),\r\n                                            attack_speed: Math.round(enemy.stats.attack_speed * (base - Math.random() * vary) * 100) / 100,\r\n                                            attack_count: Math.round((enemy.stats.attack_count || 1) * (base - Math.random() * vary)),\r\n                                            defense: Math.round(enemy.stats.defense * (base - Math.random() * vary))\r\n                                        },\r\n                                        loot_list: enemy.loot_list,\r\n                                        add_to_bestiary: enemy.add_to_bestiary,\r\n                                        size: enemy.size,\r\n                                    });\r\n\r\n            } else {\r\n                newEnemy = new Enemy({name: enemy.name, \r\n                    description: enemy.description, \r\n                    xp_value: enemy.xp_value,\r\n                    stats: {\r\n                        health: enemy.stats.health,\r\n                        attack: enemy.stats.attack,\r\n                        agility: enemy.stats.agility,\r\n                        dexterity: enemy.stats.dexterity,\r\n                        magic: enemy.stats.magic,\r\n                        intuition: enemy.stats.intuition,\r\n                        attack_speed: enemy.stats.attack_speed,\r\n                        attack_count: enemy.stats.attack_count || 1,\r\n                        defense: enemy.stats.defense\r\n                    },\r\n                    loot_list: enemy.loot_list,\r\n                    add_to_bestiary: enemy.add_to_bestiary,\r\n                    size: enemy.size\r\n                });\r\n            }\r\n            newEnemy.is_alive = true;\r\n            enemies.push(newEnemy); \r\n        }\r\n        return enemies;\r\n    }\r\n\r\n    //calculates total penalty with and without hero skills\r\n    //launches on every combat action\r\n    get_total_effect() {\r\n        const effects = {multipliers: {}, flats: {}};\r\n        const hero_effects = {multipliers: {}, flats: {}};\r\n        \r\n        //iterate over types of location\r\n        for(let i = 0; i < this.types.length; i++) {\r\n            const type = location_types[this.types[i].type].stages[this.types[i].stage];\r\n\r\n            if(!type.related_skill || !type.effects) { \r\n                continue; \r\n            }\r\n\r\n            //iterate over effects each type has \r\n\r\n            Object.keys(type.effects).forEach(stat => { \r\n                if(type.effects[stat].multiplier) {\r\n                    effects.multipliers[stat] = (effects.multipliers[stat] || 1) * type.effects[stat].multiplier;\r\n                \r\n                    hero_effects.multipliers[stat] = (hero_effects.multipliers[stat] || 1) * get_location_type_penalty(this.types[i].type, this.types[i].stage, stat, \"multiplier\");\r\n                }\r\n\r\n                if(type.effects[stat].flat) {\r\n                    effects.flats[stat] = (effects.flats[stat] || 0) + type.effects[stat].flat;\r\n                \r\n                    hero_effects.flats[stat] = (hero_effects.flats[stat] || 0) + get_location_type_penalty(this.types[i].type, this.types[i].stage, stat, \"flat\");\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        return {base_penalty: effects, hero_penalty: hero_effects};\r\n    }\r\n}\r\n\r\nclass Challenge_zone extends Combat_zone {\r\n    constructor({name, \r\n        description, \r\n        getDescription,\r\n        is_unlocked = true, \r\n        types = [], //{type, xp_gain}\r\n        enemy_groups_list = [],\r\n        enemies_list = [], \r\n        enemy_group_size = [1,1],\r\n        enemy_count = 30,\r\n        parent_location, \r\n        leave_text,\r\n        first_reward = {},\r\n        repeatable_reward = {},\r\n        otherUnlocks,\r\n        is_finished,\r\n        unlock_text,\r\n       }) \r\n    {\r\n        super(\r\n            {   \r\n                name, \r\n                description, \r\n                getDescription, \r\n                is_unlocked, \r\n                types, \r\n                enemy_groups_list, \r\n                enemies_list, \r\n                enemy_group_size, \r\n                enemy_count, \r\n                enemy_stat_variation: 0, \r\n                parent_location,\r\n                leave_text,\r\n                first_reward,\r\n                repeatable_reward,\r\n                is_challenge: true,\r\n                otherUnlocks,\r\n                is_finished,\r\n                unlock_text\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nclass LocationActivity{\r\n    constructor({activity_name, \r\n                 starting_text, \r\n                 get_payment = ()=>{return 1},\r\n                 is_unlocked = true, \r\n                 working_period = 60,\r\n                 infinite = false,\r\n                 availability_time,\r\n                 skill_xp_per_tick = 1,\r\n                 unlock_text,\r\n                 gained_resources,\r\n                 require_tool = false,\r\n                })\r\n    {\r\n        this.activity_name = activity_name; //name of activity from activities.js\r\n        this.starting_text = starting_text; //text displayed on button to start action\r\n\r\n        this.get_payment = get_payment;\r\n        this.is_unlocked = is_unlocked;\r\n        this.unlock_text = unlock_text;\r\n        this.working_period = working_period; //if exists -> time that needs to be worked to earn anything; only for jobs\r\n        this.infinite = infinite; //if true -> can be done 24/7, otherwise requires availability time\r\n        if(this.infinite && availability_time) {\r\n            console.error(\"Activity is set to be available all the time, so availability_time value will be ignored!\");\r\n        }\r\n        if(!this.infinite && !availability_time) {\r\n            throw new Error(\"LocationActivities that are not infinitely available, require a specified time of availability!\");\r\n        }\r\n        this.availability_time = availability_time; //if not infinite -> hours between which it's available\r\n        \r\n        this.skill_xp_per_tick = skill_xp_per_tick; //skill xp gained per game tick (default -> 1 in-game minute)\r\n\r\n        this.require_tool = require_tool; //if false, can be started without tool equipped\r\n\r\n        this.gained_resources = gained_resources; \r\n        //{scales_with_skill: boolean, resource: [{name, ammount: [[min,max], [min,max]], chance: [min,max]}], time_period: [min,max], skill_required: [min_efficiency, max_efficiency]}\r\n        //every 2-value array is oriented [starting_value, value_with_required_skill_level], except for subarrays of ammount (which are for randomizing gained item count) and for skill_required\r\n        //                                                                                   (ammount array itself follows the mentioned orientation)\r\n        //value start scaling after reaching min_efficiency skill lvl, before that they are just all at min\r\n        //skill required refers to level of every skill\r\n        //if scales_with_skill is false, scalings will be ignored and first value will be used\r\n        }\r\n\r\n    getActivityEfficiency = function() {\r\n        let skill_modifier = 1;\r\n        if(this.gained_resources.scales_with_skill){\r\n            let skill_level_sum = 0;\r\n            for(let i = 0; i < activities[this.activity_name].base_skills_names?.length; i++) {\r\n                skill_level_sum += Math.min(\r\n                    this.gained_resources.skill_required[1]-this.gained_resources.skill_required[0]+1, Math.max(0,get_total_skill_level(activities[this.activity_name].base_skills_names[i])-this.gained_resources.skill_required[0]+1)\r\n                )/(this.gained_resources.skill_required[1]-this.gained_resources.skill_required[0]+1);\r\n            }\r\n            skill_modifier = (skill_level_sum/(activities[this.activity_name].base_skills_names?.length || 1));\r\n        }\r\n        const gathering_time_needed = Math.floor(this.gained_resources.time_period[0]*(this.gained_resources.time_period[1]/this.gained_resources.time_period[0])**skill_modifier);\r\n\r\n        const gained_resources = [];\r\n\r\n        for(let i = 0; i < this.gained_resources.resources.length; i++) {\r\n\r\n            const chance = this.gained_resources.resources[i].chance[0]*(this.gained_resources.resources[i].chance[1]/this.gained_resources.resources[i].chance[0])**skill_modifier;\r\n            const min = Math.round(this.gained_resources.resources[i].ammount[0][0]*(this.gained_resources.resources[i].ammount[1][0]/this.gained_resources.resources[i].ammount[0][0])**skill_modifier);\r\n            const max = Math.round(this.gained_resources.resources[i].ammount[0][1]*(this.gained_resources.resources[i].ammount[1][1]/this.gained_resources.resources[i].ammount[0][1])**skill_modifier);\r\n            gained_resources.push({name: this.gained_resources.resources[i].name, count: [min,max], chance: chance});\r\n        }\r\n\r\n        return {gathering_time_needed, gained_resources};\r\n    }\r\n}\r\n\r\nclass LocationAction{\r\n    /**\r\n     * \r\n     * @param {Object} data\r\n     * @param {Object} data.conditions [{stats, skills, [items_by_id: {item_id: {count, remove?}}], money: {number, remove?}}]\r\n     */\r\n    constructor({\r\n        starting_text,\r\n        action_id,\r\n        action_name,\r\n        description,\r\n        action_text,\r\n        success_text,\r\n        failure_texts = {},\r\n        required = {},\r\n        conditions = [],\r\n        rewards = {},\r\n        attempt_duration = 0,\r\n        success_chances = [1,1],\r\n        is_unlocked = false,\r\n        repeatable = false,\r\n        check_conditions_on_finish = true,\r\n    }) {\r\n        this.starting_text = starting_text; //text on the button to start\r\n        this.action_name = action_name || starting_text;\r\n        this.action_id = action_id;\r\n        this.description = description; //description on hover\r\n        this.action_text = action_text; //text displayed during action animation\r\n        this.failure_texts = failure_texts; //text displayed on failure\r\n        if(!this.failure_texts.conditional_loss) {\r\n            this.failure_texts.conditional_loss = [];\r\n        }\r\n        if(!this.failure_texts.random_loss) {\r\n            this.failure_texts.random_loss = [];\r\n        }\r\n        if(!this.failure_texts.unable_to_begin) {\r\n            this.failure_texts.unable_to_begin = [];\r\n        }\r\n        /*  conditional_loss - conditions not met\r\n            random_loss - conditions (at least 1st part) were met, but didn't roll high enough on success chance\r\n        */\r\n        this.success_text = success_text; //text displayed on success\r\n                                          //if action is supposed to be \"impossible\" for narrative purposes, just make it finish without unlocks and with text that says it failed\r\n        \r\n        this.required = required; //things needed to be able to make an attempt\r\n        //{stats, skills, items_by_id: {'item_id': {count, remove_on_success?, remove_on_fail?}}, money: {Number, remove_on_success?, remove_on_fail?}}\r\n        if(conditions.length > 2) {\r\n            throw new Error('LocationAction cannot have more than 2 sets of conditions!');\r\n        }\r\n        this.conditions = conditions; \r\n        //things needed to succeed\r\n        //either single set of values or two sets, one for minimum chance provided and one for maximum\r\n        //two-set approach does not apply to items, so it only checks them for conditions[0]\r\n        //if applicable, items get removed both on failure and or success - if action requires them, it's better to have guaranteed success\r\n        /* \r\n            {\r\n                money: {\r\n                    number: Number, //how much money to require\r\n                    remove: Boolean //if should be removed from inventory (false -> its kept)\r\n                }\r\n                stats: [\r\n                    \"stat_id\": Number //required stat\r\n                ],\r\n\r\n                skills: [\r\n                    \"skill_id\": Number //required level\r\n                ],\r\n                items_by_id: \r\n                [\r\n                    {\r\n                        \"item_id\": {\r\n                            count: Number,\r\n                            remove: Boolean\r\n                    }\r\n                ]\r\n            }\r\n        */\r\n        this.check_conditions_on_finish = check_conditions_on_finish; //means an action with duration can be attempted even if conditions are not met\r\n        this.rewards = rewards; //{unlocks, money, items,move_to}?\r\n        this.attempt_duration = attempt_duration; //0 means instantaneous, otherwise there's a progress bar\r\n        this.success_chances = success_chances; \r\n        //chances to succeed; to guarantee that multiple attempts will be needed, just make a few consecutive actions with same text\r\n        this.is_unlocked = is_unlocked;\r\n        this.is_finished = false; //really same as is_locked but with a more fitting name\r\n        this.repeatable = repeatable;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number} the degree at which conditions are met. 0 means failure (some requirement is not met at all),\r\n     * everything else is for calculating final success chance (based on minimal and maximal chance, with 1 meaning that it's just the maximal).\r\n     * Items do not get fuzzy treatment, they are either all met or not.\r\n     */\r\n    get_conditions_status(character) {\r\n        return this.process_conditions(this.conditions, character);\r\n        \r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean} if start conditions are met\r\n     */\r\n    can_be_started(character) {\r\n        return this.process_conditions([this.required], character);\r\n    }\r\n\r\n    /**\r\n     * Analyzes passed conditions, returns their status (0 or 1 if 1-length array, fuzzier value if 2-length array)\r\n     * @param {*} character \r\n     * @param {*} condition \r\n     */\r\n    process_conditions(conditions, character) {\r\n        let met = 1;\r\n\r\n        if(conditions.length == 0) {\r\n            return 1;\r\n        }\r\n\r\n        //check money\r\n        if(conditions[0].money && character.money < conditions[0].money) {\r\n            met = 0;\r\n            return met;\r\n        } else if(conditions[1]?.money && conditions[1].money > conditions[0].money && character.money < conditions[1].money) {\r\n            met *= (character.money - conditions[0].money)/(conditions[1].money - conditions[0].money);\r\n        }\r\n\r\n        if(!met) {\r\n            return met;\r\n        }\r\n        //check skills\r\n        if(conditions[0].skills) {\r\n            Object.keys(conditions[0].skills).forEach(skill_id => {\r\n                if(get_total_skill_level(skill_id) < conditions[0].skills[skill_id]) {\r\n                    met = 0;\r\n                } else if(conditions[1]?.skills && conditions[1].skills[skill_id] > conditions[0].skills[skill_id] && get_total_skill_level(skill_id) < conditions[1].skills[skill_id]) {\r\n                    met *= (get_total_skill_level(skill_id) - conditions[0].skills[skill_id])/(conditions[1].skills[skill_id] - conditions[0].skills[skill_id]);\r\n                }\r\n            });\r\n        }\r\n\r\n        if(!met) {\r\n            return met;\r\n        }\r\n        //check items\r\n        if(conditions[0].items_by_id) {\r\n            Object.keys(conditions[0].items_by_id).forEach(item_id => {\r\n                let found = false;\r\n                //iterate through inventory, set found to true if id is present and count is enough\r\n                Object.keys(character.inventory).forEach(item_key => {\r\n                    if(found) {\r\n                        return;\r\n                    }\r\n                    \r\n                    const {id} = JSON.parse(item_key);\r\n                    if(id === item_id && character.inventory[item_key].count >= conditions[0].items_by_id[item_id].count) {\r\n                        found = true;\r\n                    }\r\n                });\r\n\r\n                if(!found) {\r\n                    met = 0;\r\n                }\r\n            });\r\n        }\r\n        if(!met) {\r\n            return met;\r\n        }\r\n        //checks stats\r\n        if(conditions[0].stats) {\r\n            Object.keys(conditions[0].stats).forEach(stat_key => {\r\n                if(character.stats.full[stat_key] < conditions[0].stats[stat_key]) {\r\n                    met = 0;\r\n                } else if(conditions[1]?.stats && conditions[1].stats[stat_key] > conditions[0].stats[stat_key] && character.stats.full[stat_key] < conditions[1].stats[stat_key]) {\r\n                    met *= (character.stats.full[stat_key] - conditions[0].stats[stat_key])/(conditions[1].stats[stat_key] - conditions[0].stats[stat_key]);\r\n                }\r\n            });\r\n        }\r\n\r\n        return met;\r\n    }\r\n}\r\n\r\nclass LocationType{\r\n    constructor({name, related_skill, stages = {}}) {\r\n        this.name = name;\r\n\r\n        if(related_skill) {\r\n            if(!skills[related_skill]) {\r\n                throw new Error(`No such skill as \"${related_skill}\"`);\r\n            }\r\n            else { \r\n                this.related_skill = related_skill; //one per each; skill xp defined in location/combat_zone\r\n            }\r\n        }\r\n        this.stages = stages; //up to 3\r\n        /* \r\n        >number<: {\r\n            description,\r\n            related_skill,\r\n            effects\r\n        }\r\n\r\n        */\r\n    }\r\n}\r\n\r\nfunction get_location_type_penalty(type, stage, stat, category) {\r\n    \r\n    const skill = skills[location_types[type].stages[stage].related_skill];\r\n\r\n    //maybe give all stages a range of skill lvls where they start scaling and where they get fully nullified?\r\n\r\n    if(category === \"multiplier\") {\r\n        const base = location_types[type].stages[stage].effects[stat].multiplier;\r\n    \r\n        return base**(1- get_total_skill_level(skill.skill_id)/skill.max_level);\r\n    } else if(category === \"flat\") {\r\n        const base = location_types[type].stages[stage].effects[stat].flat;\r\n\r\n        return base*(1-get_total_skill_level(skill.skill_id)/skill.max_level)**0.66667;\r\n    } else {\r\n        throw new Error(`Unsupported category of stat effects \"${category}\", should be either \"flat\" or \"multiplier\"!`);\r\n    }\r\n    \r\n}\r\n\r\n//create location types\r\n(function(){ \r\n    location_types[\"bright\"] = new LocationType({\r\n        name: \"bright\",\r\n        stages: {\r\n            1: {\r\n                description: \"A place that's always lit, no matter the time of the day\",\r\n            },\r\n            2: {\r\n                description: \"An extremely bright place, excessive light makes it hard to keep eyes open\",\r\n                related_skill: \"Dazzle resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.5},\r\n                    evasion_points: {multiplier: 0.5},\r\n                }\r\n            },\r\n            3: {\r\n                description: \"A place with so much light that an average person would go blind in an instant\",\r\n                related_skill: \"Dazzle resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.1},\r\n                    evasion_points: {multiplier: 0.1},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"dark\"] = new LocationType({\r\n        name: \"dark\",\r\n        stages: {\r\n            1: {\r\n                description: \"It's dark here, comparable to a bright night\",\r\n                related_skill: \"Night vision\",\r\n                //no effects here, since in this case they are provided via the overall \"night\" penalty\r\n            },\r\n            2: {\r\n                description: \"An extremely dark place, darker than most of the nights\",\r\n                related_skill: \"Night vision\",\r\n                effects: {\r\n                    //they dont need to be drastic since they apply on top of 'night' penalty\r\n                    attack_points: {multiplier: 0.8},\r\n                    evasion_points: {multiplier: 0.8},\r\n                }\r\n            },\r\n            3: {\r\n                description: \"Pure darkness with not even a tiniest flicker of light\",\r\n                related_skill: \"Presence sensing\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.15},\r\n                    evasion_points: {multiplier: 0.15},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"narrow\"] = new LocationType({\r\n        name: \"narrow\",\r\n        stages: {\r\n            1: {\r\n                description: \"A narrow area where there's not much place for maneuvering\",\r\n                related_skill: \"Tight maneuvers\",\r\n                effects: {\r\n                    evasion_points: {multiplier: 0.5},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"A very tight and narrow area where there's not much place for maneuvering\",\r\n                related_skill: \"Tight maneuvers\",\r\n                effects: {\r\n                    evasion_points: {multiplier: 0.333},\r\n                }        \r\n            }\r\n        }\r\n    });\r\n    location_types[\"open\"] = new LocationType({\r\n        name: \"open\",\r\n        stages: {\r\n            1: {\r\n                description: \"A completely open area where attacks can come from any direction\",\r\n                related_skill: \"Spatial awareness\",\r\n                effects: {\r\n                    evasion_points: {multiplier:  0.75},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"An area that's completely open and simultanously obstructs your view, making it hard to predict where an attack will come from\",\r\n                related_skill: \"Spatial awareness\",\r\n                effects: {\r\n                    evasion_points: {multiplier: 0.5},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"hot\"] = new LocationType({\r\n        name: \"hot\",\r\n        stages: {\r\n            1: {\r\n                description: \"High temperature makes it hard to breath\",\r\n                related_skill: \"Heat resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.5},\r\n                    evasion_points: {multiplier: 0.5},\r\n                    stamina: {multiplier: 0.8},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"It's so hot that just being here is painful\",\r\n                related_skill: \"Heat resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.3},\r\n                    evasion_points: {multiplier: 0.3},\r\n                    stamina: {multiplier: 0.5},\r\n                }\r\n            },\r\n            3: {\r\n                description: \"Temperature so high that wood ignites by itself\",\r\n                related_skill: \"Heat resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.1},\r\n                    evasion_points: {multiplier: 0.1},\r\n                    stamina: {multiplier: 0.3},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"cold\"] = new LocationType({\r\n        name: \"cold\",\r\n        stages: {\r\n            1: {\r\n                description: \"Cold makes your energy seep out...\",\r\n                related_skill: \"Cold resistance\",\r\n                effects: {\r\n                    stamina: {multiplier: 0.5},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"So cold...\",\r\n                related_skill: \"Cold resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.7},\r\n                    evasion_points: {multiplier: 0.7},\r\n                    stamina: {multiplier: 0.2},\r\n                }\r\n            },\r\n            3: {\r\n                description: \"This place is so cold, lesser beings would freeze in less than a minute...\",\r\n                related_skill: \"Cold resistance\",\r\n                effects: {\r\n                    attack_points: {multiplier: 0.5},\r\n                    evasion_points: {multiplier: 0.5},\r\n                    stamina: {multiplier: 0.1},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"thin air\"] = new LocationType({\r\n        name: \"thin air\",\r\n        stages: {\r\n            1: {\r\n                description: \"Place with thinner air, which negatively impacts your body\",\r\n                related_skill: \"Breathing\",\r\n                effects: {\r\n                    stamina_efficiency: {multiplier: 0.5},\r\n                    agility: {multiplier: 0.8},\r\n                    strength: {multiplier: 0.8},\r\n                    dexterity: {multiplier: 0.8},\r\n                    intuition: {multiplier: 0.8},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"Place with very thin air, heavily affecting your body\",\r\n                related_skill: \"Breathing\",\r\n                effects: {\r\n                    stamina_efficiency: {multiplier: 0.1},\r\n                    agility: {multiplier: 0.5},\r\n                    strength: {multiplier: 0.5},\r\n                    dexterity: {multiplier: 0.5},\r\n                    intuition: {multiplier: 0.5},\r\n                }\r\n            }\r\n        }\r\n    });\r\n    location_types[\"eldritch\"] = new LocationType({\r\n        name: \"eldritch\",\r\n        stages: {\r\n            1: {\r\n                description: \"This place brings a strong sense of unease\",\r\n                related_skill: \"Strength of mind\",\r\n                effects: {\r\n                    agility: {multiplier: 0.8},\r\n                    dexterity: {multiplier: 0.8},\r\n                    intuition: {multiplier: 0.5},\r\n                    stamina_efficiency: {multiplier: 0.75},\r\n                    health_loss_flat: {flat: -5},\r\n                }\r\n            },\r\n            2: {\r\n                description: \"This place goes against the laws of the world\",\r\n                related_skill: \"Strength of mind\",\r\n                effects: {\r\n                    agility: {multiplier: 0.3},\r\n                    dexterity: {multiplier: 0.3},\r\n                    intuition: {multiplier: 0.2},\r\n                    stamina_efficiency: {multiplier: 0.5},\r\n                    health_loss_flat: {flat: -50},\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n//create locations and zones\r\n(function(){ \r\n    locations[\"Village\"] = new Location({ \r\n        getDescription: function() {\r\n            if(locations[\"Infested field\"].enemy_groups_killed >= 5 * locations[\"Infested field\"].enemy_count) { \r\n                return \"Medium-sized village, built next to a small river at the foot of the mountains. It's surrounded by many fields, a few of them infested by huge rats, which, while an annoyance, don't seem possible to fully eradicate. Other than that, there's nothing interesting around\";\r\n            }\r\n            else if(locations[\"Infested field\"].enemy_groups_killed >= 2 * locations[\"Infested field\"].enemy_count) {\r\n                return \"Medium-sized village, built next to a small river at the foot of the mountains. It's surrounded by many fields, many of them infested by huge rats. Other than that, there's nothing interesting around\";\r\n            } else {\r\n                return \"Medium-sized village, built next to a small river at the foot of the mountains. It's surrounded by many fields, most of them infested by huge rats. Other than that, there's nothing interesting around\"; \r\n            }\r\n        },\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"*You hear some rustling*\"];\r\n            if(current_game_time.hour > 4 && current_game_time.hour <= 20) {\r\n                noises.push(\"Anyone seen my cow?\", \"Mooooo!\", \"Tomorrow I'm gonna fix the roof\", \"Look, a bird!\");\r\n\r\n                if(locations[\"Infested field\"].enemy_groups_killed <= 3) {\r\n                    noises.push(\"These nasty rats almost ate my cat!\");\r\n                }\r\n            }\r\n\r\n            if(current_game_time.hour > 3 && current_game_time.hour < 10) {\r\n                noises.push(\"\u266B\u266B Heigh ho, heigh ho, it's off to work I go~ \u266B\u266B\", \"Cock-a-doodle-doo!\");\r\n            } else if(current_game_time.hour > 18 && current_game_time.hour < 22) {\r\n                noises.push(\"\u266B\u266B Heigh ho, heigh ho, it's home from work I go~ \u266B\u266B\");\r\n            } \r\n\r\n            return noises;\r\n        },\r\n        dialogues: [\"village elder\", \"village guard\", \"old craftsman\"],\r\n        traders: [\"village trader\"],\r\n        name: \"Village\", \r\n        crafting: {\r\n            is_unlocked: true, \r\n            use_text: \"Try to craft something\", \r\n            tiers: {\r\n                crafting: 1,\r\n                forging: 1,\r\n                smelting: 1,\r\n                cooking: 1,\r\n                alchemy: 1,\r\n            }\r\n        },\r\n    });\r\n\r\n    locations[\"Shack\"] = new Location({\r\n        connected_locations: [{location: locations[\"Village\"], custom_text: \"Go outside to [Village]\", time_needed: 15}],\r\n        description: \"This small shack was the only spare building in the village. It's surprisingly tidy.\",\r\n        name: \"Shack\",\r\n        is_unlocked: false,\r\n        housing: {\r\n            is_unlocked: true,\r\n            text_to_sleep: \"Take a nap\",\r\n            sleeping_xp_per_tick: 1},\r\n    })\r\n\r\n    locations[\"Village\"].connected_locations.push({location: locations[\"Shack\"]});\r\n    //remember to always add it like that, otherwise travel will be possible only in one direction and location might not even be reachable\r\n\r\n    locations[\"Infested field\"] = new Combat_zone({\r\n        description: \"Field infested with wolf rats. You can see the grain stalks move as these creatures scurry around.\", \r\n        enemy_count: 15, \r\n        enemies_list: [\"Starving wolf rat\", \"Wolf rat\"],\r\n        types: [{type: \"open\", stage: 1, xp_gain: 1}],\r\n        enemy_stat_variation: 0.1,\r\n        is_unlocked: false, \r\n        name: \"Infested field\", \r\n        parent_location: locations[\"Village\"],\r\n        first_reward: {\r\n            xp: 10,\r\n            reputation: {\"village\": 20},\r\n        },\r\n        repeatable_reward: {\r\n            textlines: [\r\n                {dialogue: \"village elder\", lines: [\"cleared field\"]},\r\n            ],\r\n            xp: 5,\r\n        },\r\n        rewards_with_clear_requirement: [\r\n            {\r\n                required_clear_count: 1,\r\n                reputation: {\"village\": 10},\r\n            },\r\n            {\r\n                required_clear_count: 4,\r\n                reputation: {\"village\": 30},\r\n            },\r\n            {\r\n                required_clear_count: 10,\r\n                reputation: {\"village\": 50},\r\n            }\r\n        ]\r\n    });\r\n    locations[\"Village\"].connected_locations.push({location: locations[\"Infested field\"]});\r\n\r\n    locations[\"Nearby cave\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Village\"], custom_text: \"Go outside and to the [Village]\"}], \r\n        getDescription: function() {\r\n            if(locations[\"Pitch black tunnel\"].enemy_groups_killed >= locations[\"Pitch black tunnel\"].enemy_count) { \r\n                return \"A big cave at the base of a steep mountain, near the village. There are old storage sheds outside and signs of mining inside. Groups of fluorescent mushrooms cover the cave walls, providing a dim light. Your efforts have secured a decent space and many of the tunnels. It seems like you almost reached the deepest part.\";\r\n            }\r\n            else if(locations[\"Hidden tunnel\"].enemy_groups_killed >= locations[\"Hidden tunnel\"].enemy_count) { \r\n                return \"A big cave at the base of a steep mountain, near the village. There are old storage sheds outside and signs of mining inside. Groups of fluorescent mushrooms cover the walls, providing a dim light. Your efforts have secured a major space and some tunnels, but there are still more places left to clear out.\";\r\n            }\r\n            else if(locations[\"Cave depths\"].enemy_groups_killed >= locations[\"Cave depths\"].enemy_count) { \r\n                return \"A big cave at the base of a steep mountain, near the village. There are old storage sheds outside and signs of mining inside. Groups of fluorescent mushrooms cover the walls, providing a dim light. Your efforts have secured a decent space and even a few tunnels, yet somehow you can still hear the sounds of the wolf rats.\";\r\n            }\r\n            else if(locations[\"Cave room\"].enemy_groups_killed >= locations[\"Cave room\"].enemy_count) {\r\n                return \"A big cave at the base of a steep mountain, near the village. There are old storage sheds outside and signs of mining inside. Groups of fluorescent mushrooms cover the walls, providing a dim light. Your efforts have secured some space, but you can hear more wolf rats in some deeper tunnels.\";\r\n            } else {\r\n                return \"A big cave at the base of a steep mountain, near the village. There are old storage sheds outside and signs of mining inside. Groups of fluorescent mushrooms cover the walls, providing a dim light. You can hear sounds of wolf rats from the nearby room.\";\r\n            }\r\n        },\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"*You hear rocks rumbling somewhere*\", \"Squeak!\", ];\r\n            return noises;\r\n        },\r\n        name: \"Nearby cave\",\r\n        is_unlocked: false,\r\n    });\r\n    locations[\"Village\"].connected_locations.push({location: locations[\"Nearby cave\"]});\r\n    //remember to always add it like that, otherwise travel will be possible only in one direction and location might not even be reachable\r\n\r\n    locations[\"Cave room\"] = new Combat_zone({\r\n        description: \"It's full of rats. At least the glowing mushrooms provide some light.\", \r\n        enemy_count: 25, \r\n        types: [{type: \"narrow\", stage: 1,  xp_gain: 3}, {type: \"bright\", stage:1}],\r\n        enemies_list: [\"Wolf rat\"],\r\n        enemy_group_size: [2,3],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: true, \r\n        name: \"Cave room\", \r\n        leave_text: \"Go back to entrance\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 20,\r\n        },\r\n        repeatable_reward: {\r\n            locations: [{location: \"Cave depths\"}],\r\n            xp: 10,\r\n            activities: [{location:\"Nearby cave\", activity:\"weightlifting\"}, {location:\"Nearby cave\", activity:\"mining\"}, {location:\"Village\", activity:\"balancing\"}],\r\n        },\r\n        rewards_with_clear_requirement: [\r\n            {\r\n                required_clear_count: 1,\r\n                reputation: {\"village\": 10},\r\n            },\r\n            {\r\n                required_clear_count: 4,\r\n                reputation: {\"village\": 20},\r\n            },\r\n        ]\r\n    });\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Cave room\"]});\r\n\r\n    locations[\"Cave depths\"] = new Combat_zone({\r\n        description: \"It's dark. And full of rats.\", \r\n        enemy_count: 40,\r\n        types: [{type: \"narrow\", stage: 1,  xp_gain: 3}, {type: \"dark\", stage: 2, xp_gain: 3}],\r\n        enemies_list: [\"Wolf rat\"],\r\n        enemy_group_size: [5,8],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false, \r\n        name: \"Cave depths\", \r\n        leave_text: \"Climb out\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 30,\r\n        },\r\n        repeatable_reward: {\r\n            textlines: [{dialogue: \"village elder\", lines: [\"cleared cave\"]}],\r\n            xp: 15,\r\n        },\r\n        rewards_with_clear_requirement: [\r\n            {\r\n                required_clear_count: 4,\r\n                locations: [{location: \"Suspicious wall\"}],\r\n                reputation: {\"village\": 40},\r\n            }\r\n        ],\r\n    });\r\n    \r\n    locations[\"Hidden tunnel\"] = new Combat_zone({\r\n        description: \"There is, in fact, even more rats here.\", \r\n        enemy_count: 50, \r\n        types: [{type: \"narrow\", stage: 1,  xp_gain: 3}, {type: \"dark\", stage: 3, xp_gain: 1}],\r\n        enemies_list: [\"Elite wolf rat\"],\r\n        enemy_group_size: [2,2],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false, \r\n        name: \"Hidden tunnel\", \r\n        leave_text: \"Retreat for now\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 100,\r\n        },\r\n        repeatable_reward: {\r\n            locations: [{location: \"Pitch black tunnel\"}],\r\n            xp: 50,\r\n            activities: [{location:\"Nearby cave\", activity:\"mining2\"}],\r\n        },\r\n        unlock_text: \"As the wall falls apart, you find yourself in front of a new tunnel, leading even deeper. And of course, it's full of wolf rats.\"\r\n    });\r\n    locations[\"Pitch black tunnel\"] = new Combat_zone({\r\n        description: \"There is no light here. Only rats.\", \r\n        enemy_count: 50, \r\n        types: [{type: \"narrow\", stage: 1,  xp_gain: 6}, {type: \"dark\", stage: 3, xp_gain: 3}],\r\n        enemies_list: [\"Elite wolf rat\"],\r\n        enemy_group_size: [6,8],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false, \r\n        name: \"Pitch black tunnel\", \r\n        leave_text: \"Retreat for now\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 200,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 100,\r\n            activities: [{location:\"Nearby cave\", activity: \"climbing\"}],\r\n            actions: [{location: \"Nearby cave\", action: \"climb the mountain\"}],\r\n        },\r\n        rewards_with_clear_requirement: [\r\n            {\r\n                required_clear_count: 4,\r\n                locations: [{location: \"Mysterious gate\"}],\r\n            }\r\n        ],\r\n\r\n        unlock_text: \"As you keep going deeper, you barely notice a pitch black hole. Not even a tiniest speck of light reaches it.\"\r\n    });\r\n\r\n    locations[\"Mysterious gate\"] = new Combat_zone({\r\n        description: \"It's dark. And full of rats.\", \r\n        enemy_count: 50, \r\n        types: [{type: \"dark\", stage: 3, xp_gain: 5}],\r\n        enemies_list: [\"Elite wolf rat guardian\"],\r\n        enemy_group_size: [6,8],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false,\r\n        name: \"Mysterious gate\", \r\n        leave_text: \"Get away\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 500,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 250,\r\n            activities: [{location:\"Nearby cave\", activity:\"meditating\"}, {location:\"Nearby cave\", activity:\"mining3\"}],\r\n            actions: [{action: \"open the gate\", location:\"Nearby cave\"}]\r\n        },\r\n        unlock_text: \"After a long and ardous fight, you reach a chamber that ends with a massive stone gate. You can see it's guarded by some kind of wolf rats, but much bigger than the ones you fought until now.\"\r\n    });\r\n\r\n    locations[\"Nearby cave\"].connected_locations.push(\r\n        {location: locations[\"Cave depths\"]}, \r\n        {location: locations[\"Hidden tunnel\"], custom_text: \"Enter the [Hidden tunnel]\"}, \r\n        {location: locations[\"Pitch black tunnel\"], custom_text: \"Go into the [Pitch black tunnel]\"},\r\n        {location: locations[\"Mysterious gate\"], custom_text: \"Go to the [Mysterious gate]\"}\r\n    );\r\n\r\n    locations[\"Writhing tunnel\"] = new Combat_zone({\r\n        description: \"The walls are moving...\", \r\n        enemy_count: 50, \r\n        types: [{type: \"dark\", stage: 3, xp_gain: 5}, {type: \"narrow\", stage: 2, xp_gain: 5}, {type: \"eldritch\", stage: 1, xp_gain: 1}],\r\n        enemies_list: [\"Wall rat\"],\r\n        enemy_group_size: [4,4],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false,\r\n        name: \"Writhing tunnel\", \r\n        leave_text: \"Run away...\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        first_reward: {\r\n            xp: 2500,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 1250,\r\n            locations: [{location: \"Mysterious depths\"}]\r\n        },\r\n        unlock_text: \"You see something. You struggle to comprehend it. When you finally understand, you regret it. It might have been better to be born blind.\"\r\n    });\r\n\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Writhing tunnel\"]});\r\n\r\n    locations[\"Mysterious depths\"] = new Location({ //not yet unlockable\r\n        connected_locations: [{location: locations[\"Nearby cave\"], custom_text: \"Climb back up to the main level of [Nearby cave]\"}], \r\n        getDescription: function() {\r\n            return  `You find yourself in a large chamber with smooth walls and vaulted ceiling. The floor is covered in square tiles in the center, yet you cannot help but notice that all these squares make a circle, in some impossible to understand way.\r\nThere's another gate on the wall in front of you, but you have a strange feeling that you won't be able to open it with brute strength.`;\r\n        },\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"*You hear rocks rumbling somewhere*\", \"Squeak!\", \"*Air vibrates in an impossible to describe manner*\", \"*You feel an immense sense of something being wrong*\", '\"All these squares make a circle... All these squares make a circle...\"'];\r\n            return noises;\r\n        },\r\n        name: \"Mysterious depths\",\r\n        is_unlocked: false,\r\n        unlock_text: \"You manage to find a way to another chamber.\"\r\n    });\r\n\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Mysterious depths\"], custom_text: \"Climb down to [Mysterious depths]\"});\r\n\r\n    locations[\"Forest road\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Village\"]}],\r\n        description: \"Old trodden road leading through a dark forest, the only path connecting village to the town. You can hear some animals from the surrounding woods.\",\r\n        name: \"Forest road\",\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"*You hear some rustling*\", \"Roar!\", \"*You almost tripped on some roots*\", \"*You hear some animal running away*\"];\r\n\r\n            return noises;\r\n        },\r\n        is_unlocked: false,\r\n    });\r\n    locations[\"Village\"].connected_locations.push({location: locations[\"Forest road\"], custom_text: \"Leave the village towards [Forest road]\"});\r\n\r\n    locations[\"Forest\"] = new Combat_zone({\r\n        description: \"Forest surrounding the village, a dangerous place\", \r\n        enemies_list: [\"Starving wolf\", \"Young wolf\"],\r\n        types: [{type: \"narrow\", stage: 1, xp_gain: 1}],\r\n        enemy_count: 30, \r\n        enemy_stat_variation: 0.2,\r\n        name: \"Forest\", \r\n        parent_location: locations[\"Forest road\"],\r\n        first_reward: {\r\n            xp: 40,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 20,\r\n            locations: [{location:\"Deep forest\"}],\r\n            activities: [{location:\"Forest road\", activity: \"herbalism\"}],\r\n        },\r\n    });\r\n    locations[\"Forest road\"].connected_locations.push({location: locations[\"Forest\"], custom_text: \"Leave the safe path and walk into the [Forest]\"});\r\n\r\n    locations[\"Deep forest\"] = new Combat_zone({\r\n        description: \"Deeper part of the forest, a dangerous place\", \r\n        enemies_list: [\"Wolf\", \"Starving wolf\", \"Young wolf\"],\r\n        types: [{type: \"narrow\", stage: 1, xp_gain: 2}],\r\n        enemy_count: 50, \r\n        enemy_group_size: [2,3],\r\n        enemy_stat_variation: 0.2,\r\n        is_unlocked: false,\r\n        name: \"Deep forest\", \r\n        parent_location: locations[\"Forest road\"],\r\n        first_reward: {\r\n            xp: 70,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 35,\r\n            flags: [\"is_deep_forest_beaten\"],\r\n            activities: [{location:\"Forest road\", activity: \"woodcutting\"}],\r\n        }\r\n    });\r\n    locations[\"Forest road\"].connected_locations.push({location: locations[\"Deep forest\"], custom_text: \"Venture into the [Deep forest]\"});\r\n\r\n    locations[\"Forest clearing\"] = new Combat_zone({\r\n        description: \"A surprisingly big clearing hidden in the northern part of the forest, covered with very tall grass and filled with a mass of wild boars\",\r\n        enemies_list: [\"Boar\"],\r\n        enemy_count: 50,\r\n        enemy_group_size: [4,7],\r\n        is_unlocked: false,\r\n        enemy_stat_variation: 0.2,\r\n        name: \"Forest clearing\", \r\n        types: [{type: \"open\", stage: 2, xp_gain: 3}],\r\n        parent_location: locations[\"Forest road\"],\r\n        first_reward: {\r\n            xp: 200,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 100,\r\n            textlines: [{dialogue: \"farm supervisor\", lines: [\"defeated boars\"]}],\r\n            activities: [{location: \"Forest road\", activity: \"woodcutting2\"}],\r\n        }\r\n    });\r\n    locations[\"Forest road\"].connected_locations.push({location: locations[\"Forest clearing\"], custom_text: \"Go towards the [Forest clearing] in the north\"});\r\n\r\n    locations[\"Town outskirts\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Forest road\"], custom_text: \"Return to the [Forest road]\"}],\r\n        description: \"The town is surrounded by a tall stone wall. The only gate seems to be closed, with a lone guard outside. You can see farms to the north and slums to the south.\",\r\n        name: \"Town outskirts\",\r\n        is_unlocked: true,\r\n        dialogues: [\"gate guard\"],\r\n    });\r\n    locations[\"Forest road\"].connected_locations.push({location: locations[\"Town outskirts\"], custom_text: \"Go towards the [Town outskirts]\"});\r\n\r\n    locations[\"Slums\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Town outskirts\"]}],\r\n        getDescription: function() {\r\n            if(locations[\"Gang hideout\"].is_finished) {\r\n                return \"A wild settlement next to city walls, filled with decaying buildings, poverty, and occasional thieves\";\r\n            }\r\n\r\n            return \"A wild settlement next to city walls, filled with decaying buildings, poverty, and violent criminals\";\r\n        },\r\n        name: \"Slums\",\r\n        is_unlocked: true,\r\n        dialogues: [\"suspicious man\"],\r\n        traders: [\"suspicious trader\", \"suspicious trader 2\"],\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"Cough cough\", \"*You hear someone sobbing*\", \"*You see someone sleeping in an alleyway.*\"];\r\n            \r\n            if(current_game_time.hour > 4 && current_game_time.hour <= 20) {\r\n                noises.push(\"Please, do you have a coin to spare?\");\r\n            } else {\r\n                if(!locations[\"Gang hideout\"].is_finished) {\r\n                    noises.push(\"*Sounds of someone getting repeatedly stabbed*\", \"Scammed some fools for money today, time to get drunk!\");\r\n                }\r\n            }\r\n            if(!locations[\"Gang hideout\"].is_finished) {\r\n                noises.push(\"*You hear a terrified scream.*\");\r\n            } else {\r\n                noises.push(\"You're the one who took out that gang, aren't you? Thank you so much.\", \"Things got a lot better since those thugs left...\");\r\n            }\r\n            return noises;\r\n        },\r\n    });\r\n    locations[\"Town farms\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Town outskirts\"]}],\r\n        description: \"Semi-private farms under jurisdiction of the city council. Full of life and sounds of heavy work.\",\r\n        name: \"Town farms\",\r\n        is_unlocked: true,\r\n        dialogues: [\"farm supervisor\"],\r\n        getBackgroundNoises: function() {\r\n            let noises = [];\r\n            if(current_game_time.hour > 4 && current_game_time.hour <= 20) {\r\n                noises.push(\"Mooooo!\", \"Look, a bird!\", \"Bark bark!\", \"*You notice a goat staring at you menacingly*\", \"Neigh!\", \"Oink oink\");\r\n            } else {\r\n                noises.push(\"*You can hear some rustling*\", \"*You can hear snoring workers*\");\r\n            }\r\n\r\n            if(current_game_time.hour > 3 && current_game_time.hour < 10) {\r\n                noises.push(\"\u266B\u266B Heigh ho, heigh ho, it's off to work I go~ \u266B\u266B\", \"Cock-a-doodle-doo!\");\r\n            } else if(current_game_time.hour > 18 && current_game_time.hour < 22) {\r\n                noises.push(\"\u266B\u266B Heigh ho, heigh ho, it's home from work I go~ \u266B\u266B\");\r\n            } \r\n\r\n            return noises;\r\n        },\r\n    });\r\n    locations[\"Gang hideout\"] = new Combat_zone({ \r\n        description: \"Hideout of a local gang. Old building with a labirynth of narrow corridors.\", \r\n        enemies_list: [\"Slums thug\"],\r\n        types: [{type: \"narrow\", stage: 2, xp_gain: 3}, {type: \"dark\", stage: 1, xp_gain: 3}],\r\n        enemy_count: 30,\r\n        is_unlocked: false,\r\n        enemy_group_size: [4,5],\r\n        enemy_stat_variation: 0.1,\r\n        name: \"Gang hideout\", \r\n        parent_location: locations[\"Slums\"],\r\n        first_reward: {\r\n            xp: 1000,\r\n            reputation: {slums: 200, town: 50},\r\n        },\r\n        repeatable_reward: {\r\n            traders: [{trader: \"suspicious trader 2\", skip_message: true}],\r\n            textlines: [{dialogue: \"suspicious man\", lines: [\"defeated gang\", \"behave 3\"]}],\r\n            locks: {\r\n                traders: [\"suspicious trader\"],\r\n                locations: [\"Gang hideout\"],\r\n                textlines: {\"suspicious man\": [\"behave 2\"]},\r\n            }, \r\n            move_to: {location: \"Slums\"},\r\n        },\r\n    });\r\n    locations[\"Slums\"].connected_locations.push({location: locations[\"Gang hideout\"]});\r\n\r\n    locations[\"Town square\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Town outskirts\"]}],\r\n        description: \"The town's center of life, connected to all the markets, guilds, and other important places\",\r\n        name: \"Town square\",\r\n        is_unlocked: false,\r\n        getBackgroundNoises: function() {\r\n            let noises = [];\r\n            return noises;\r\n        },\r\n    });\r\n\r\n    locations[\"Town outskirts\"].connected_locations.push({location: locations[\"Town farms\"]}, {location: locations[\"Slums\"]}, {location: locations[\"Town square\"]});\r\n\r\n    locations[\"Cat caf\u00E9\"] = new Location({ \r\n        connected_locations: [{location: locations[\"Town square\"]}],\r\n        description: `A cat caf\u00E9 in the center of town. There are multiple kitties of all kinds, but two females especially catch your eyes\r\n - a chubby mackerel tabby with a white belly and neck, and a slender tortoishell that seems blind on the right eye. There's a single worker in the caf\u00E9, a man with with long ponytail and glasses.`,\r\n        name: \"Cat caf\u00E9\",\r\n        is_unlocked: true,\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"Meow\", \"Nya\", \"Mrrr\", \"Mrrrp meow\", \"*A cat jumps on your lap*\", \"*A cat brushes on your leg*\"];\r\n            return noises;\r\n        },\r\n    });\r\n\r\n    locations[\"Town square\"].connected_locations.push({location: locations[\"Cat caf\u00E9\"]});\r\n\r\n    locations[\"Mountain path\"] = new Location({\r\n        connected_locations: [{location: locations[\"Nearby cave\"], custom_text: \"Climb down to [Nearby Cave]\"}],\r\n        description: \"A treacherus path high above the village\",\r\n        name: \"Mountain path\",\r\n        is_unlocked: false,\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"You hear a rock tumble and fall down. It takes a very long time to hit the ground...\", \"Strong wind whooshes past you\"];\r\n            return noises;\r\n        },\r\n        unlock_text: \"Thanks to your hard effort, you reached a narrow safe spot where you can rest a bit.\",\r\n    });\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Mountain path\"], custom_text: \"Climb up to [Mountain path]\"});\r\n\r\n    locations[\"Small flat area in mountains\"] = new Location({\r\n        connected_locations: [{location: locations[\"Mountain path\"]}],\r\n        description: \"A piece of flatland somewhere in the mountains, very high above the village. It's not that big, but more than enough for a camp.\",\r\n        name: \"Small flat area in mountains\",\r\n        is_unlocked: false,\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"You hear a rock tumble and fall down. It takes a very long time to hit the ground...\", \"Strong wind whooshes past you\", \"A pair of birds flies right above you\"];\r\n            return noises;\r\n        },\r\n        unlock_text: \"You finally got to a place where a camp can be established\",\r\n    });\r\n    locations[\"Mountain path\"].connected_locations.push({location: locations[\"Small flat area in mountains\"]});\r\n    \r\n    locations[\"Mountain camp\"] = new Location({\r\n        connected_locations: [{location: locations[\"Nearby cave\"], custom_text: \"Climb down to [Nearby cave]\"}],\r\n        description: \"A nice safe camp in mountains created by you, a perfect base for further exploration.\",\r\n        name: \"Mountain camp\",\r\n        housing: {\r\n            is_unlocked: true,\r\n            sleeping_xp_per_tick: 8,\r\n            text_to_sleep: \"Take a nap on the bedroll\",\r\n        },\r\n        is_unlocked: false,\r\n        getBackgroundNoises: function() {\r\n            let noises = [\"You hear a rock tumble and fall down. It takes a very long time to hit the ground...\", \"Strong wind whooshes past you\", \"A pair of birds flies right above you\"];\r\n            return noises;\r\n        },\r\n    });\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Mountain camp\"]});\r\n    locations[\"Mountain path\"].connected_locations.push({location: locations[\"Mountain camp\"]});\r\n\r\n    locations[\"Gentle mountain slope\"] = new Combat_zone({\r\n        description: \"A surprisingly gentle clearing, with a herd of angry goats protecting it.\",\r\n        enemies_list: [\"Angry mountain goat\"],\r\n        enemy_count: 50,\r\n        enemy_group_size: [3,4],\r\n        is_unlocked: false,\r\n        enemy_stat_variation: 0.2,\r\n        name: \"Gentle mountain slope\", \r\n        types: [{type: \"open\", stage: 1, xp_gain: 5}, {type: \"thin air\", stage: 1, xp_gain: 3}],\r\n        parent_location: locations[\"Mountain camp\"],\r\n        first_reward: {\r\n            xp: 2000,\r\n        },\r\n        repeatable_reward: {\r\n            xp: 1000,\r\n        }\r\n    });\r\n    locations[\"Mountain camp\"].connected_locations.push({location: locations[\"Gentle mountain slope\"]});\r\n})();\r\n\r\n//challenge zones\r\n(function(){\r\n    locations[\"Sparring with the village guard (heavy)\"] = new Challenge_zone({\r\n        description: \"He's showing you a technique that makes his attacks slow but deadly\",\r\n        enemy_count: 1, \r\n        enemies_list: [\"Village guard (heavy)\"],\r\n        enemy_group_size: [1,1],\r\n        is_unlocked: false, \r\n        name: \"Sparring with the village guard (heavy)\", \r\n        leave_text: \"Give up\",\r\n        parent_location: locations[\"Village\"],\r\n        first_reward: {\r\n            xp: 30,\r\n            reputation: {\"village\": 10},\r\n        },\r\n        repeatable_reward: {\r\n            textlines: [{dialogue: \"village guard\", lines: [\"heavy\"]}],\r\n        },\r\n        unlock_text: \"You can now spar with the guard (heavy stance) in the Village\"\r\n    });\r\n    locations[\"Sparring with the village guard (quick)\"] = new Challenge_zone({\r\n        description: \"He's showing you a technique that makes his attacks slow but deadly\",\r\n        enemy_count: 1, \r\n        enemies_list: [\"Village guard (quick)\"],\r\n        enemy_group_size: [1,1],\r\n        is_unlocked: false, \r\n        name: \"Sparring with the village guard (quick)\", \r\n        leave_text: \"Give up\",\r\n        parent_location: locations[\"Village\"],\r\n        first_reward: {\r\n            xp: 30,\r\n            reputation: {\"village\": 10},\r\n        },\r\n        repeatable_reward: {\r\n            textlines: [{dialogue: \"village guard\", lines: [\"quick\"]}],\r\n        },\r\n        unlock_text: \"You can now spar with the guard (quick stance) in the Village\"\r\n    });\r\n    locations[\"Village\"].connected_locations.push(\r\n        {location: locations[\"Sparring with the village guard (heavy)\"], custom_text: \"Spar with the guard [heavy]\"},\r\n        {location: locations[\"Sparring with the village guard (quick)\"], custom_text: \"Spar with the guard [quick]\"}\r\n    );\r\n\r\n    locations[\"Suspicious wall\"] = new Challenge_zone({\r\n        description: \"It can be broken with enough force, you can feel it\", \r\n        enemy_count: 1, \r\n        types: [],\r\n        enemies_list: [\"Suspicious wall\"],\r\n        enemy_group_size: [1,1],\r\n        enemy_stat_variation: 0,\r\n        is_unlocked: false, \r\n        name: \"Suspicious wall\", \r\n        leave_text: \"Leave it for now\",\r\n        parent_location: locations[\"Nearby cave\"],\r\n        repeatable_reward: {\r\n            locations: [{location: \"Hidden tunnel\"}],\r\n            textlines: [{dialogue: \"village elder\", lines: [\"new tunnel\"]}],\r\n            xp: 20,\r\n        },\r\n        unlock_text: \"At some point, one of wolf rats tries to escape through a previously unnoticed hole in a nearby wall. There might be another tunnel behind it!\"\r\n    });\r\n    locations[\"Nearby cave\"].connected_locations.push({location: locations[\"Suspicious wall\"], custom_text: \"Try to break the suspicious wall\"});\r\n\r\n    locations[\"Fight off the assailant\"] = new Challenge_zone({\r\n        description: \"He attacked you out of nowhere\", \r\n        enemy_count: 1, \r\n        types: [],\r\n        enemies_list: [\"Suspicious man\"],\r\n        enemy_group_size: [1,1],\r\n        enemy_stat_variation: 0,\r\n        is_unlocked: false, \r\n        name: \"Fight off the assailant\", \r\n        leave_text: \"Run away for now\",\r\n        parent_location: locations[\"Slums\"],\r\n        repeatable_reward: {\r\n            textlines: [{dialogue: \"suspicious man\", lines: [\"defeated\"]}],\r\n            xp: 40,\r\n        },\r\n        unlock_text: \"Defend yourself!\"\r\n    });\r\n    locations[\"Slums\"].connected_locations.push({location: locations[\"Fight off the assailant\"], custom_text: \"Fight off the suspicious man\"});\r\n\r\n    locations[\"Fight the angry mountain goat\"] = new Challenge_zone({\r\n        description: \"It won't let you pass...\",\r\n        enemy_count: 1, \r\n        types: [{type: \"narrow\", stage: 1, xp_gain: 1}, {type: \"thin air\", stage: 1, xp_gain: 3}],\r\n        enemies_list: [\"Angry-looking mountain goat\"],\r\n        enemy_group_size: [1,1],\r\n        enemy_stat_variation: 0,\r\n        is_unlocked: false, \r\n        name: \"Fight the angry mountain goat\", \r\n        leave_text: \"Run away and hope it won't follow\",\r\n        parent_location: locations[\"Mountain path\"],\r\n        repeatable_reward: {\r\n            locations: [{location: \"Small flat area in mountains\"}],\r\n            xp: 500,\r\n        },\r\n        unlock_text: \"Defend yourself!\"\r\n    });\r\n    locations[\"Mountain path\"].connected_locations.push({location: locations[\"Fight the angry mountain goat\"], custom_text: \"Fight the angry goat\"});\r\n})();\r\n\r\n//add activities\r\n(function(){\r\n    locations[\"Village\"].activities = {\r\n        \"fieldwork\": new LocationActivity({\r\n            activity_name: \"fieldwork\",\r\n            starting_text: \"Work on the fields\",\r\n            get_payment: () => {\r\n                return 10 + Math.round(15 * get_total_skill_level(\"Farming\")/skills[\"Farming\"].max_level);\r\n            },\r\n            is_unlocked: false,\r\n            working_period: 60*2,\r\n            availability_time: {start: 6, end: 20},\r\n            skill_xp_per_tick: 1, \r\n        }),\r\n        \"running\": new LocationActivity({\r\n            activity_name: \"running\",\r\n            infinite: true,\r\n            starting_text: \"Go for a run around the village\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: false,\r\n        }),\r\n        \"weightlifting\": new LocationActivity({\r\n            activity_name: \"weightlifting\",\r\n            infinite: true,\r\n            starting_text: \"Try to carry some bags of grain\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: false,\r\n        }),\r\n        \"balancing\": new LocationActivity({\r\n            activity_name: \"balancing\",\r\n            infinite: true,\r\n            starting_text: \"Try to keep your balance on rocks in the river\",\r\n            unlock_text: \"All this fighting while surrounded by stone and rocks gives you a new idea\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: false,\r\n        }),\r\n        \"meditating\": new LocationActivity({\r\n            activity_name: \"meditating\",\r\n            infinite: true,\r\n            starting_text: \"Sit down and meditate\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: true,\r\n        }),\r\n        \"patrolling\": new LocationActivity({\r\n            activity_name: \"patrolling\",\r\n            starting_text: \"Go on a patrol around the village.\",\r\n            get_payment: () => {return 30},\r\n            is_unlocked: false,\r\n            infinite: true,\r\n            working_period: 60*2,\r\n            skill_xp_per_tick: 1\r\n        }),\r\n        \"woodcutting\": new LocationActivity({\r\n            activity_name: \"woodcutting\",\r\n            infinite: true,\r\n            starting_text: \"Gather wood on the outskirts\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: true,\r\n            gained_resources: {\r\n                resources: [{name: \"Piece of rough wood\", ammount: [[1,1], [1,3]], chance: [0.5, 1]}], \r\n                time_period: [20, 10],\r\n                skill_required: [0, 10],\r\n                scales_with_skill: true,\r\n            },\r\n            require_tool: true,\r\n        }),\r\n    };\r\n    locations[\"Nearby cave\"].activities = {\r\n        \"weightlifting\": new LocationActivity({\r\n            activity_name: \"weightlifting\",\r\n            infinite: true,\r\n            starting_text: \"Try lifting some of the rocks\",\r\n            skill_xp_per_tick: 4,\r\n            is_unlocked: false,\r\n            unlock_text: \"After the fight, you realize there's quite a lot of rocks of different sizes that could be used for exercises\",\r\n        }),\r\n        \"climbing\": new LocationActivity({\r\n            activity_name: \"climbing\",\r\n            infinite: true,\r\n            starting_text: \"Attempt climbing the mountain walls outside\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: false,\r\n            unlock_text: \"As you descend deeper and deeper, a sudden thought strikes you - what if you instead tried going up?\",\r\n        }),\r\n        \"meditating\": new LocationActivity({\r\n            activity_name: \"meditating\",\r\n            infinite: true,\r\n            starting_text: \"Sit down and meditate in front of the gate\",\r\n            skill_xp_per_tick: 4,\r\n            is_unlocked: false,\r\n            unlock_text: \"As you finish fighting your enemies and it becomes quiet, you feel a strange sense of tranquility. This spot in front of the mysterious gate, surrounded by calm and darkness, seems perfect to sit down and focus your mind.\"\r\n        }),\r\n        \"mining\": new LocationActivity({\r\n            activity_name: \"mining\",\r\n            infinite: true,\r\n            starting_text: \"Mine the strange looking iron vein\",\r\n            skill_xp_per_tick: 1,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [{name: \"Low quality iron ore\", ammount: [[1,1], [1,3]], chance: [0.4, 0.8]}], \r\n                time_period: [60, 30],\r\n                skill_required: [0, 10],\r\n                scales_with_skill: true,\r\n            },\r\n            unlock_text: \"As you clear the area of wolf rats, you notice a vein of an iron ore\",\r\n        }),\r\n        \"mining2\": new LocationActivity({\r\n            activity_name: \"mining\",\r\n            infinite: true,\r\n            starting_text: \"Mine the deeper iron vein\",\r\n            skill_xp_per_tick: 5,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [{name: \"Iron ore\", ammount: [[1,1], [1,3]], chance: [0.3, 0.7]}],\r\n                time_period: [90, 40],\r\n                skill_required: [7, 17],\r\n                scales_with_skill: true,\r\n            },\r\n            unlock_text: \"Going deeper, you find a vein of an iron ore that seems to be of much higher quality\",\r\n        }),\r\n        \"mining3\": new LocationActivity({\r\n            activity_name: \"mining\",\r\n            infinite: true,\r\n            starting_text: \"Mine the atratan vein\",\r\n            skill_xp_per_tick: 10,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [{name: \"Atratan ore\", ammount: [[1,1], [1,3]], chance: [0.3, 0.7]}],\r\n                time_period: [120, 60],\r\n                skill_required: [12, 25],\r\n                scales_with_skill: true,\r\n            },\r\n            unlock_text: \"As you finish the fight and get a time to look around, you notice a metal vein of different color than iron. You recall another ore called Atratan, this must be it.\",\r\n        }),\r\n    };\r\n    locations[\"Forest road\"].activities = {\r\n        \"running\": new LocationActivity({\r\n            activity_name: \"running\",\r\n            infinite: true,\r\n            starting_text: \"Go for a run through the forest\",\r\n            skill_xp_per_tick: 4,\r\n        }),\r\n        \"woodcutting\": new LocationActivity({\r\n            activity_name: \"woodcutting\",\r\n            infinite: true,\r\n            starting_text: \"Gather wood from nearby trees\",\r\n            skill_xp_per_tick: 5,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [{name: \"Piece of wood\", ammount: [[1,1], [1,3]], chance: [0.3, 1]}],\r\n                time_period: [90, 40],\r\n                skill_required: [7, 17],\r\n                scales_with_skill: true,\r\n            },\r\n        }),\r\n        \"woodcutting2\": new LocationActivity({\r\n            activity_name: \"woodcutting\",\r\n            infinite: true,\r\n            starting_text: \"Gather wood from sturdy trees\",\r\n            skill_xp_per_tick: 10,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [{name: \"Piece of ash wood\", ammount: [[1,1], [1,3]], chance: [0.3, 1]}],\r\n                time_period: [120, 60],\r\n                skill_required: [12, 25],\r\n                scales_with_skill: true,\r\n            },\r\n            unlock_text: \"Finishing your fight, you notice that the trees on the side of the clearing look really healthy and sturdy, they could be a useful material.\",\r\n        }),\r\n        \"herbalism\": new LocationActivity({\r\n            activity_name: \"herbalism\",\r\n            infinite: true,\r\n            starting_text: \"Gather useful herbs throughout the forest\",\r\n            skill_xp_per_tick: 2,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [\r\n                    {name: \"Oneberry\", ammount: [[1,1], [1,1]], chance: [0.1, 0.5]},\r\n                    {name: \"Golmoon leaf\", ammount: [[1,1], [1,1]], chance: [0.1, 0.7]},\r\n                    {name: \"Belmart leaf\", ammount: [[1,1], [1,1]], chance: [0.1, 0.7]}\r\n                ], \r\n                time_period: [120, 45],\r\n                skill_required: [0, 10],\r\n                scales_with_skill: true,\r\n            },\r\n            require_tool: true,\r\n        }),\r\n    };\r\n    locations[\"Town farms\"].activities = {\r\n        \"fieldwork\": new LocationActivity({\r\n            activity_name: \"fieldwork\",\r\n            starting_text: \"Work on the fields\",\r\n            get_payment: () => {\r\n                return 20 + Math.round(20 * get_total_skill_level(\"Farming\")/skills[\"Farming\"].max_level);\r\n            },\r\n            is_unlocked: false,\r\n            working_period: 60*2,\r\n            availability_time: {start: 6, end: 20},\r\n            skill_xp_per_tick: 2,\r\n        }),\r\n        \"animal care\": new LocationActivity({\r\n            activity_name: \"animal care\",\r\n            infinite: true,\r\n            starting_text: \"Take care of local sheep in exchange for some wool\",\r\n            skill_xp_per_tick: 3,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [\r\n                    {name: \"Wool\", ammount: [[1,1], [1,3]], chance: [0.1, 1]},\r\n                ], \r\n                time_period: [120, 60],\r\n                skill_required: [0, 10],\r\n                scales_with_skill: true,\r\n            },\r\n        }),\r\n    };\r\n    locations[\"Mountain camp\"].activities = {\r\n        \"herbalism\": new LocationActivity({\r\n            activity_name: \"herbalism\",\r\n            infinite: true,\r\n            starting_text: \"Search for useful herbs on the mountainside\",\r\n            skill_xp_per_tick: 6,\r\n            is_unlocked: false,\r\n            gained_resources: {\r\n                resources: [\r\n                    {name: \"Silver thistle\", ammount: [[1,1], [1,1]], chance: [0.1, 0.5]},\r\n                ], \r\n                time_period: [120, 60],\r\n                skill_required: [7, 17],\r\n                scales_with_skill: true,\r\n            },\r\n            require_tool: true,\r\n        }),\r\n    }\r\n})();\r\n\r\n//add actions\r\n(function(){\r\n    locations[\"Nearby cave\"].actions = {\r\n        \"open the gate\": new LocationAction({\r\n            action_id: \"open the gate\",\r\n            starting_text: \"Try to push the mysterious gate open\",\r\n            description: \"It's an ancient massive gate, but maybe with enough strength and training you could actually manage to push it at least a tiny bit to create enough space to walk through.\",\r\n            action_text: \"Huffing and puffing\",\r\n            success_text: \"When you are almost ready to give up, you hear the ancient hinges creak, as the gate slowly moves. Finally, you can continue deeper!\",\r\n            failure_texts: {\r\n                conditional_loss: [\"Despite trying your best, you can feel that you are just too weak for it. You should get stronger first.\"],\r\n            },\r\n            conditions: [\r\n                {\r\n                    stats: {\r\n                        strength: 150,\r\n                    }\r\n                }\r\n            ],\r\n            attempt_duration: 10,\r\n            success_chances: [1],\r\n            rewards: {\r\n                locations: [{location: \"Writhing tunnel\"}],\r\n            },\r\n        }),\r\n        \"climb the mountain\": new LocationAction({\r\n            action_id: \"climb the mountain\",\r\n            starting_text: \"Try to climb up the mountain\",\r\n            description: \"It is an ardous task that will require some good long rope and actual skill in climbing, together with good physical abilities. It will take some time, so you need to make sure you won't run out of energy halfway through.\",\r\n            action_text: \"Climbing up\",\r\n            success_text: \"Somehow you did it, you climbed all the way up! Thanks to the rope you tied on your way, further trips up and down will be much easier.\",\r\n            failure_texts: {\r\n                conditional_loss: [\"Despite trying your best, you can feel that you won't manage to do it without more training\"],\r\n                random_loss: [\r\n                    \"You almost had it, but at some point you grabbed a rock that turned out to be unstable. Be more careful next time!\", \r\n                    \"You were really close, but a gust of wind at a bad moment knocked you off balance.\",\r\n                    \"You failed to notice a falling rock and got knocked down.\"\r\n                ],\r\n                unable_to_begin: [\"While seemingly prepared, you realize you're missing an important accessory - some nice long rope is gonna be a necessity for this, especially if you want to go back down at some point.\"],\r\n            },\r\n            required: {\r\n                items_by_id: {\"Coil of rope\": {count: 1, remove_on_success: true}},\r\n            },\r\n            conditions: [\r\n                {\r\n                    skills: {\r\n                        \"Climbing\": 7,\r\n                    },\r\n                    stats: {\r\n                        strength: 50,\r\n                        agility: 50,\r\n                        max_stamina: 50,\r\n                    }\r\n                },\r\n                {\r\n                    skills: {\r\n                        \"Climbing\": 12,\r\n                    },\r\n                    stats: {\r\n                        strength: 120,\r\n                        agility: 120,\r\n                        max_stamina: 50,\r\n                    }\r\n                }\r\n            ],\r\n            attempt_duration: 60,\r\n            success_chances: [0.3, 1],\r\n            rewards: {\r\n                locations: [{location: \"Mountain path\"}],\r\n                move_to: {location: \"Mountain path\"},\r\n            },\r\n        }),\r\n    };\r\n    locations[\"Mountain path\"].actions = {\r\n        \"explore\": new LocationAction({\r\n            action_id: \"explore\",\r\n            starting_text: \"Explore the area\",\r\n            description: \"Now that you are here, it's time to find if there's anything worthy of your time. Too bad you couldn't do it beforehand.\",\r\n            action_text: \"Looking around\",\r\n            success_text: \"The good news: you noticed a nice little piece of flat land that would be perfect for a camp. The bad news: there's a very angry-looking mountain goat blocking your way.\",\r\n            failure_texts: {\r\n                random_loss: [\r\n                    \"You looked under rocks and between the bushes, but you found nothing. Keep looking!\", \r\n                    \"You looked and looked, but you couldn't find anything. Rest a bit and go back to it!\",\r\n                ],\r\n            },\r\n            conditions: [],\r\n            is_unlocked: true,\r\n            attempt_duration: 60,\r\n            success_chances: [0.6],\r\n            rewards: {\r\n                locations: [{location: \"Fight the angry mountain goat\"}],\r\n            },\r\n        }),\r\n    };\r\n    locations[\"Small flat area in mountains\"].actions = {\r\n        \"create camp\": new LocationAction({\r\n            action_id: \"create camp\",\r\n            starting_text: \"Establish a camp here\",\r\n            description: \"Prepare a tent, a fireplace, and a storage here to create a new base. It will be necessary before exploring further up the mountains.\",\r\n            action_text: \"Working\",\r\n            success_text: \"After a few hours of hard work, your camp is ready. You can rest here before venturing further in the mountains\",\r\n            conditions: [\r\n                {\r\n                    items_by_id: {\"Camping supplies\": {count: 1, remove: true}},\r\n                }\r\n            ],\r\n            is_unlocked: true,\r\n            check_conditions_on_finish: false,\r\n            failure_texts: {\r\n                conditional_loss: [\"You lack camping supplies!\"],\r\n            },\r\n            attempt_duration: 180,\r\n            success_chances: [1],\r\n            rewards: {\r\n                locations: [{location: \"Mountain camp\"}],\r\n                move_to: {location: \"Mountain camp\"},\r\n                locks: {\r\n                    locations: [\"Mountain path\", \"Small flat area in mountains\"],\r\n                }\r\n            },\r\n        }),\r\n    },\r\n    locations[\"Mountain camp\"].actions = {\r\n        \"explore1\": new LocationAction({\r\n            action_id: \"explore1\",\r\n            starting_text: \"Explore the area further\",\r\n            description: \"With the camp created, it's time to keep exploring\",\r\n            action_text: \"Looking around\",\r\n            success_text: \"You find a reasonably gentle mountain slope with green grass and... more angry goats. At least they seem slightly smaller.\",\r\n            failure_texts: {\r\n                random_loss: [\r\n                    \"You looked under rocks and between the bushes, but you found nothing. Keep looking!\", \r\n                    \"You looked and looked, but you couldn't find anything. Rest a bit and go back to it!\",\r\n                ],\r\n            },\r\n            conditions: [],\r\n            is_unlocked: true,\r\n            attempt_duration: 60,\r\n            success_chances: [0.6],\r\n            rewards: {\r\n                locations: [{location: \"Gentle mountain slope\"}],\r\n                actions: [{location:\"Mountain camp\", action: \"explore2\"}]\r\n            },\r\n        }),\r\n        \"explore2\": new LocationAction({\r\n            action_id: \"explore2\",\r\n            starting_text: \"Keep exploring\",\r\n            description: \"You have a feeling that there must be something more of value than just goats.\",\r\n            action_text: \"Looking around\",\r\n            success_text: \"You notice some plants, that you soon recognize as a potent healing ingredient that was mentioned to you by that old craftsman. It's gonna be useful if you know proper recipes.\",\r\n            failure_texts: {\r\n                random_loss: [\r\n                    \"You looked under rocks and between the bushes, but you found nothing. Keep looking!\", \r\n                    \"You looked and looked, but you couldn't find anything. Rest a bit and go back to it!\",\r\n                ],\r\n                conditional_loss: [\r\n                    \"You spot a lot of curious plants. You have a hunch that at least some of them must be useful for something, but you fail to recognize any of them. If only you knew more about herbs...\"\r\n                ]\r\n            },\r\n            conditions: [\r\n                {\r\n                        \r\n                    skills: {\r\n                            \"Herbalism\": 6,\r\n                        },\r\n                },\r\n                {\r\n                        skills: {\r\n                            \"Herbalism\": 10,\r\n                        },\r\n                }\r\n            ],\r\n            is_unlocked: false,\r\n            attempt_duration: 60,\r\n            success_chances: [0.5],\r\n            rewards: {\r\n                activities: [{location:\"Mountain camp\", activity:\"herbalism\"}],\r\n            },\r\n        }),\r\n    }\r\n    locations[\"Forest road\"].actions = {\r\n        \"search for boars\": new LocationAction({\r\n            action_id: \"search for boars\",\r\n            starting_text: \"Search forest for the clearing with boars\",\r\n            description: \"It might take some time and a few attempts, but you are sure you can manage\",\r\n            action_text: \"Searching the forest\",\r\n            success_text: \"There they are! You see a clearing with tall grass and hear unmistakeable grunts and squeals\",\r\n            failure_texts: {\r\n                random_loss: [\r\n                    \"You search for some time, but end up with nothing. Next time you will try a slightly different direction\",\r\n                ],\r\n            },\r\n            attempt_duration: 90,\r\n            success_chances: [0.5],\r\n            rewards: {\r\n                locations: [{location: \"Forest clearing\"}],\r\n            },\r\n        }),\r\n    };\r\n})();\r\n\r\n//setup ids\r\n(function(){\r\n    Object.keys(locations).forEach(location_key => {\r\n        Object.keys(locations[location_key].activities || {}).forEach(activity_key => {\r\n            locations[location_key].activities[activity_key].activity_id = activity_key;\r\n        });\r\n    });\r\n})();\r\nexport {locations, location_types, get_location_type_penalty, favourite_locations};", "\"use strict\";\r\nimport { get_total_skill_level } from \"./character.js\";\r\nimport { skills } from \"./skills.js\";\r\nconst stances = {};\r\n\r\nclass Stance {\r\n    constructor(\r\n            {\r\n                name,\r\n                id,\r\n                related_skill,\r\n                target_count = 1,\r\n                randomize_target_count = false,\r\n                is_unlocked = false,\r\n                stat_multipliers = {},\r\n                stamina_cost = 1,\r\n                description = \"\"\r\n            }\r\n        ) {\r\n            \r\n        if(related_skill && !skills[related_skill]) {\r\n            throw(`Tried to attach skill \"${related_skill}\" to stance \"${name}\", but such a skill doesnt exist!`);\r\n        }\r\n\r\n        this.name = name;\r\n        this.id = id;\r\n        this.related_skill = related_skill;\r\n        this.description = description;\r\n        if(this.target_count < 1) {\r\n            throw(\"Combat stance cannot target less than 1 enemy!\");\r\n        }  \r\n        this.target_count = target_count;\r\n        this.randomize_target_count = randomize_target_count; //if true, the actual target count is a random number in range [1, target_count]\r\n        this.is_unlocked = is_unlocked;\r\n        this.stat_multipliers = stat_multipliers;\r\n        this.stamina_cost = stamina_cost;\r\n    }\r\n\r\n    getDescription = function(){\r\n        if(this.description) {\r\n            return this.description;\r\n        } else if(this.related_skill) {\r\n            return skills[this.related_skill].description;\r\n        }\r\n    }\r\n\r\n    getStats = function() {\r\n        if(!this.related_skill) {\r\n            //no skill, nothing to scale stats with\r\n            return this.stat_multipliers;\r\n        } else {\r\n            const multipliers = {};\r\n            Object.keys(this.stat_multipliers).forEach(stat => {\r\n                if(this.stat_multipliers[stat] < 1) {\r\n                    multipliers[stat] = this.stat_multipliers[stat] + (1 - this.stat_multipliers[stat]) * get_total_skill_level(this.related_skill)/(2*skills[this.related_skill].max_level);\r\n                    //div by 2 because penalties don't get fully nullified, only cut in half (e.g. x0.2->x0.6)\r\n                }\r\n                else {\r\n                    multipliers[stat] =  this.stat_multipliers[stat] + (this.stat_multipliers[stat]-1) * get_total_skill_level(this.related_skill)/skills[this.related_skill].max_level;\r\n                }\r\n            });\r\n            return multipliers;\r\n        }\r\n    }\r\n}\r\n\r\nstances[\"normal\"] = new Stance({\r\n    name: \"Normal Stance\",\r\n    id: \"normal\",\r\n    is_unlocked: true,\r\n    description: \"A normal and basic stance. It doesn't excell in anything, but also doesn't suffer any major flaws and is energy efficient.\",\r\n    stat_multipliers: {}\r\n})\r\n\r\nstances[\"quick\"] = new Stance({\r\n    name: \"Quick Steps\",\r\n    id: \"quick\",\r\n    related_skill: \"Quick steps\",\r\n    description: \"A swift and precise technique that abandons strength in favor of greater speed\",\r\n    stat_multipliers: {\r\n        attack_power: 0.8,\r\n        attack_speed: 1.2\r\n    },\r\n    stamina_cost: 2,\r\n});\r\n\r\nstances[\"heavy\"] = new Stance({\r\n    name: \"Crushing Force\",\r\n    id: \"heavy\",\r\n    related_skill: \"Heavy strike\",\r\n    stat_multipliers: {\r\n        //attack multis are stronger than they appear since enemies have defense stat\r\n        attack_power: 1.2,\r\n        attack_speed: 0.8\r\n    },\r\n    stamina_cost: 2,\r\n});\r\n\r\nstances[\"defensive\"] = new Stance({\r\n    name: \"Defensive Measures\",\r\n    id: \"defensive\",\r\n    related_skill: \"Defensive measures\",\r\n    stat_multipliers: {\r\n        attack_power: 0.8,\r\n        agility: 1.2,\r\n        block_strength: 1.1,\r\n    },\r\n    target_count: 1,\r\n    stamina_cost: 2,\r\n});\r\n\r\nstances[\"wide\"] = new Stance({\r\n    name: \"Broad Arc\",\r\n    id: \"wide\",\r\n    related_skill: \"Wide swing\",\r\n    stat_multipliers: {\r\n        attack_power: 0.4,\r\n    },\r\n    target_count: 4,\r\n    stamina_cost: 4,\r\n});\r\n\r\nstances[\"berserk\"] = new Stance({\r\n    name: \"Berserker's Stride\",\r\n    id: \"berserk\",\r\n    related_skill: \"Berserker's stride\",\r\n    stat_multipliers: {\r\n        attack_power: 1.2,\r\n        hit_chance: 1.2,\r\n        agility: 0.4,\r\n        block_strength: 0.4,\r\n    },\r\n    target_count: 3,\r\n    randomize_target_count: true,\r\n    stamina_cost: 4,\r\n});\r\n\r\nstances[\"flowing water\"] = new Stance({\r\n    name: \"Flowing Water\",\r\n    id: \"flowing water\",\r\n    related_skill: \"Flowing water\",\r\n    stat_multipliers: {\r\n        attack_power: 1.2,\r\n        agility: 1.2,\r\n        attack_speed: 1.2,\r\n    },\r\n    target_count: 2,\r\n    stamina_cost: 4,\r\n});\r\nexport {stances};", "\"use strict\";\r\n\r\nconst game_version = \"v0.4.6.39\";\r\n\r\nfunction get_game_version() {\r\n    return game_version;\r\n}\r\n\r\nexport { game_version, get_game_version }", "import { effect_templates } from \"./active_effects.js\";\r\nimport { activities } from \"./activities.js\";\r\nimport { character } from \"./character.js\";\r\nimport { dialogues } from \"./dialogues.js\";\r\nimport { enemy_templates } from \"./enemies.js\";\r\nimport { item_templates } from \"./items.js\";\r\nimport { locations } from \"./locations.js\";\r\nimport { skills, skill_categories } from \"./skills.js\";\r\nimport { traders } from \"./traders.js\";\r\n//import { quest_templates } from \"./quests.js\"; todo\r\n\r\nfunction Verify_Game_Objects() {\r\n    let results = [0,0];\r\n    let overall_start_time = performance.now();\r\n    let start_time = performance.now();\r\n    let item_results = [0,0];\r\n    console.log(\"Began verifying game objects.\");\r\n    console.log(\"Began verifying items.\");\r\n    for(const [key,item] of Object.entries(item_templates)){\r\n        let has_issue = false;\r\n        if(key !== item.id) {\r\n            console.error(`Id mismatch: \"${key}\" - \"${item.id}\"`);\r\n            has_issue = true;\r\n        }\r\n        if(item.tags.usable) {\r\n            for(let i = 0; i < item.effects.length; i++) {\r\n                if(!effect_templates[item.effects[i].effect]) {\r\n                    console.error(`Effect \"${item.effects[i].effect}\" of item \"${key}\" is not defined in effect templates`);\r\n                    has_issue = true;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        UNNEEDED, check is already done in item creation\r\n        if(item.components) {\r\n            Object.values(item.components).forEach(component => {\r\n                if(!item_templates[component]) {\r\n                    console.error(`Component \"${component}\" of item \"${key}\" is not defined in item templates`);\r\n                    has_issue = true;\r\n                }\r\n            })\r\n        }*/\r\n\r\n        if(item.stats) {\r\n            Object.keys(item.stats).forEach(stat_key => {\r\n                if(character.base_stats[stat_key] === undefined) {\r\n                    console.error(`Item \"${key}\" has a non-existent stat \"${stat_key}\"`);\r\n                    has_issue = true;\r\n                } else {\r\n                    Object.keys(item.stats[stat_key]).forEach(stat_type_key => {\r\n                        if(stat_type_key !== \"multiplier\" && stat_type_key !== \"flat\") {\r\n                            console.error(`Item \"${key}\" has a non-existent stat type \"${stat_type_key}\" (should be 'multiplier' or 'flat')`);\r\n                            has_issue = true;\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        item_results[0]++;\r\n        item_results[1]+=has_issue;\r\n        results[0]++;\r\n        results[1]+=has_issue;\r\n    }\r\n    let end_time = performance.now();\r\n    if(item_results[1] > 0) {\r\n        console.log(`Finished verifying items in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nFound issue in ${item_results[1]} out of ${item_results[0]}`);\r\n    } else {\r\n        console.log(`Finished verifying items in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nNo issues were found.`);\r\n    }\r\n\r\n    start_time = performance.now();\r\n    let skill_results = [0,0];\r\n    console.log(\"Began verifying skills.\");\r\n    for(const [key,skill] of Object.entries(skills)){\r\n        let has_issue = false;\r\n        if(key !== skill.skill_id) {\r\n            console.error(`Id mismatch: \"${key}\" - \"${skill.skill_id}\"`);\r\n            has_issue = true;\r\n        }\r\n\r\n        if(skill.milestones) {\r\n            Object.values(skill.milestones).forEach(milestone => {\r\n                Object.keys(milestone).forEach(milestone_reward_type_key => {\r\n                    if(milestone_reward_type_key !== \"unlocks\" && milestone_reward_type_key !== \"stats\" && milestone_reward_type_key !== \"xp_multipliers\") {\r\n                        console.error(`Skill \"${key}\" has a milestone reward to a non-existent category of \"${milestone_reward_type_key}\"`);\r\n                        has_issue = true;\r\n                    } else {\r\n                        if(milestone_reward_type_key === \"unlocks\"){\r\n                            Object.keys(milestone[milestone_reward_type_key]).forEach(unlock_key => {\r\n                                if(unlock_key !== \"skills\" && unlock_key !== \"recipes\") {\r\n                                    console.error(`Skill \"${key}\" has a milestone reward in form of unlocking \"${unlock_key}\" which is not supported`);\r\n                                    has_issue = true;\r\n                                }\r\n                            });\r\n                        } else if(milestone_reward_type_key === \"stats\"){\r\n                            Object.keys(milestone[milestone_reward_type_key]).forEach(stat_key => {\r\n                                if(character.base_stats[stat_key] === undefined) {\r\n                                    console.error(`Skill \"${key}\" has a milestone reward for a non-existent stat \"${stat_key}\"`);\r\n                                    has_issue = true;\r\n                                }\r\n                                Object.keys(milestone[milestone_reward_type_key][stat_key]).forEach(stat_type=>{\r\n                                    if(stat_type !== \"flat\" && stat_type !== \"multiplier\") {\r\n                                        console.error(`Skill \"${key}\" has a milestone reward to stats of wrong type \"${stat_type}\". Should be \"flat\" or \"multiplier\"`);\r\n                                        has_issue = true;\r\n                                    }\r\n                                });\r\n                            });\r\n                        } else { //xp_multipliers\r\n                            Object.keys(milestone[milestone_reward_type_key]).forEach(skill_key => {\r\n                                if(skill_key !== \"all\" && skill_key !== \"all_skill\" && skill_key !== \"hero\" && !skills[skill_key]) {\r\n                                    if(skill_key.includes(\"category_\")) {\r\n                                        if(!skill_categories[skill_key.replace(\"category_\",\"\")]) {\r\n                                            has_issue = true;\r\n                                            console.error(`Skill \"${key}\" has a milestone reward for a non-existent skill \"${skill_key}\"`);\r\n                                        }\r\n                                    } else {\r\n                                        has_issue = true;\r\n                                        console.error(`Skill \"${key}\" has a milestone reward for a non-existent skill \"${skill_key}\"`);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n                /*\r\n                if(character.base_stats[stat_key] === undefined) {\r\n                    console.error(`Item \"${key}\" has a non-existent stat \"${stat_key}\"`);\r\n                    has_issue = true;\r\n                } else {\r\n                    Object.keys(skill.stats[stat_key]).forEach(stat_type_key => {\r\n                        if(stat_type_key !== \"multiplier\" && stat_type_key !== \"flat\") {\r\n                            console.error(`Item \"${key}\" has a non-existent stat type \"${stat_type_key}\" (should be 'multiplier' or 'flat')`);\r\n                            has_issue = true;\r\n                        }\r\n                    });\r\n                }*/\r\n            });\r\n        }\r\n\r\n        skill_results[0]++;\r\n        skill_results[1]+=has_issue;\r\n        results[0]++;\r\n        results[1]+=has_issue;\r\n    }\r\n    end_time = performance.now();\r\n    if(skill_results[1] > 0) {\r\n        console.log(`Finished verifying skills in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nFound issue in ${skill_results[1]} out of ${skill_results[0]}`);\r\n    } else {\r\n        console.log(`Finished verifying skills in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nNo issues were found.`);\r\n    }\r\n\r\n\r\n    start_time = performance.now();\r\n    let location_results = [0,0];\r\n    console.log(\"Began verifying locations.\");\r\n    for(const [key,location] of Object.entries(locations)){\r\n        let has_issue = false;\r\n        if(key !== location.id) {\r\n            console.error(`Id mismatch: \"${key}\" - \"${location.id}\"`);\r\n            has_issue = true;\r\n        }\r\n        if(location.tags[\"safe_zone\"]) {\r\n            for(let i = 0; i < location.dialogues.length; i++) {\r\n                if(!dialogues[location.dialogues[i]]) {\r\n                    console.error(`Location \"${key}\" refers to a non-existent dialogue \"${dialogues[location.dialogues[i]]}\"`);\r\n                    has_issue = true;\r\n                }\r\n            }\r\n            for(let i = 0; i < location.traders.length; i++) {\r\n                if(!traders[location.traders[i]]) {\r\n                    console.error(`Location \"${key}\" refers to a non-existent trader \"${location.traders[i]}\"`);\r\n                    has_issue = true;\r\n                }\r\n            }\r\n            for(let i = 0; i < location.connected_locations.length; i++) {\r\n                if(!location.connected_locations[i].location) {\r\n                    console.error(`Location \"${key}\" is connected to a non-existent location.`);\r\n                    has_issue = true;\r\n                }\r\n            }\r\n            Object.keys(location.activities).forEach(activity_key => {\r\n                if(!activities[location.activities[activity_key].activity_name]) {\r\n                    console.error(`Location \"${key}\" refers to a non-existent activity \"${location.activities[activity_key].activity_name}\"`);\r\n                    has_issue = true;\r\n                }\r\n                for(let i = 0; i < location.activities[activity_key].gained_resources?.length; i++) {\r\n                    if(!item_templates[location.activities[activity_key].gained_resources.resources[i].name]) {\r\n                        console.error(`Activity \"${activity_key}\" in location \"${key}\" refers to a non-existent item \"${location.activities[activity_key].gained_resources.resources[i].name}\"`);\r\n                        has_issue = true;\r\n                    }\r\n                }   \r\n            });\r\n        } else if(location.tags[\"Combat zone\"]) {\r\n            //todo: check enemies\r\n        }\r\n\r\n        location_results[0]++;\r\n        location_results[1]+=has_issue;\r\n        results[0]++;\r\n        results[1]+=has_issue;\r\n    }\r\n    end_time = performance.now();\r\n    if(location_results[1] > 0) {\r\n        console.log(`Finished verifying locations in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nFound issue in ${location_results[1]} out of ${location_results[0]}`);\r\n    } else {\r\n        console.log(`Finished verifying locations in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nNo issues were found.`);\r\n    }\r\n\r\n    start_time = performance.now();\r\n    let enemy_results = [0,0];\r\n    console.log(\"Began verifying enemies.\");\r\n    for(const [key,enemy] of Object.entries(enemy_templates)){\r\n        let has_issue = false;\r\n        if(key !== enemy.id) {\r\n            console.error(`Id mismatch: \"${key}\" - \"${enemy.id}\"`);\r\n            has_issue = true;\r\n        }\r\n\r\n        for(let i = 0; i < enemy.loot_list.length; i++) {\r\n            if(!item_templates[enemy.loot_list[i].item_name]) {\r\n                console.error(`Enemy \"${key}\" refers to a non-existent item \"${enemy.loot_list[i].item_name}\"`);\r\n                has_issue = true;\r\n            }\r\n        }\r\n\r\n        enemy_results[0]++;\r\n        enemy_results[1]+=has_issue;\r\n        results[0]++;\r\n        results[1]+=has_issue;\r\n    }\r\n    end_time = performance.now();\r\n    if(location_results[1] > 0) {\r\n        console.log(`Finished verifying enemies in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nFound issue in ${enemy_results[1]} out of ${enemy_results[0]}`);\r\n    } else {\r\n        console.log(`Finished verifying enemies in: ${Math.round(1000000*(end_time-start_time))/1000000}s\\nNo issues were found.`);\r\n    }\r\n\r\n\r\n    let overall_end_time = performance.now();\r\n    if(results[1] > 0) {\r\n        console.log(`Finished verifying game objects in: ${Math.round(1000000*(overall_end_time-overall_start_time))/1000000}s\\nFound issue in ${results[1]} out of ${results[0]}`);\r\n    } else {\r\n        console.log(`Finished verifying game objects in: ${Math.round(1000000*(overall_end_time-overall_start_time))/1000000}s\\nNo issues were found.`);\r\n    }\r\n}\r\n\r\nexport {\r\n    Verify_Game_Objects\r\n}", "import { character } from \"./character.js\";\r\n\r\nconst ReputationManager = {\r\n\r\n    add_reputation: ({reputation, region}) => {\r\n        if(Number.isInteger(reputation)) {\r\n            if(region in character.reputation) {\r\n                character.reputation[region] += reputation;\r\n            } else {\r\n                throw new Error(`Tried to add reputation to \"${region}\", which is not a valid reputation region!`);\r\n            }\r\n        } else {\r\n            throw new Error(`Tried to add \"${reputation}\", which is not a valid integer!`);\r\n        }\r\n    },\r\n\r\n\r\n    //for future: some unlocks for reaching certain values?\r\n    //they could be handled via unmarked quests, but doing that here should be cleaner\r\n}\r\n\r\n\r\nexport {ReputationManager}", "\"use strict\";\r\n\r\nimport { current_game_time, is_night } from \"./game_time.js\";\r\nimport { item_templates, getItem, book_stats, setLootSoldCount, loot_sold_count, recoverItemPrices, rarity_multipliers, getArmorSlot, getItemFromKey, getItemRarity} from \"./items.js\";\r\nimport { locations, favourite_locations } from \"./locations.js\";\r\nimport { skill_categories, skills, weapon_type_to_skill, which_skills_affect_skill } from \"./skills.js\";\r\nimport { dialogues } from \"./dialogues.js\";\r\nimport { enemy_killcount } from \"./enemies.js\";\r\nimport { traders } from \"./traders.js\";\r\nimport { is_in_trade, start_trade, cancel_trade, accept_trade, exit_trade, add_to_trader_inventory,\r\n         add_to_buying_list, remove_from_buying_list, add_to_selling_list, remove_from_selling_list} from \"./trade.js\";\r\nimport { character, \r\n         add_to_character_inventory, remove_from_character_inventory,\r\n         equip_item_from_inventory, unequip_item, equip_item,\r\n         update_character_stats,\r\n         get_skill_xp_gain, \r\n         get_total_skill_coefficient,\r\n         get_total_skill_level} from \"./character.js\";\r\nimport { activities } from \"./activities.js\";\r\nimport { end_activity_animation, \r\n         update_displayed_character_inventory, update_displayed_trader_inventory, sort_displayed_inventory, sort_displayed_skills,\r\n         update_displayed_money, log_message,\r\n         update_displayed_enemies, update_displayed_health_of_enemies,\r\n         update_displayed_combat_location, update_displayed_normal_location,\r\n         log_loot, update_displayed_equipment,\r\n         update_displayed_health, update_displayed_stamina,\r\n         format_money, update_displayed_stats,\r\n         update_displayed_effects, update_displayed_effect_durations,\r\n         update_displayed_time, update_displayed_character_xp, \r\n         update_displayed_dialogue, update_displayed_textline_answer,\r\n         start_activity_display, start_sleeping_display,\r\n         create_new_skill_bar, update_displayed_skill_bar, update_displayed_skill_description,\r\n         update_displayed_ongoing_activity, \r\n         update_enemy_attack_bar, update_character_attack_bar,\r\n         remove_fast_travel_choice,\r\n         create_new_bestiary_entry,\r\n         update_bestiary_entry,\r\n         start_reading_display,\r\n         update_displayed_xp_bonuses, \r\n         update_displayed_skill_xp_gain, update_all_displayed_skills_xp_gain, update_displayed_stance_list, \r\n         update_displayed_stamina_efficiency, update_displayed_stance, update_displayed_faved_stances, update_stance_tooltip,\r\n         update_gathering_tooltip,\r\n         open_crafting_window,\r\n         update_displayed_location_types,\r\n         close_crafting_window,\r\n         switch_crafting_recipes_page,\r\n         switch_crafting_recipes_subpage,\r\n         create_displayed_crafting_recipes,\r\n         update_displayed_component_choice,\r\n         update_displayed_material_choice,\r\n         update_recipe_tooltip,\r\n         update_displayed_crafting_recipes,\r\n         update_item_recipe_visibility,\r\n         update_item_recipe_tooltips,\r\n         update_displayed_book,\r\n         update_backup_load_button,\r\n         update_other_save_load_button,\r\n         start_location_action_display,\r\n         set_location_action_finish_text,\r\n         update_location_action_progress_bar,\r\n         update_location_action_finish_button,\r\n         update_displayed_storage_inventory,\r\n         update_location_icon,\r\n        } from \"./display.js\";\r\nimport { compare_game_version, get_hit_chance, is_a_older_than_b } from \"./misc.js\";\r\nimport { stances } from \"./combat_stances.js\";\r\nimport { get_recipe_xp_value, recipes } from \"./crafting_recipes.js\";\r\nimport { game_version, get_game_version } from \"./game_version.js\";\r\nimport { ActiveEffect, effect_templates } from \"./active_effects.js\";\r\nimport { open_storage, close_storage, move_item_to_storage, remove_item_from_storage, player_storage, is_storage_open } from \"./storage.js\";\r\nimport { Verify_Game_Objects } from \"./verifier.js\";\r\nimport { ReputationManager } from \"./reputation.js\";\r\n\r\nconst save_key = \"save data\";\r\nconst dev_save_key = \"dev save data\";\r\nconst backup_key = \"backup save\";\r\nconst dev_backup_key = \"dev backup save\";\r\n\r\nconst global_flags = {\r\n    is_gathering_unlocked: false,\r\n    is_crafting_unlocked: false,\r\n    is_deep_forest_beaten: false,\r\n};\r\nconst flag_unlock_texts = {\r\n    is_gathering_unlocked: \"You have gained the ability to gather new materials! Remember to equip your tools first <br>[Note: equipped tools do not appear in inventory as you will be swapping them very rarely]\",\r\n    is_crafting_unlocked: \"You have gained the ability to craft items and equipment!\",\r\n}\r\n\r\n//in seconds\r\nlet total_playtime = 0;\r\n\r\n//some random stats to keep count of in case they ever become relevant\r\nlet total_deaths = 0;\r\nlet total_crafting_attempts = 0;\r\nlet total_crafting_successes = 0;\r\nlet total_kills = 0; \r\nlet total_crits_done = 0;\r\nlet total_crits_taken = 0;\r\nlet total_hits_done = 0;\r\nlet total_hits_taken = 0;\r\nlet strongest_hit = 0;\r\nlet gathered_materials = {};\r\n\r\n\r\n//current enemy\r\nlet current_enemies = null;\r\n\r\nconst enemy_attack_loops = {};\r\nlet enemy_attack_cooldowns;\r\nlet enemy_timer_variance_accumulator = [];\r\nlet enemy_timer_adjustment = [];\r\nlet enemy_timers = [];\r\nlet character_attack_loop;\r\n\r\nlet character_timer_variance_accumulator = 0;\r\nlet character_timer_adjustment = 0;\r\nlet character_timers = [];\r\n\r\nconst maximum_time_correction = 10;\r\n//maximum time correction for combat, in miliseconds\r\n\r\n//current location\r\nlet current_location;\r\n\r\nlet current_activity;\r\n\r\nlet location_action_interval;\r\nlet current_location_action;\r\n\r\n//time needed to travel from A to B\r\nconst travel_times = {};\r\n\r\n//locations for fast travel\r\nlet unlocked_beds = {};\r\n\r\n//resting, true -> health regenerates\r\nlet is_resting = true;\r\n\r\n//sleeping, true -> health regenerates, timer goes up faster\r\nlet is_sleeping = false;\r\n\r\nlet last_location_with_bed = null; //actually last location where player slept!\r\nlet last_combat_location = null;\r\n\r\n//reading, either null or book name\r\nlet is_reading = null;\r\n\r\n//ticks between saves, 60 = ~1 minute\r\nlet save_period = 60;\r\nlet save_counter = 0;\r\n\r\n//ticks between saves, 60 = ~1 minute\r\nlet backup_period = 3600;\r\nlet backup_counter = 0;\r\n\r\n//accumulates deviations\r\nlet time_variance_accumulator = 0;\r\n//all 3 used for calculating and adjusting tick durations\r\nlet time_adjustment = 0;\r\nlet start_date;\r\nlet end_date;\r\n\r\nlet current_dialogue;\r\nconst active_effects = {};\r\n//e.g. health regen from food\r\n\r\nlet selected_stance = stances[\"normal\"];\r\nlet current_stance = stances[\"normal\"];\r\nconst faved_stances = {};\r\n\r\nconst favourite_consumables = {};\r\n//consumables that are to be used automatically if their effect runs out\r\n\r\nconst tickrate = 1;\r\n//how many ticks per second\r\n//1 is the default value; going too high might make the game unstable\r\n\r\nconst global_xp_multiplier = 1;\r\n\r\n//stuff from options panel\r\nconst options = {\r\n    uniform_text_size_in_action: false,\r\n    auto_return_to_bed: true,\r\n    remember_message_log_filters: false,\r\n    remember_sorting_options: false,\r\n    combat_disable_autoswitch: false,\r\n    log_every_gathering_period: true,\r\n    log_total_gathering_gain: true,\r\n    auto_use_when_longest_runs_out: true,\r\n};\r\n\r\nlet message_log_filters = {\r\n    unlocks: true,\r\n    events: true,\r\n    combat: true,\r\n    loot: true,\r\n    crafting: true,\r\n    background: true,\r\n};\r\n\r\n//enemy crit stats\r\nconst enemy_crit_chance = 0.1;\r\nconst enemy_crit_damage = 2; //multiplier, not a flat bonus\r\n\r\n//character name\r\nconst name_field = document.getElementById(\"character_name_field\");\r\nname_field.value = character.name;\r\nname_field.addEventListener(\"change\", () => character.name = name_field.value.toString().trim().length>0?name_field.value:\"Hero\");\r\n\r\nconst time_field = document.getElementById(\"time_div\");\r\ntime_field.innerHTML = current_game_time.toString();\r\n\r\n(function setup(){\r\n    Object.keys(skills).forEach(skill => {\r\n        character.xp_bonuses.total_multiplier[skill] = 1;\r\n        character.bonus_skill_levels.full[skill] = 0;\r\n    });\r\n    \r\n    Object.keys(skill_categories).forEach(category => {\r\n        character.xp_bonuses.total_multiplier[\"category_\"+category] = 1;\r\n    });\r\n})();\r\n\r\nfunction option_uniform_textsize(option) {\r\n    //doesn't really force same textsize, just changes some variables so they match\r\n    const checkbox = document.getElementById(\"options_textsize\");\r\n    if(checkbox.checked || option) {\r\n        options.uniform_text_size_in_action = true;    \r\n        document.documentElement.style.setProperty('--options_action_textsize', '20px');\r\n    } else {\r\n        options.uniform_text_size_in_action = false;\r\n        document.documentElement.style.setProperty('--options_action_textsize', '16px');\r\n    }\r\n\r\n    if(option) {\r\n        checkbox.checked = option;\r\n    }\r\n}\r\n\r\nfunction option_bed_return(option) {\r\n    const checkbox = document.getElementById(\"options_bed_return\");\r\n    if(checkbox.checked || option) {\r\n        options.auto_return_to_bed = true;\r\n    } else {\r\n        options.auto_return_to_bed = false;\r\n    }\r\n\r\n    if(option) {\r\n        checkbox.checked = option;\r\n    }\r\n}\r\n\r\nfunction option_remember_filters(option) {\r\n    const checkbox = document.getElementById(\"options_save_messagelog_settings\");\r\n    if(checkbox.checked || option) {\r\n        options.remember_message_log_filters = true;\r\n    } else {\r\n        options.remember_message_log_filters = false;\r\n    }\r\n\r\n    if(option) {\r\n        checkbox.checked = option;\r\n\r\n        if(message_log_filters.unlocks){\r\n            document.documentElement.style.setProperty('--message_unlocks_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_unlocks_display', 'none');\r\n            document.getElementById(\"message_show_unlocks\").classList.remove(\"active_selection_button\");\r\n        }\r\n\r\n        if(message_log_filters.combat) {\r\n            document.documentElement.style.setProperty('--message_combat_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_combat_display', 'none');\r\n            document.getElementById(\"message_show_combat\").classList.remove(\"active_selection_button\");\r\n        }\r\n\r\n        if(message_log_filters.events) {\r\n            document.documentElement.style.setProperty('--message_events_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_events_display', 'none');\r\n            document.getElementById(\"message_show_events\").classList.remove(\"active_selection_button\");\r\n        }\r\n\r\n        if(message_log_filters.loot) {\r\n            document.documentElement.style.setProperty('--message_loot_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_loot_display', 'none');\r\n            document.getElementById(\"message_show_loot\").classList.remove(\"active_selection_button\");\r\n        }\r\n\r\n        if(message_log_filters.crafting) {\r\n            document.documentElement.style.setProperty('--message_crafting_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_crafting_display', 'none');\r\n            document.getElementById(\"message_show_crafting\").classList.remove(\"active_selection_button\");\r\n        }\r\n\r\n        if(message_log_filters.background) {\r\n            document.documentElement.style.setProperty('--message_background_display', 'inline-block');\r\n        } else {\r\n            document.documentElement.style.setProperty('--message_background_display', 'none');\r\n            document.getElementById(\"message_show_background\").classList.remove(\"active_selection_button\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction option_combat_autoswitch(option) {\r\n    const checkbox = document.getElementById(\"options_dont_autoswitch_to_combat\");\r\n\r\n    if(checkbox.checked || option) {\r\n        options.disable_combat_autoswitch = true;\r\n    } else {\r\n        options.disable_combat_autoswitch = false;\r\n    }\r\n\r\n    if(option) {\r\n        checkbox.checked = option;\r\n    }\r\n}\r\n\r\nfunction option_log_all_gathering(option) {\r\n    const checkbox = document.getElementById(\"options_log_all_gathering\");\r\n\r\n    if(checkbox.checked || option) {\r\n        options.log_every_gathering_period = true;\r\n    } else {\r\n        options.log_every_gathering_period = false;\r\n    }\r\n    if(option) {\r\n        checkbox.checked = option;\r\n    }\r\n}\r\n\r\nfunction option_log_gathering_result(option) {\r\n    const checkbox = document.getElementById(\"options_log_gathering_result\");\r\n\r\n    if(checkbox.checked || option) {\r\n        options.log_total_gathering_gain = true;\r\n    } else {\r\n        options.log_total_gathering_gain = false;\r\n    }\r\n\r\n    if(option) {\r\n        checkbox.checked = option;\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} location_name actually a location id\r\n */\r\nfunction change_location(location_name, event) {\r\n    if(event?.target.classList.contains(\"fast_travel_removal_button\")) {\r\n        return;\r\n    }\r\n\r\n    let location = locations[location_name] || current_location;\r\n\r\n    if(location_name !== current_location?.name && location.is_finished) {\r\n        //refuse to change location if it's finished and it's not the current one\r\n        return;\r\n    }\r\n\r\n    clear_all_enemy_attack_loops();\r\n    clear_character_attack_loop();\r\n    clear_enemies();\r\n\r\n    if(!location) {\r\n        throw `No such location as \"${location_name}\"`;\r\n    }\r\n\r\n    if(typeof current_location !== \"undefined\" && current_location.id !== location.id){\r\n        //so it's not called when initializing the location on page load or on reloading current location due to new unlocks\r\n        log_message(`[ Entering ${location.id} ]`, \"message_travel\");\r\n    \r\n        //search if it's connected, if so check time\r\n        const connection = current_location.connected_locations?.filter(conn => conn.location.id === location_name)[0];\r\n        if(connection) {\r\n            //update_timer(connection.time_needed);\r\n        } else {\r\n        //otherwise, search for it in fast travel data, which still needs to be filled with pathfinded times\r\n            if(travel_times[current_location?.id]?.[location_name]) {\r\n                //?\r\n                //update_timer(travel_times[current_location.name][location_name]);\r\n            }\r\n        //otherwise, just don't increase timer?\r\n        }\r\n    }\r\n\r\n    if(location.crafting) {\r\n        update_displayed_crafting_recipes();\r\n    }\r\n    \r\n    current_location = location;\r\n\r\n    update_character_stats();\r\n\r\n    if(\"connected_locations\" in current_location) { \r\n        // basically means it's a normal location and not a combat zone (as combat zone has only \"parent\")\r\n        update_displayed_normal_location(current_location);\r\n    } else { //so if entering combat zone\r\n        update_displayed_combat_location(current_location);\r\n        start_combat();\r\n\r\n        if(!current_location.is_challenge) {\r\n            last_combat_location = current_location.id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction handle_location_icon_click() {\r\n    if(current_location.housing && current_location.housing.is_unlocked) {\r\n        return;\r\n        //nothing\r\n    } else if(favourite_locations[current_location.id]) {\r\n        remove_location_from_favourites({location_id: current_location.id, update_choices: false});\r\n    } else {\r\n        add_location_to_favourites({location_id: current_location.id});\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} selected_activity - {id} of activity in Location's activities list??\r\n */\r\nfunction start_activity(selected_activity) {\r\n    current_activity = Object.assign({},current_location.activities[selected_activity]);\r\n    current_activity.id = selected_activity;\r\n\r\n    if(!activities[current_activity.activity_name]) {\r\n        throw `No such activity as ${current_activity.activity_name} could be found`;\r\n    }\r\n\r\n    if(activities[current_activity.activity_name].type === \"JOB\") {\r\n        if(!can_work(current_activity)) {\r\n            current_activity = null;\r\n            return;\r\n        }\r\n\r\n        current_activity.earnings = 0;\r\n        current_activity.working_time = 0;\r\n\r\n    } else if(activities[current_activity.activity_name].type === \"TRAINING\") {\r\n        //\r\n    } else if(activities[current_activity.activity_name].type === \"GATHERING\") { \r\n        \r\n        let has_proper_tool = !activities[current_activity.activity_name].required_tool_type || character.equipment[activities[current_activity.activity_name].required_tool_type];\r\n        //just check if slot is not empty\r\n\r\n        if(!has_proper_tool) {\r\n            log_message(\"You need to equip a proper tool to do that!\");\r\n            current_activity = null;\r\n            return;\r\n        }\r\n        current_activity.gathered_materials = {};\r\n    } else throw `\"${activities[current_activity.activity_name].type}\" is not a valid activity type!`;\r\n\r\n    current_activity.gathering_time = 0;\r\n    if(current_activity.gained_resources) {\r\n        current_activity.gathering_time_needed = current_activity.getActivityEfficiency().gathering_time_needed;\r\n    }\r\n\r\n    start_activity_display(current_activity);\r\n}\r\n\r\nfunction end_activity() {\r\n    \r\n    log_message(`${character.name} finished ${current_activity.activity_name}`, \"activity_finished\");\r\n    \r\n    if(current_activity.earnings) {\r\n        log_message(`${character.name} earned ${format_money(current_activity.earnings)}`, \"activity_money\");\r\n        add_money_to_character(current_activity.earnings);\r\n    }\r\n\r\n    if(current_activity.gathered_materials && options.log_total_gathering_gain) {\r\n        const loot = []; \r\n        Object.keys(current_activity.gathered_materials).forEach(mat_key => {\r\n            loot.push({item_key: mat_key, count: current_activity.gathered_materials[mat_key]});\r\n        });\r\n\r\n        log_loot({loot_list: loot, is_a_summary: true});\r\n    }\r\n    end_activity_animation(); //clears the \"animation\"\r\n    current_activity = null;\r\n    change_location(current_location.id);\r\n}\r\n\r\n/**\r\n * Starts selected action, checks conditions if applicable, launches action animations\r\n * @param {*} selected_action \r\n * @returns \r\n */\r\nfunction start_location_action(selected_action) {\r\n    current_location_action = selected_action;\r\n    const location_action = current_location.actions[selected_action];\r\n    let conditions_status; //[0,...,1]\r\n\r\n    start_location_action_display(selected_action);\r\n\r\n    if(!location_action.can_be_started(character)) {\r\n        finish_location_action(selected_action, -1);\r\n        return;\r\n    }\r\n    \r\n    if(!location_action.check_conditions_on_finish) {\r\n        conditions_status = location_action.get_conditions_status(character);\r\n\r\n        if(conditions_status == 0) {\r\n            finish_location_action(selected_action, 0);\r\n            return;\r\n        }\r\n    }\r\n\r\n    if(location_action.attempt_duration > 0) {\r\n        let current_iterations = 0;\r\n        const total_iterations = location_action.attempt_duration/0.1;\r\n\r\n        location_action_interval = setInterval(()=>{\r\n            if(current_iterations >= total_iterations - 1) {\r\n                clearInterval(location_action_interval);\r\n                finish_location_action(selected_action, conditions_status);\r\n            }\r\n\r\n            current_iterations++;\r\n            update_location_action_progress_bar(current_iterations/total_iterations);\r\n        }, 1000*0.1/tickrate);\r\n    } else {\r\n        finish_location_action(selected_action, conditions_status);\r\n        update_location_action_progress_bar(1);\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the finish, successful or not, of a location action. Not to be mistaken for end_location_action\r\n * @param {String} selected_action \r\n * @param {Number} conditions_status\r\n */\r\nfunction finish_location_action(selected_action, conditions_status){\r\n    end_activity_animation(true);\r\n\r\n    const action = current_location.actions[selected_action];\r\n\r\n    if(typeof conditions_status === 'undefined') {\r\n        conditions_status = current_location.actions[selected_action].get_conditions_status(character);\r\n    }\r\n    \r\n    let result_message = 'If you see this, Miktaew screwed something up. Whoops!';\r\n\r\n    if(conditions_status == -1) {\r\n        //not meeting requirements to begin\r\n        result_message = action.failure_texts.unable_to_begin[Math.floor(action.failure_texts.unable_to_begin.length * Math.random())];\r\n    } else if(conditions_status == 0) {\r\n        //lost by failing to meet conditions, nothing to check, deal with it\r\n        result_message = action.failure_texts.conditional_loss[Math.floor(action.failure_texts.conditional_loss.length * Math.random())];\r\n    } else {\r\n        const action_result = get_location_action_result(selected_action, conditions_status);\r\n        let is_won = false;\r\n        if(action_result > Math.random()) {\r\n            //win\r\n\r\n            result_message = action.success_text;\r\n            action.is_finished = true;\r\n            process_rewards({rewards: action.rewards, source_type: \"action\"});\r\n            is_won = true;\r\n        } else {\r\n            //random loss\r\n\r\n            result_message = action.failure_texts.random_loss[Math.floor(action.failure_texts.random_loss.length * Math.random())];\r\n        }\r\n\r\n        Object.keys(action.conditions[0]?.items_by_id || {}).forEach(item_id => {\r\n            //no need to check if they are in inventory, as without them action would have been conditionally failed before reaching here\r\n            if(action.conditions[0].items_by_id[item_id].remove) {\r\n                remove_from_character_inventory([{item_key: item_templates[item_id].getInventoryKey(), item_count: action.conditions[0].items_by_id[item_id].count}]);\r\n            }\r\n        });\r\n        Object.keys(action.required.items_by_id || {}).forEach(item_id => {\r\n            //again no need to check\r\n            if(action.required.items_by_id[item_id].remove_on_success && is_won || action.required.items_by_id[item_id].remove_on_fail && !is_won) {\r\n                remove_from_character_inventory([{item_key: item_templates[item_id].getInventoryKey(), item_count: action.required.items_by_id[item_id].count}]);\r\n            }\r\n        });\r\n    }\r\n\r\n    set_location_action_finish_text(result_message);\r\n    update_location_action_finish_button();\r\n}\r\n\r\n/**\r\n * Handles giving up / leaving after success from a location action. Not to be mistaken for finish_location_action\r\n */\r\nfunction end_location_action() {\r\n    end_activity_animation();\r\n    clearInterval(location_action_interval);\r\n    current_location_action = null;\r\n    change_location(current_location.id);\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} selected_action \r\n * @param {Number} conditions_status assumed to be more than 0\r\n * @returns {Boolean} did_succeed\r\n */\r\nfunction get_location_action_result(selected_action, conditions_status) {\r\n    const action = current_location.actions[selected_action];\r\n\r\n    if(action.success_chances.length == 1) {\r\n        return action.success_chances[0];\r\n    } else if(conditions_status == 1 && action.success_chances[1]) {\r\n        return action.success_chances[1];\r\n    } else {\r\n        return action.success_chances[0] + (action.success_chances[1]-action.success_chances[0]) * conditions_status;\r\n    }\r\n}\r\n\r\n/**\r\n * @description Unlocks an activity and adds a proper message to the message log. NOT called on loading a save.\r\n * @param {Object} activity_data {activity, location_name}\r\n */\r\nfunction unlock_activity(activity_data) {\r\n    if(!activity_data.activity.is_unlocked){\r\n        activity_data.activity.is_unlocked = true;\r\n        \r\n        let message = \"\";\r\n        if(locations[activity_data.location].activities[activity_data.activity.activity_id].unlock_text) {\r\n           message = locations[activity_data.location].activities[activity_data.activity.activity_id].unlock_text+\":<br>\";\r\n        }\r\n        log_message(message + `Unlocked activity \"${activity_data.activity.activity_name}\" in location \"${activity_data.location}\"`, \"activity_unlocked\");\r\n    }\r\n}\r\n\r\nfunction unlock_action(action_data) {\r\n    if(!action_data.action.is_unlocked){\r\n        action_data.action.is_unlocked = true;\r\n        \r\n        let message = \"\";\r\n        if(locations[action_data.location].actions[action_data.action.action_id].unlock_text) {\r\n           message = locations[action_data.location].actions[action_data.action.action_id].unlock_text+\":<br>\";\r\n        }\r\n        log_message(message + `Unlocked action \"${action_data.action.action_name}\" in location \"${action_data.location}\"`, \"activity_unlocked\");\r\n    }\r\n}\r\n\r\nfunction add_money_to_character(money_num) {\r\n    character.money += money_num;\r\n    update_displayed_money();\r\n}\r\n\r\n//single tick of resting\r\nfunction do_resting() {\r\n    if(character.stats.full.health < character.stats.full.max_health) {\r\n        const resting_heal_ammount = Math.max(character.stats.full.max_health * 0.01,2); \r\n        //todo: scale it with skill, because why not?; maybe up to x2 bonus\r\n\r\n        character.stats.full.health += (resting_heal_ammount);\r\n        if(character.stats.full.health > character.stats.full.max_health) {\r\n            character.stats.full.health = character.stats.full.max_health;\r\n        } \r\n        update_displayed_health();\r\n    }\r\n\r\n    if(character.stats.full.stamina < character.stats.full.max_stamina) {\r\n        const resting_stamina_ammount = Math.round(Math.max(character.stats.full.max_stamina/120, 2)); \r\n        //todo: scale it with skill as well\r\n\r\n        character.stats.full.stamina += (resting_stamina_ammount);\r\n        if(character.stats.full.stamina > character.stats.full.max_stamina) {\r\n            character.stats.full.stamina = character.stats.full.max_stamina;\r\n        } \r\n        \r\n        update_displayed_stamina();\r\n    }\r\n}\r\n\r\nfunction do_sleeping() {\r\n    if(character.stats.full.health < character.stats.full.max_health) {\r\n        const sleeping_heal_ammount = Math.round(Math.max(character.stats.full.max_health * 0.04, 5) * (1 + get_total_skill_level(\"Sleeping\")/skills[\"Sleeping\"].max_level));\r\n        \r\n        character.stats.full.health += (sleeping_heal_ammount);\r\n        if(character.stats.full.health > character.stats.full.max_health) {\r\n            character.stats.full.health = character.stats.full.max_health;\r\n        } \r\n        update_displayed_health();\r\n    }\r\n\r\n    if(character.stats.full.stamina < character.stats.full.max_stamina) {\r\n        const sleeping_stamina_ammount = Math.round(Math.max(character.stats.full.max_stamina/30, 5) * (1 + get_total_skill_level(\"Sleeping\")/skills[\"Sleeping\"].max_level)); \r\n\r\n        character.stats.full.stamina += (sleeping_stamina_ammount);\r\n        if(character.stats.full.stamina > character.stats.full.max_stamina) {\r\n            character.stats.full.stamina = character.stats.full.max_stamina;\r\n        } \r\n        update_displayed_stamina();\r\n    }\r\n}\r\n\r\nfunction start_sleeping() {\r\n    start_sleeping_display();\r\n    is_sleeping = true;\r\n\r\n    last_location_with_bed = current_location.id;\r\n}\r\n\r\nfunction end_sleeping() {\r\n    is_sleeping = false;\r\n    change_location(current_location.id);\r\n    end_activity_animation();\r\n}\r\n\r\nfunction start_reading(book_key) {\r\n    \r\n    const book_id = is_JSON(book_key)?JSON.parse(book_key).id:book_key;\r\n    if(current_location?.parent_location) {\r\n        return; //no reading in combat areas\r\n    }\r\n\r\n    if(is_reading === book_id) {\r\n        end_reading();\r\n        return; \r\n        //reading the same one, cancel\r\n    } else if(is_reading) {\r\n        end_reading();\r\n    }\r\n\r\n    if(book_stats[book_id].is_finished) {\r\n        return; //already read\r\n    }\r\n\r\n    if(is_sleeping) {\r\n        end_sleeping();\r\n    }\r\n    if(current_activity) {\r\n        end_activity();\r\n    }\r\n\r\n\r\n    is_reading = book_id;\r\n    start_reading_display(book_id);\r\n\r\n    update_displayed_book(is_reading);\r\n}\r\n\r\nfunction end_reading() {\r\n    change_location(current_location.id);\r\n    end_activity_animation();\r\n    \r\n    const book_id = is_reading;\r\n    is_reading = null;\r\n\r\n    update_displayed_book(book_id);\r\n}\r\n\r\nfunction do_reading() {\r\n    item_templates[is_reading].addProgress();\r\n\r\n    update_displayed_book(is_reading);\r\n\r\n    add_xp_to_skill({skill: skills[\"Literacy\"], xp_to_add: book_stats.literacy_xp_rate});\r\n    const book = book_stats[is_reading];\r\n    if(book_stats[is_reading].is_finished) {\r\n        log_message(`Finished the book \"${is_reading}\"`);\r\n        end_reading();\r\n        update_character_stats();\r\n        process_rewards({rewards: book.rewards});\r\n    }\r\n}\r\n\r\nfunction get_current_book() {\r\n    return is_reading;\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} selected_job location job property\r\n * @returns if current time is within working hours\r\n */\r\nfunction can_work(selected_job) {\r\n    //if can start at all\r\n    if(!selected_job.infinite) {\r\n        if(selected_job.availability_time.end > selected_job.availability_time.start) {\r\n            //ends on the same day\r\n            if(current_game_time.hour * 60 + current_game_time.minute > selected_job.availability_time.end*60\r\n                ||  //too late\r\n                current_game_time.hour * 60 + current_game_time.minute < selected_job.availability_time.start*60\r\n                ) {  //too early\r\n                \r\n                return false;\r\n            }\r\n        } else {\r\n            //ends on the next day (i.e. working through the night)        \r\n            if(current_game_time.hour * 60 + current_game_time.minute > selected_job.availability_time.start*60\r\n                //too late\r\n                ||\r\n                current_game_time.hour * 60 + current_game_time.minute < selected_job.availability_time.end*60\r\n                //too early\r\n\r\n            ) {  \r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {} selected_job location job property\r\n * @returns if there's enough time to earn anything\r\n */\r\nfunction enough_time_for_earnings(selected_job) {\r\n\r\n    if(!selected_job.infinite) {\r\n        //if enough time for at least 1 working period\r\n        if(selected_job.availability_time.end > selected_job.availability_time.start) {\r\n            //ends on the same day\r\n            if(current_game_time.hour * 60 + current_game_time.minute + selected_job.working_period - selected_job.working_time%selected_job.working_period > selected_job.availability_time.end*60\r\n                ||  //not enough time left for another work period\r\n                current_game_time.hour * 60 + current_game_time.minute < selected_job.availability_time.start*60\r\n                ) {  //too early to start (shouldn't be allowed to start and get here at all)\r\n                return false;\r\n            }\r\n        } else {\r\n            //ends on the next day (i.e. working through the night)        \r\n            if(current_game_time.hour * 60 + current_game_time.minute > selected_job.availability_time.start*60\r\n                //timer is past the starting hour, so it's the same day as job starts\r\n                && \r\n                current_game_time.hour * 60 + current_game_time.minute + selected_job.working_period  - selected_job.working_time%selected_job.working_period > selected_job.availability_time.end*60 + 24*60\r\n                //time available on this day + time available on next day are less than time needed\r\n                ||\r\n                current_game_time.hour * 60 + current_game_time.minute < selected_job.availability_time.start*60\r\n                //timer is less than the starting hour, so it's the next day\r\n                &&\r\n                current_game_time.hour * 60 + current_game_time.minute + selected_job.working_period  - selected_job.working_time%selected_job.working_period > selected_job.availability_time.end*60\r\n                //time left on this day is not enough to finish\r\n                ) {  \r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} dialogue_key \r\n */\r\nfunction start_dialogue(dialogue_key) {\r\n    current_dialogue = dialogue_key;\r\n\r\n    update_displayed_dialogue(dialogue_key);\r\n    if(!document.getElementById(\"dialogue_answer_div\").innerHTML) {\r\n        update_displayed_textline_answer({text: dialogues[dialogue_key].getDescription(), is_description: true});\r\n    }\r\n}\r\n\r\nfunction end_dialogue() {\r\n    current_dialogue = null;\r\n    reload_normal_location();\r\n}\r\nfunction reload_normal_location() {\r\n    update_displayed_normal_location(current_location);\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} textline_key \r\n */\r\nfunction start_textline(textline_key){\r\n    const dialogue = dialogues[current_dialogue];\r\n    const textline = dialogue.textlines[textline_key];\r\n\r\n    process_rewards({rewards: textline.rewards, source_type: \"textline\", inform_textline: false})\r\n\r\n    if(textline.otherUnlocks) {\r\n        textline.otherUnlocks();\r\n    }\r\n\r\n    start_dialogue(current_dialogue);\r\n    update_displayed_textline_answer({text: textline.text});\r\n}\r\n\r\nfunction unlock_combat_stance(stance_id) {\r\n    if(!stances[stance_id]) {\r\n        console.warn(`Tried to unlock stance \"${stance_id}\", but no such stance exists!`);\r\n        return;\r\n    }\r\n\r\n    stances[stance_id].is_unlocked = true;\r\n    update_displayed_stance_list(stances, current_stance, faved_stances);\r\n    log_message(`You have learned a new stance: \"${stances[stance_id].name}\"`, \"location_unlocked\") \r\n}\r\n\r\nfunction change_stance(stance_id, is_temporary = false) {\r\n    if(is_temporary) {\r\n        if(!stances[stance_id]) {\r\n            throw new Error(`No such stance as \"${stance_id}\"`);\r\n        }\r\n        if(!stances[stance_id].is_unlocked) {\r\n            throw new Error(`Stance \"${stance_id}\" is not yet unlocked!`)\r\n        }\r\n\r\n    } else {\r\n        selected_stance = stances[stance_id];\r\n        update_displayed_stance(selected_stance);\r\n    }\r\n    \r\n    current_stance = stances[stance_id];\r\n\r\n    update_character_stats();\r\n    reset_combat_loops();\r\n}\r\n\r\n/**\r\n * @description handle faving/unfaving of stances\r\n * @param {String} stance_id \r\n */\r\nfunction fav_stance(stance_id) {\r\n    if(faved_stances[stance_id]) {\r\n        delete faved_stances[stance_id];\r\n    } else if(stances[stance_id].is_unlocked){\r\n        faved_stances[stance_id] = true;\r\n    } else {\r\n        console.warn(`Tried to fav a stance '${stance_id}' despite it not being unlocked!`);\r\n    }\r\n    update_displayed_faved_stances(stances);\r\n}\r\n\r\n/**\r\n * @description sets attack cooldowns and new enemies, either from provided list or from current location, called whenever a new enemy group starts\r\n * @param {List<Enemy>} enemies \r\n */\r\nfunction set_new_combat({enemies} = {}) {\r\n    if(!current_location.get_next_enemies){\r\n        clear_all_enemy_attack_loops();\r\n        clear_character_attack_loop();\r\n        return;\r\n    }\r\n    current_enemies = enemies || current_location.get_next_enemies();\r\n    clear_all_enemy_attack_loops();\r\n\r\n    let character_attack_cooldown = 1/(character.stats.full.attack_speed);\r\n    enemy_attack_cooldowns = [...current_enemies.map(x => 1/x.stats.attack_speed)];\r\n\r\n    let fastest_cooldown = [character_attack_cooldown, ...enemy_attack_cooldowns].sort((a,b) => a - b)[0];\r\n\r\n    //scale all attacks to be not faster than 1 per second\r\n    if(fastest_cooldown < 1) {\r\n        const cooldown_multiplier = 1/fastest_cooldown;\r\n        \r\n        character_attack_cooldown *= cooldown_multiplier;\r\n        for(let i = 0; i < current_enemies.length; i++) {\r\n            enemy_attack_cooldowns[i] *= cooldown_multiplier;\r\n            enemy_timer_variance_accumulator[i] = 0;\r\n            enemy_timer_adjustment[i] = 0;\r\n            enemy_timers[i] = [Date.now(), Date.now()];\r\n        }\r\n    } else {\r\n        for(let i = 0; i < current_enemies.length; i++) {\r\n            enemy_timer_variance_accumulator[i] = 0;\r\n            enemy_timer_adjustment[i] = 0;\r\n            enemy_timers[i] = [Date.now(), Date.now()];\r\n        }\r\n    }\r\n    character_timer_variance_accumulator = 0;\r\n    character_timer_adjustment = 0;\r\n    character_timers = [Date.now(), Date.now()];\r\n\r\n    //attach loops\r\n    for(let i = 0; i < current_enemies.length; i++) {\r\n        do_enemy_attack_loop(i, 0, true);\r\n    }\r\n\r\n    set_character_attack_loop({base_cooldown: character_attack_cooldown});\r\n    \r\n    update_displayed_enemies();\r\n    update_displayed_health_of_enemies();\r\n}\r\n\r\n/**\r\n * @description Recalculates attack speeds;\r\n * \r\n * For enemies, modifies their existing cooldowns, for hero it restarts the attack bar with a new cooldown \r\n */\r\nfunction reset_combat_loops() {\r\n    if(!current_enemies) { \r\n        return;\r\n    }\r\n\r\n    let character_attack_cooldown = 1/(character.stats.full.attack_speed);\r\n    enemy_attack_cooldowns = [...current_enemies.map(x => 1/x.stats.attack_speed)];\r\n\r\n    let fastest_cooldown = [character_attack_cooldown, ...enemy_attack_cooldowns].sort((a,b) => a - b)[0];\r\n\r\n    //scale all attacks to be not faster than 1 per second\r\n    if(fastest_cooldown < 1) {\r\n        const cooldown_multiplier = 1/fastest_cooldown;\r\n        character_attack_cooldown *= cooldown_multiplier;\r\n        for(let i = 0; i < current_enemies.length; i++) {\r\n            enemy_attack_cooldowns[i] *= cooldown_multiplier;\r\n        }\r\n    }\r\n\r\n    set_character_attack_loop({base_cooldown: character_attack_cooldown});\r\n}\r\n\r\n/**\r\n * @description Creates an Interval responsible for performing the attack loop of enemy and updating their attack_bar progress\r\n * @param {*} enemy_id \r\n * @param {*} cooldown \r\n */\r\nfunction do_enemy_attack_loop(enemy_id, count, is_new = false) {\r\n    count = count || 0;\r\n    update_enemy_attack_bar(enemy_id, count/60);\r\n\r\n    if(is_new) {\r\n        enemy_timer_variance_accumulator[enemy_id] = 0;\r\n        enemy_timer_adjustment[enemy_id] = 0;\r\n    }\r\n\r\n    clearTimeout(enemy_attack_loops[enemy_id]);\r\n    enemy_attack_loops[enemy_id] = setTimeout(() => {\r\n        enemy_timers[enemy_id][0] = Date.now(); \r\n        enemy_timer_variance_accumulator[enemy_id] += ((enemy_timers[enemy_id][0] - enemy_timers[enemy_id][1]) - enemy_attack_cooldowns[enemy_id]*1000/(60*tickrate));\r\n\r\n        enemy_timers[enemy_id][1] = Date.now();\r\n        update_enemy_attack_bar(enemy_id, count/60);\r\n        count++;\r\n        if(count >= 60) {\r\n            count = 0;\r\n            do_enemy_combat_action(enemy_id);\r\n        }\r\n        do_enemy_attack_loop(enemy_id, count);\r\n\r\n        if(enemy_timer_variance_accumulator[enemy_id] <= maximum_time_correction/tickrate && enemy_timer_variance_accumulator[enemy_id] >= -maximum_time_correction/tickrate) {\r\n            enemy_timer_adjustment[enemy_id] = enemy_timer_variance_accumulator[enemy_id];\r\n        } else {\r\n            if(enemy_timer_variance_accumulator[enemy_id] > maximum_time_correction/tickrate) {\r\n                enemy_timer_adjustment[enemy_id] = maximum_time_correction/tickrate;\r\n            }\r\n            else {\r\n                if(enemy_timer_variance_accumulator[enemy_id] < -maximum_time_correction/tickrate) {\r\n                    enemy_timer_adjustment[enemy_id] = -maximum_time_correction/tickrate;\r\n                }\r\n            }\r\n        } //limits the maximum correction, just to be safe\r\n\r\n    }, enemy_attack_cooldowns[enemy_id]*1000/(60*tickrate) - enemy_timer_adjustment[enemy_id]);\r\n}\r\n\r\nfunction clear_enemy_attack_loop(enemy_id) {\r\n    clearTimeout(enemy_attack_loops[enemy_id]);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} base_cooldown basic cooldown based on attack speeds of enemies and character (ignoring stamina penalty) \r\n * @param {String} attack_type type of attack, not yet implemented\r\n */\r\nfunction set_character_attack_loop({base_cooldown}) {\r\n    clear_character_attack_loop();\r\n\r\n    //little safety, as this function would occasionally throw an error due to not having any enemies left \r\n    //(can happen on forced leave after first win)\r\n    if(!current_enemies) {\r\n        return;\r\n    }\r\n\r\n    //tries to switch stance back to the one that was actually selected if there's enough stamina, otherwise tries to switch stance to \"normal\" if not enough stamina\r\n    if(character.stats.full.stamina >= (selected_stance.stamina_cost / character.stats.full.stamina_efficiency)){ \r\n        if(selected_stance.id !== current_stance.id) {\r\n            change_stance(selected_stance.id);\r\n            return;\r\n        }\r\n    } else if(current_stance.id !== \"normal\") {\r\n        change_stance(\"normal\", true);\r\n        return;\r\n    }\r\n\r\n    let target_count = current_stance.target_count;\r\n    if(target_count > 1 && current_stance.related_skill) {\r\n        target_count = target_count + Math.round(target_count * get_total_skill_level(current_stance.related_skill)/skills[current_stance.related_skill].max_level);\r\n    }\r\n\r\n    if(current_stance.randomize_target_count) {\r\n        target_count = Math.floor(Math.random()*target_count) || 1;\r\n    }\r\n\r\n    let targets=[];\r\n    const alive_targets = current_enemies.filter(enemy => enemy.is_alive).slice(-target_count);\r\n\r\n    while(alive_targets.length>0) {\r\n        targets.push(alive_targets.pop());\r\n    }\r\n\r\n    use_stamina(current_stance.stamina_cost);\r\n    let actual_cooldown = base_cooldown / character.get_stamina_multiplier();\r\n\r\n    let attack_power = character.get_attack_power();\r\n    do_character_attack_loop({base_cooldown, actual_cooldown, attack_power, targets, target_count});\r\n}\r\n\r\n/**\r\n * @description updates character's attack bar, performs combat action when it reaches full\r\n * @param {Number} base_cooldown \r\n * @param {Number} actual_cooldown \r\n * @param {String} attack_power \r\n * @param {String} attack_type \r\n */\r\nfunction do_character_attack_loop({base_cooldown, actual_cooldown, attack_power, targets, count = 0, is_new = true, target_count = 1}) {\r\n    update_character_attack_bar(count/60);\r\n\r\n    if(is_new) {\r\n        character_timer_variance_accumulator = 0;\r\n        character_timer_adjustment = 0;\r\n    }\r\n\r\n    clear_character_attack_loop();\r\n    character_attack_loop = setTimeout(() => {\r\n        character_timers[0] = Date.now(); \r\n        character_timer_variance_accumulator += ((character_timers[0] - character_timers[1]) - actual_cooldown*1000/(60*tickrate));\r\n\r\n        character_timers[1] = Date.now();\r\n        update_character_attack_bar(count/60);\r\n        count++;\r\n        if(count >= 60) {\r\n            count = 0;\r\n            let leveled = false;\r\n\r\n            for(let i = 0; i < targets.length; i++) {\r\n                do_character_combat_action({target: targets[i], attack_power});\r\n            }\r\n\r\n            if(current_stance.related_skill) {\r\n                leveled = add_xp_to_skill({skill: skills[current_stance.related_skill], xp_to_add: targets.reduce((sum,enemy)=>sum+enemy.xp_value,0)/targets.length});\r\n                \r\n                if(leveled) {\r\n                    update_stance_tooltip(current_stance);\r\n                    update_character_stats();\r\n                }\r\n            }\r\n\r\n            if(current_enemies.filter(enemy => enemy.is_alive).length != 0) { //set next loop if there's still an enemy left;\r\n                set_character_attack_loop({base_cooldown});\r\n            } else { //all enemies defeated, do relevant things and set new combat\r\n                current_location.enemy_groups_killed += 1;\r\n                if(current_location.enemy_groups_killed > 0 && current_location.enemy_groups_killed % current_location.enemy_count == 0) {\r\n                    get_location_rewards(current_location);\r\n                }\r\n                document.getElementById(\"enemy_count_div\").children[0].children[1].innerHTML = current_location.enemy_count - current_location.enemy_groups_killed % current_location.enemy_count;\r\n        \r\n                set_new_combat();\r\n            }\r\n        } else {\r\n            do_character_attack_loop({base_cooldown, actual_cooldown, attack_power, targets, target_count, count, is_new: false});\r\n        }\r\n\r\n        if(character_timer_variance_accumulator <= maximum_time_correction/tickrate && character_timer_variance_accumulator >= -maximum_time_correction/tickrate) {\r\n            character_timer_adjustment = character_timer_variance_accumulator;\r\n        } else {\r\n            if(character_timer_variance_accumulator > maximum_time_correction/tickrate) {\r\n                character_timer_adjustment = maximum_time_correction/tickrate;\r\n            }\r\n            else {\r\n                if(character_timer_variance_accumulator < -maximum_time_correction/tickrate) {\r\n                    character_timer_adjustment = -maximum_time_correction/tickrate;\r\n                }\r\n            }\r\n        } //limits the maximum correction, just to be safe\r\n    }, actual_cooldown*1000/(60*tickrate) - character_timer_adjustment);\r\n}\r\n\r\nfunction clear_character_attack_loop() {\r\n    clearTimeout(character_attack_loop);\r\n}\r\n\r\nfunction clear_all_enemy_attack_loops() {\r\n    Object.keys(enemy_attack_loops).forEach((key) => {\r\n        clearTimeout(enemy_attack_loops[key]);\r\n    });\r\n}\r\n\r\nfunction start_combat() {\r\n    if(current_enemies == null) {\r\n        set_new_combat();\r\n    }\r\n}\r\n\r\n/**\r\n * performs a single combat action (that is attack, as there isn't really any other kind for now),\r\n * called when attack cooldown finishes\r\n * \r\n * @param {String} attacker id of enemy\r\n*/ \r\nfunction do_enemy_combat_action(enemy_id) {\r\n    \r\n    /*\r\n    tiny workaround, as character being defeated while facing multiple enemies,\r\n    sometimes results in enemy attack animation still finishing before character retreats,\r\n    launching this function and causing an error\r\n    */\r\n    if(!current_enemies) { \r\n        return;\r\n    }\r\n    \r\n    const attacker = current_enemies[enemy_id];\r\n\r\n    let evasion_chance_modifier = current_enemies.filter(enemy => enemy.is_alive).length**(-1/3); //down to .5 if there's full 8 enemies (multiple attackers make it harder to evade attacks)\r\n    if(attacker.size === \"small\") {\r\n        add_xp_to_skill({skill: skills[\"Pest killer\"], xp_to_add: attacker.xp_value});\r\n    } else if(attacker.size === \"large\") {\r\n        add_xp_to_skill({skill: skills[\"Giant slayer\"], xp_to_add: attacker.xp_value});\r\n        evasion_chance_modifier *= get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Giant slayer\"});\r\n    }\r\n\r\n    const enemy_base_damage = attacker.stats.attack;\r\n\r\n    //let damage_dealt;\r\n    let damages_dealt = [];\r\n\r\n    let critted = false;\r\n\r\n    let partially_blocked = false; //only used for combat info in message log\r\n\r\n    for(let i = 0; i < attacker.stats.attack_count; i++) {\r\n        damages_dealt.push(enemy_base_damage * (1.2 - Math.random() * 0.4)); //basic 20% deviation for damage\r\n    }\r\n\r\n    damages_dealt = damages_dealt.sort((a,b)=>b-a);\r\n    \r\n    if(character.equipment[\"off-hand\"]?.offhand_type === \"shield\") { //HAS SHIELD\r\n        if(character.stats.full.block_chance > Math.random()) {//BLOCKED THE ATTACK\r\n            add_xp_to_skill({skill: skills[\"Shield blocking\"], xp_to_add: attacker.xp_value});\r\n            const blocked = character.stats.total_multiplier.block_strength * character.equipment[\"off-hand\"].getShieldStrength();\r\n\r\n            if(blocked > damages_dealt[0]) {\r\n                log_message(character.name + \" blocked an attack\", \"hero_blocked\");\r\n                return; //damage fully blocked, nothing more can happen \r\n            } else {\r\n                damages_dealt = damages_dealt.map(val => Math.max(0,val-blocked));\r\n                partially_blocked = true;\r\n            }\r\n         } else {\r\n            add_xp_to_skill({skill: skills[\"Shield blocking\"], xp_to_add: attacker.xp_value/2});\r\n         }\r\n    } else { // HAS NO SHIELD\r\n        const hit_chance = get_hit_chance(attacker.stats.dexterity * Math.sqrt(attacker.stats.intuition ?? 1), character.stats.full.evasion_points*evasion_chance_modifier);\r\n\r\n        if(hit_chance < Math.random()) { //EVADED ATTACK\r\n            const xp_to_add = character.wears_armor() ? attacker.xp_value : attacker.xp_value * 1.5; \r\n            //50% more evasion xp if going without armor\r\n            add_xp_to_skill({skill: skills[\"Evasion\"], xp_to_add});\r\n            log_message(character.name + \" evaded an attack\", \"enemy_missed\");\r\n            return; //damage fully evaded, nothing more can happen\r\n        } else {\r\n            add_xp_to_skill({skill: skills[\"Evasion\"], xp_to_add: attacker.xp_value/2});\r\n        }\r\n    }\r\n\r\n    total_hits_taken++;\r\n    if(enemy_crit_chance > Math.random()){\r\n        damages_dealt = damages_dealt.map(val => val*enemy_crit_damage);\r\n        critted = true;\r\n        total_crits_taken++;\r\n    }\r\n\r\n    if(!character.wears_armor()) //no armor so either completely naked or in things with 0 def\r\n    {\r\n        add_xp_to_skill({skill: skills[\"Iron skin\"], xp_to_add: attacker.xp_value});\r\n    } else {\r\n        add_xp_to_skill({skill: skills[\"Iron skin\"], xp_to_add: Math.sqrt(attacker.xp_value)/2});\r\n    }\r\n\r\n    \r\n    let {damage_taken, fainted} = character.take_damage({damage_values: damages_dealt});\r\n\r\n    const hit_count_msg = damages_dealt.length > 1?` x${damages_dealt.length}`:\"\"\r\n\r\n    if(critted) {\r\n        if(partially_blocked) {\r\n            log_message(character.name + \" partially blocked, was critically hit\" + hit_count_msg + \" for \" + Math.ceil(10*damage_taken)/10 + \" dmg\", \"hero_attacked_critically\");\r\n        } \r\n        else {\r\n            log_message(character.name + \" was critically hit\" + hit_count_msg + \" for \" + Math.ceil(10*damage_taken)/10 + \" dmg\", \"hero_attacked_critically\");\r\n        }\r\n    } else {\r\n        if(partially_blocked) {\r\n            log_message(character.name + \" partially blocked, was hit\" + hit_count_msg + \" for \" + Math.ceil(10*damage_taken)/10 + \" dmg\", \"hero_attacked\");\r\n        }\r\n        else {\r\n            log_message(character.name + \" was hit\" + hit_count_msg + \" for \" + Math.ceil(10*damage_taken)/10 + \" dmg\", \"hero_attacked\");\r\n        }\r\n    }\r\n\r\n    if(fainted) {\r\n        kill_player();\r\n        return;\r\n    }\r\n\r\n    update_displayed_health();\r\n}\r\n\r\nfunction do_character_combat_action({target, attack_power}) {\r\n\r\n    const hero_base_damage = attack_power;\r\n\r\n    let damage_dealt;\r\n    \r\n    let critted = false;\r\n    \r\n    let hit_chance_modifier = current_enemies.filter(enemy => enemy.is_alive).length**(-1/4); // down to ~ 60% if there's full 8 enemies\r\n    \r\n    add_xp_to_skill({skill: skills[\"Combat\"], xp_to_add: target.xp_value});\r\n\r\n    if(target.size === \"small\") {\r\n        add_xp_to_skill({skill: skills[\"Pest killer\"], xp_to_add: target.xp_value});\r\n        hit_chance_modifier *= get_total_skill_coefficient({scaling_type: \"multiplicative\", skill_id: \"Pest killer\"});\r\n    } else if(target.size === \"large\") {\r\n        add_xp_to_skill({skill: skills[\"Giant slayer\"], xp_to_add: target.xp_value});\r\n    }\r\n\r\n    const hit_chance = get_hit_chance(character.stats.full.attack_points * hit_chance_modifier, target.stats.agility * Math.sqrt(target.stats.intuition ?? 1));\r\n\r\n    if(hit_chance > Math.random()) {//hero's attack hits\r\n\r\n        total_hits_done++;\r\n        if(character.equipment.weapon != null) {\r\n            damage_dealt = Math.round(10 * hero_base_damage * (1.2 - Math.random() * 0.4) )/10;\r\n\r\n            add_xp_to_skill({skill: skills[weapon_type_to_skill[character.equipment.weapon.weapon_type]], xp_to_add: target.xp_value}); \r\n\r\n        } else {\r\n            damage_dealt = Math.round(10 * hero_base_damage * (1.2 - Math.random() * 0.4) )/10;\r\n            add_xp_to_skill({skill: skills['Unarmed'], xp_to_add: target.xp_value});\r\n        }\r\n        //small randomization by up to 20%, then bonus from skill\r\n        \r\n        if(character.stats.full.crit_rate > Math.random()) {\r\n            damage_dealt = Math.round(10*damage_dealt * character.stats.full.crit_multiplier)/10;\r\n            critted = true;\r\n            total_crits_done++;\r\n        }\r\n        else {\r\n            critted = false;\r\n        }\r\n        \r\n        damage_dealt = Math.ceil(10*Math.max(damage_dealt - target.stats.defense, damage_dealt*0.1, 1))/10;\r\n\r\n        target.stats.health -= damage_dealt;\r\n        if(damage_dealt > strongest_hit) {\r\n            strongest_hit = damage_dealt;\r\n        }\r\n        if(critted) {\r\n            log_message(target.name + \" was critically hit for \" + damage_dealt + \" dmg\", \"enemy_attacked_critically\");\r\n        }\r\n        else {\r\n            log_message(target.name + \" was hit for \" + damage_dealt + \" dmg\", \"enemy_attacked\");\r\n        }\r\n\r\n        if(target.stats.health <= 0) {\r\n            total_kills++;\r\n            target.stats.health = 0; //to not go negative on displayed value\r\n\r\n            log_message(target.name + \" was defeated\", \"enemy_defeated\");\r\n\r\n            //gained xp multiplied ny TOTAL size of enemy group raised to 1/3\r\n            let xp_reward = target.xp_value * (current_enemies.length**0.3334);\r\n            add_xp_to_character(xp_reward, true);\r\n\r\n            let loot = target.get_loot();\r\n            if(loot.length > 0) {\r\n                log_loot({loot_list: loot, is_combat: true});\r\n                loot = loot.map(x => {return {item_key: item_templates[x.item_id].getInventoryKey(), count: x.count}});\r\n                add_to_character_inventory(loot);\r\n            }\r\n            \r\n            kill_enemy(target);\r\n        }\r\n\r\n        update_displayed_health_of_enemies();\r\n    } else {\r\n        log_message(character.name + \" has missed\", \"hero_missed\");\r\n    }\r\n}\r\n\r\n/**\r\n * sets enemy to dead, disabled their attack, checks if that was the last enemy in group\r\n * @param {Enemy} enemy \r\n * @return {Boolean} if that was the last of an enemy group\r\n */\r\nfunction kill_enemy(target) {\r\n    target.is_alive = false;\r\n    if(target.add_to_bestiary) {\r\n        if(enemy_killcount[target.name]) {\r\n            enemy_killcount[target.name] += 1;\r\n            update_bestiary_entry(target.name);\r\n        } else {\r\n            enemy_killcount[target.name] = 1;\r\n            create_new_bestiary_entry(target.name);\r\n        }\r\n    }\r\n    const enemy_id = current_enemies.findIndex(enemy => enemy===target);\r\n    clear_enemy_attack_loop(enemy_id);\r\n}\r\n\r\nfunction kill_player({is_combat = true} = {}) {\r\n    if(is_combat) {\r\n        total_deaths++;\r\n        log_message(character.name + \" has lost consciousness\", \"hero_defeat\");\r\n\r\n        update_displayed_health();\r\n        if(options.auto_return_to_bed && last_location_with_bed) {\r\n            change_location(last_location_with_bed);\r\n            start_sleeping();\r\n        } else {\r\n            change_location(current_location.parent_location.id);\r\n        }\r\n    }\r\n}\r\n\r\nfunction use_stamina(num = 1, use_efficiency = true) {\r\n    \r\n    character.stats.full.stamina -= num/(use_efficiency * character.stats.full.stamina_efficiency || 1);\r\n\r\n    if(character.stats.full.stamina < 0)  {\r\n        character.stats.full.stamina = 0;\r\n    }\r\n\r\n    if(character.stats.full.stamina < 1) {\r\n        add_xp_to_skill({skill: skills[\"Persistence\"], xp_to_add: num});\r\n        update_displayed_stats();\r\n    }\r\n\r\n    update_displayed_stamina();\r\n}\r\n\r\n/**\r\n * adds xp to skills, handles their levelups and tooltips\r\n * @param skill - skill object \r\n * @param {Number} xp_to_add \r\n * @param {Boolean} should_info \r\n * @returns {Boolean}\r\n */\r\nfunction add_xp_to_skill({skill, xp_to_add = 1, should_info = true, use_bonus = true, add_to_parent = true})\r\n{\r\n    let leveled = false;\r\n    if(xp_to_add == 0) {\r\n        return leveled;\r\n    } else if(xp_to_add < 0) {\r\n        console.error(`Tried to add negative xp to skill ${skill.skill_id}`);\r\n        return leveled;\r\n    } else if(isNaN(xp_to_add)) {\r\n        console.error(`Tried to add NaN xp to skill ${skill.skill_id}`);\r\n        return leveled;\r\n    }\r\n\r\n    if(use_bonus) {\r\n        xp_to_add = xp_to_add * global_xp_multiplier * get_skill_xp_gain(skill.skill_id);\r\n\r\n        if(skill.parent_skill) {\r\n            xp_to_add *= skill.get_parent_xp_multiplier();\r\n        }\r\n    }\r\n    \r\n    const prev_name = skill.name();\r\n    const was_hidden = skill.visibility_treshold > skill.total_xp;\r\n\r\n    let {message, gains, unlocks} = skill.add_xp({xp_to_add: xp_to_add});\r\n    const new_name = skill.name();\r\n    if(skill.parent_skill && add_to_parent) {\r\n        if(skill.total_xp > skills[skill.parent_skill].total_xp) {\r\n            /*\r\n                add xp to parent if skill would now have more than the parent\r\n                calc xp ammount so that it's no more than the difference between child and parent\r\n            */\r\n            let xp_for_parent = Math.min(skill.total_xp - skills[skill.parent_skill].total_xp, xp_to_add);\r\n            add_xp_to_skill({skill: skills[skill.parent_skill], xp_to_add: xp_for_parent, should_info, use_bonus: false, add_to_parent});\r\n        }\r\n    }\r\n\r\n    const is_visible = skill.visibility_treshold <= skill.total_xp;\r\n    \r\n    if(was_hidden && is_visible) {\r\n        create_new_skill_bar(skill);\r\n        update_displayed_skill_bar(skill, false);\r\n        \r\n        if(typeof should_info === \"undefined\" || should_info) {\r\n            log_message(`Unlocked new skill: ${skill.name()}`, \"skill_raised\");\r\n        }\r\n    } \r\n\r\n    if(gains) { \r\n        character.stats.add_skill_milestone_bonus(gains);\r\n        if(skill.skill_id === \"Unarmed\") {\r\n            character.stats.add_all_equipment_bonus();\r\n        }\r\n    }\r\n    \r\n    if(is_visible) {\r\n        if(prev_name !== new_name) { //skill name has changed; this may trigger on levelup OR on becoming visible\r\n            if(which_skills_affect_skill[skill.skill_id]) {\r\n                for(let i = 0; i < which_skills_affect_skill[skill.skill_id].length; i++) {\r\n                    update_displayed_skill_bar(skills[which_skills_affect_skill[skill.skill_id][i]], false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(typeof message !== \"undefined\"){ \r\n        //not undefined => levelup happened and levelup message was returned\r\n            leveled = true;\r\n\r\n            message = message.replace(\"%HeroName%\", character.name);\r\n\r\n            update_displayed_skill_bar(skill, true);\r\n\r\n            if(typeof should_info === \"undefined\" || should_info)\r\n            {\r\n                update_character_stats();\r\n            }\r\n\r\n            if(typeof skill.get_effect_description !== \"undefined\")\r\n            {\r\n                update_displayed_skill_description(skill);\r\n            }\r\n\r\n            if(skill.is_parent) {\r\n                update_all_displayed_skills_xp_gain();\r\n            }\r\n            else {\r\n                update_displayed_skill_xp_gain(skill);\r\n            }\r\n\r\n            //no point doing any checks for optimization\r\n            update_displayed_stamina_efficiency();\r\n            \r\n            process_rewards({source_name: skill.skill_id, source_type: \"skill\", rewards: unlocks, inform_overall: should_info});\r\n            \r\n            if(typeof should_info === \"undefined\" || should_info){\r\n                log_message(message, \"skill_raised\");\r\n            }\r\n\r\n            if(prev_name !== new_name) { //skill name has changed\r\n                //display of skill name in other places (like tooltips of other skills) is handled slightly earlier\r\n                if(!was_hidden && (typeof should_info === \"undefined\" || should_info)) {\r\n                    log_message(`Skill ${prev_name} upgraded to ${new_name}`, \"skill_raised\");\r\n                }\r\n\r\n                if(current_location?.connected_locations && !current_activity) {\r\n                    Object.keys(current_location.activities).forEach(activity_key => {\r\n                        if(activities[current_location.activities[activity_key].activity_name].base_skills_names.includes(skill.skill_id)) {\r\n                            update_gathering_tooltip(activities[activity_key]);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                Object.keys(character.inventory).forEach(inv_key => {\r\n                    //update equippable/useable item\r\n                    const item = getItemFromKey(inv_key);\r\n                    if(item.tags.usable) {\r\n                        const effects = item.effects;\r\n                        for(let i = 0; i < effects.length; i++) {\r\n                            if(effect_templates[effects[i].effect].effects?.bonus_skill_levels?.[skill.skill_id]) {\r\n                                update_displayed_character_inventory({item_key: inv_key});\r\n                                return;\r\n                            }\r\n                        }\r\n                    } else if(item.tags.equippable) {\r\n                        const bonuses = item.getBonusSkillLevels();\r\n                        if(bonuses[skill.skill_id]) {\r\n                            update_displayed_character_inventory({item_key: inv_key});\r\n                        }\r\n                    }\r\n                });\r\n                Object.keys(character.equipment).forEach(eq_slot => {\r\n                    //update equipped item\r\n                    if(!character.equipment[eq_slot]) {\r\n                        return;\r\n                    }\r\n                    const bonuses = character.equipment[eq_slot].getBonusSkillLevels(); {\r\n                        if(bonuses[skill.skill_id]) {\r\n                            update_displayed_equipment();\r\n                            update_displayed_character_inventory({equip_slot: eq_slot});\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                update_displayed_effects();\r\n                //a bit lazy, but there shouldn't ever be enough to cause a lag\r\n            }\r\n        } else {\r\n            update_displayed_skill_bar(skill, false);\r\n        }\r\n    } else {\r\n        //\r\n    }\r\n\r\n    return leveled;\r\n}\r\n\r\n/**\r\n * adds xp to character, handles levelups\r\n * @param {Number} xp_to_add \r\n * @param {Boolean} should_info \r\n */\r\nfunction add_xp_to_character(xp_to_add, should_info = true, use_bonus) {\r\n    const level_up = character.add_xp({xp_to_add, use_bonus});\r\n    \r\n    if(level_up) {\r\n        if(should_info) {\r\n            log_message(level_up, \"level_up\");\r\n        }\r\n        \r\n        character.stats.full.health = character.stats.full.max_health; //free healing on level up, because it's a nice thing to have\r\n        update_character_stats();\r\n    }\r\n\r\n    update_displayed_character_xp(level_up);\r\n}\r\n\r\n/**\r\n * @param {Location} location game Location object\r\n * @description handles all the rewards for clearing location (both first and subsequent clears), adding xp and unlocking stuff\r\n */\r\nfunction get_location_rewards(location) {\r\n\r\n    let should_return = false;\r\n    if(location.enemy_groups_killed == location.enemy_count) { //first clear\r\n\r\n        if(location.is_challenge) {\r\n            lock_location({location});\r\n        }\r\n        should_return = true;\r\n        \r\n        if(location.first_reward) {\r\n            process_rewards({rewards: location.first_reward, source_type: \"location\", source_name: location.name, is_first_clear: true, source_id: location.id});\r\n        }\r\n    } else if(location.repeatable_reward.xp && typeof location.repeatable_reward.xp === \"number\") {\r\n        process_rewards({rewards: {xp: location.repeatable_reward.xp}, source_type: \"location\", source_name: location.name, is_first_clear: false, source_id: location.id});\r\n    }\r\n\r\n\r\n    //previous two calls give xp, this call omits xp to avoid repeating it\r\n    //repeatable rewards are indeed intended to be called on first clear as well (with the exception of xp, duh)\r\n    process_rewards({rewards: {...location.repeatable_reward, xp: null}, source_type: \"location\", source_name: location.name, is_first_clear: false, source_id: location.id});\r\n\r\n    if(location.rewards_with_clear_requirement) {\r\n        for(let i = 0; i < location.rewards_with_clear_requirement.length; i++) {\r\n            if(location.enemy_groups_killed == location.enemy_count * location.rewards_with_clear_requirement[i].required_clear_count)\r\n            {\r\n                //only once, on N-th clear\r\n                process_rewards({rewards: location.rewards_with_clear_requirement[i], source_type: \"location\", source_name: location.name, is_first_clear: false, source_id: location.id});\r\n            }\r\n        }\r\n    }\r\n\r\n    location.otherUnlocks();\r\n\r\n    if(should_return) {\r\n        change_location(current_location.parent_location.id); //go back to parent location, only on first clear\r\n    }\r\n}\r\n\r\n/**\r\n * processes rewards and logs all necessary messages\r\n * @param {Object} rewards_data\r\n * @param {Object} rewards_data.rewards //the standard object with rewards\r\n * @param {String} rewards_data.source_type //location, locationAction, textline\r\n * @param {Boolean} rewards_data.is_first_clear //exclusively for location rewards (and only for a single message to be logged)\r\n * @param {Boolean} rewards_data.inform_textline //if textline unlock is to be logged\r\n * @param {String} rewards_data.source_name //in case it's needed for logging a message\r\n */\r\nfunction process_rewards({rewards = {}, source_type, source_name, is_first_clear, inform_overall = true, inform_textline = true, only_unlocks = false}) {\r\n    if(rewards.money && typeof rewards.money === \"number\" && !only_unlocks) {\r\n        if(inform_overall) {\r\n            log_message(`${character.name} earned ${format_money(rewards.money)}`);\r\n        }\r\n        add_money_to_character(rewards.money);\r\n    }\r\n\r\n    if(rewards.xp && typeof rewards.xp === \"number\" && !only_unlocks) {\r\n        if(source_type === \"location\") {\r\n            if(inform_overall) {\r\n                if(is_first_clear) {\r\n                    log_message(`Obtained ${rewards.xp}xp for clearing ${source_name} for the first time`, \"location_reward\");\r\n                } else {\r\n                    log_message(`Obtained additional ${rewards.xp}xp for clearing ${source_name}`, \"location_reward\");\r\n                }\r\n            }\r\n        } else {\r\n            //other sources\r\n        }\r\n        add_xp_to_character(rewards.xp);\r\n    }\r\n\r\n    if(rewards.skill_xp && !only_unlocks) {\r\n        Object.keys(rewards.skill_xp).forEach(skill_key => {\r\n            if(typeof rewards.skill_xp[skill_key] === \"number\") {\r\n                if(inform_overall) {\r\n                    log_message(`${character.name} gained ${rewards.skill_xp[skill_key]}xp to ${skills[skill_key].name()}`);\r\n                }\r\n                add_xp_to_skill({skill: skills[skill_key], xp_to_add: rewards.skill_xp[skill_key]});\r\n            }\r\n        });\r\n    }\r\n    \r\n    if(rewards.locations) {\r\n        //if(source_type === \"location\") {\r\n            for(let i = 0; i < rewards.locations.length; i++) {\r\n                unlock_location({location: locations[rewards.locations[i].location], skip_message: (inform_overall && rewards.locations[i].skip_message)});\r\n            }\r\n        /*} else {\r\n            for(let i = 0; i < rewards.locations.length; i++) {\r\n                unlock_location(locations[rewards.locations[i].location], rewards.locations[i].skip_message);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    if(rewards.flags) {\r\n        for(let i = 0; i < rewards.flags.length; i++) {\r\n            const flag = global_flags[rewards.flags[i]];\r\n            global_flags[rewards.flags[i]] = true;\r\n            if(!flag && flag_unlock_texts[rewards.flags[i]] && inform_overall) {\r\n                log_message(`${flag_unlock_texts[rewards.flags[i]]}`, \"activity_unlocked\");\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.textlines) {\r\n        for(let i = 0; i < rewards.textlines.length; i++) {\r\n            let any_unlocked = false;\r\n            for(let j = 0; j < rewards.textlines[i].lines.length; j++) {\r\n                if(dialogues[rewards.textlines[i].dialogue].textlines[rewards.textlines[i].lines[j]].is_unlocked == false) {\r\n                    any_unlocked = true;\r\n                    dialogues[rewards.textlines[i].dialogue].textlines[rewards.textlines[i].lines[j]].is_unlocked = true;\r\n                }\r\n            }\r\n            if(any_unlocked && inform_textline && inform_overall) {\r\n                log_message(`You should talk to ${rewards.textlines[i].dialogue}`, \"dialogue_unlocked\");\r\n                //maybe do this only when there's just 1 dialogue with changes?\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.dialogues) {\r\n        for(let i = 0; i < rewards.dialogues?.length; i++) {\r\n            const dialogue = dialogues[rewards.dialogues[i]]\r\n            if(!dialogue.is_unlocked) {\r\n                dialogue.is_unlocked = true;\r\n                log_message(`You can now talk with ${dialogue.name}`, \"activity_unlocked\");\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.traders) { \r\n        for(let i = 0; i < rewards.traders.length; i++) {\r\n            const trader = traders[rewards.traders[i].trader];\r\n            if(!trader.is_unlocked) {\r\n                trader.is_unlocked = true;\r\n                if(!rewards.traders[i].skip_message) {\r\n                    log_message(`You can now trade with ${trader.name}`, \"activity_unlocked\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.housing) {\r\n        Object.keys(rewards.housing).forEach(location_key => {\r\n            locations[location_key].housing.is_unlocked = true;\r\n        });\r\n    }\r\n\r\n    if(rewards.activities) {\r\n        for(let i = 0; i < rewards.activities?.length; i++) {\r\n            if(!locations[rewards.activities[i].location].activities[rewards.activities[i].activity].tags?.gathering || global_flags.is_gathering_unlocked) {\r\n\r\n                unlock_activity({location: locations[rewards.activities[i].location].name, \r\n                                activity: locations[rewards.activities[i].location].activities[rewards.activities[i].activity]});\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.actions) {\r\n        for(let i = 0; i < rewards.actions?.length; i++) {\r\n            unlock_action({\r\n                location: locations[rewards.actions[i].location].name, \r\n                action: locations[rewards.actions[i].location].actions[rewards.actions[i].action]\r\n            });\r\n        }\r\n    }\r\n\r\n    if(rewards.stances) {  \r\n        for(let i = 0; i < rewards.stances.length; i++) {\r\n            unlock_combat_stance(rewards.stances[i]);\r\n        }\r\n    }\r\n\r\n    if(rewards.skills) {\r\n        for(let i = 0; i < rewards.skills.length; i++) {\r\n            if(!skills[rewards.skills[i]].is_unlocked) {\r\n                skills[rewards.skills[i]].is_unlocked = true;\r\n                create_new_skill_bar(skills[rewards.skills[i]]);\r\n                update_displayed_skill_bar(skills[rewards.skills[i]], false);\r\n                if(inform_overall) {\r\n                    log_message(`Unlocked new skill: ${skills[rewards.skills[i]].name()}`);\r\n                }\r\n\r\n                if(source_type === \"skill\") {\r\n                    if(!which_skills_affect_skill[rewards.skills[i]]) {\r\n                        which_skills_affect_skill[rewards.skills[i]] = [];\r\n                    }\r\n\r\n                    if(skills[source_name]) {\r\n                        which_skills_affect_skill[rewards.skills[i]].push(source_name);\r\n                    } else {\r\n                        console.error(`Tried to register skill \"${source_name}\" as related to \"${rewards.skills[i]}\", but the former does not exist!`);\r\n                    }\r\n                }\r\n\r\n                //update all related skills; may be none if unlock was not from another skill, so need to check with '?'\r\n                for(let j = 0; j < which_skills_affect_skill[rewards.skills[i]]?.length; j++) {\r\n                    update_displayed_skill_bar(skills[which_skills_affect_skill[rewards.skills[i]][j]], false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.recipes) {\r\n        for(let i = 0; i < rewards.recipes.length; i++) {\r\n            if(!recipes[rewards.recipes[i].category][rewards.recipes[i].subcategory][rewards.recipes[i].recipe_id].is_unlocked) {\r\n                recipes[rewards.recipes[i].category][rewards.recipes[i].subcategory][rewards.recipes[i].recipe_id].is_unlocked = true;\r\n                if(inform_overall) {\r\n                    log_message(`Unlocked new recipe: ${recipes[rewards.recipes[i].category][rewards.recipes[i].subcategory][rewards.recipes[i].recipe_id].name}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.locks) {\r\n        if(rewards.locks.textlines) {\r\n            Object.keys(rewards.locks.textlines).forEach(dialogue_key => {\r\n                for(let i = 0; i < rewards.locks.textlines[dialogue_key].length; i++) {\r\n                    dialogues[dialogue_key].textlines[rewards.locks.textlines[dialogue_key][i]].is_finished = true;\r\n                }\r\n            });\r\n        }\r\n        if(rewards.locks.locations) {\r\n            for(let i = 0; i < rewards.locks.locations.length; i++) {\r\n                lock_location({location: locations[rewards.locks.locations[i]]});\r\n            }\r\n        }\r\n        if(rewards.locks.traders) {\r\n            for(let i = 0; i < rewards.locks.traders.length; i++) {\r\n                traders[rewards.locks.traders[i]].is_finished = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(rewards.items && !only_unlocks) {\r\n        for(let i = 0; i < rewards.items.length; i++) {\r\n            const item = item_templates[rewards.items[i]];\r\n            log_message(`${character.name} obtained \"${item.getName()} x${rewards.items[i].count||1}\"`);\r\n            add_to_character_inventory([{item_key: item.getInventoryKey(), count: rewards.items[i].count}]);\r\n        }\r\n    }\r\n\r\n    if(rewards.reputation && !only_unlocks) {\r\n        Object.keys(rewards.reputation).forEach(region => {\r\n            ReputationManager.add_reputation({region, reputation: rewards.reputation[region]});\r\n        });\r\n    }\r\n\r\n    if(rewards.move_to && !only_unlocks) {\r\n        if(source_type !== \"action\") {\r\n            change_location[rewards.move_to.location];\r\n        } else {\r\n            current_location = locations[rewards.move_to.location];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param location game location object \r\n */\r\nfunction unlock_location({location, skip_message}) {\r\n    if(!location.is_unlocked){\r\n        location.is_unlocked = true;\r\n        if(!skip_message) {\r\n            const message = location.unlock_text || `Unlocked location ${location.name}`;\r\n            log_message(message, \"location_unlocked\");\r\n        }\r\n\r\n        //reloads the current location just in case it needs the new unlock to be added to current display\r\n        //current action check most probably unnecessary\r\n        if(current_location && !current_dialogue && !current_location_action) {\r\n            change_location(current_location.id);\r\n        }\r\n    }\r\n\r\n    if(location.housing?.is_unlocked) {\r\n        unlocked_beds[location.id] = true;\r\n    }\r\n}\r\n\r\nfunction lock_location({location}) {\r\n    if(favourite_locations[location.id]) {\r\n        delete favourite_locations[location.id];\r\n        remove_fast_travel_choice({location_id: location.id});\r\n    }\r\n\r\n    location.is_finished = true;\r\n    if(last_combat_location === location.id) {\r\n        last_combat_location = null;\r\n    }\r\n}\r\n\r\nfunction add_location_to_favourites({location_id}) {\r\n    if(favourite_locations[location_id]) {\r\n        console.warn(`Tried to favourite location \"${locations[location_id].name}\" despite it already being in favourites`);\r\n        return;\r\n    }\r\n\r\n    favourite_locations[location_id] = true;\r\n    update_location_icon();\r\n}\r\n\r\nfunction remove_location_from_favourites({location_id, update_choices = true}) {\r\n    if(!favourite_locations[location_id]) {\r\n        console.warn(`Tried to unfavourite location \"${locations[location_id].name}\" despite it not being in favourites`);\r\n        return;\r\n    }\r\n\r\n    delete favourite_locations[location_id];\r\n    update_location_icon();\r\n    if(update_choices) {\r\n        remove_fast_travel_choice({location_id});\r\n    }\r\n}\r\n\r\nfunction clear_enemies() {\r\n    current_enemies = null;\r\n}\r\n\r\nfunction use_recipe(target, ammount_wanted_to_craft = 1) {\r\n\r\n    const category = target.parentNode.parentNode.dataset.crafting_category;\r\n    const subcategory = target.parentNode.parentNode.dataset.crafting_subcategory;\r\n    const recipe_id = target.parentNode.dataset.recipe_id;\r\n    const station_tier = current_location.crafting.tiers[category];\r\n\r\n    if(!category || !subcategory || !recipe_id) {\r\n        //shouldn't be possible to reach this\r\n        throw new Error(`Tried to use a recipe but either category, subcategory, or recipe id was not passed: ${category} - ${subcategory} - ${recipe_id}`);\r\n    } else if(!recipes[category][subcategory][recipe_id]) {\r\n        //shouldn't be possible to reach this\r\n        throw new Error(`Tried to use a recipe that doesn't exist: ${category} -> ${subcategory} -> ${recipe_id}`);\r\n    } else {\r\n        const selected_recipe = recipes[category][subcategory][recipe_id];\r\n        const recipe_div = document.querySelector(`[data-crafting_category=\"${category}\"] [data-crafting_subcategory=\"${subcategory}\"] [data-recipe_id=\"${recipe_id}\"]`);\r\n        let leveled = false;\r\n        let result;\r\n        let xp_to_add;\r\n        if(subcategory === \"items\") {\r\n            const {available_ammount, materials} = selected_recipe.get_availability()\r\n            let ammount_that_can_be_crafted = Math.min(ammount_wanted_to_craft, available_ammount);\r\n            let attempted_crafting_ammount = ammount_that_can_be_crafted; //ammount that will be attempted (e.g. 100)\r\n            let successful_crafting_ammount; //ammount that will succeed (e.g. 100 * 75.6% success = 75 + 60% for another 1)\r\n            if(ammount_that_can_be_crafted > 0) { \r\n                const success_chance = selected_recipe.get_success_chance(station_tier);\r\n                result = selected_recipe.getResult();\r\n                let {result_id, count} = result;\r\n                const is_medicine = item_templates[result_id].tags.medicine;\r\n\r\n                const recipe_skill = skills[selected_recipe.recipe_skill];\r\n                const needed_xp = recipe_skill.total_xp_to_next_lvl - recipe_skill.total_xp;\r\n                const xp_per_craft = get_recipe_xp_value({category, subcategory, recipe_id});\r\n                const estimated_xp_per_craft = xp_per_craft * success_chance;\r\n                const needed_crafts = Math.ceil(needed_xp/(estimated_xp_per_craft*get_skill_xp_gain(recipe_skill.skill_id)));\r\n                \r\n                attempted_crafting_ammount = Math.min(needed_crafts, ammount_that_can_be_crafted);\r\n                successful_crafting_ammount = Math.floor((attempted_crafting_ammount-1)*success_chance);\r\n                const variable_craft = Math.random()<success_chance?1:0;\r\n                successful_crafting_ammount += variable_craft;\r\n                \r\n                const current_gained_xp = (attempted_crafting_ammount-1)*estimated_xp_per_craft + (variable_craft?xp_per_craft:(xp_per_craft/4));\r\n\r\n                let success = 0;\r\n                let fail = 0;\r\n                \r\n                if(attempted_crafting_ammount < ammount_that_can_be_crafted && current_gained_xp*get_skill_xp_gain(recipe_skill.skill_id) < needed_xp) {\r\n                    //if more can be crafted and failed to get enough for a levelup, try to make up to 3 more (since it's 1/4th per fail and there's 1 fail)\r\n                    for(let i = 0; i < 2 && attempted_crafting_ammount+success+fail < ammount_that_can_be_crafted; i++) {\r\n                        \r\n                        if(Math.random()<success_chance) {\r\n                            success++;\r\n                        } else {\r\n                            fail++;\r\n                        }\r\n                        \r\n                        if((current_gained_xp + xp_per_craft*(success+fail/4))*get_skill_xp_gain(recipe_skill.skill_id) >= needed_xp) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    attempted_crafting_ammount += success + fail;\r\n                    successful_crafting_ammount += success;\r\n                }\r\n\r\n                xp_to_add = current_gained_xp + success*xp_per_craft + fail*xp_per_craft/4;\r\n\r\n                total_crafting_attempts += attempted_crafting_ammount;\r\n                total_crafting_successes += successful_crafting_ammount;\r\n\r\n                //remove used materials by id\r\n                for(let i = 0; i < selected_recipe.materials.length; i++) {\r\n                    if(selected_recipe.materials[i].material_id) {\r\n                        const key = item_templates[selected_recipe.materials[i].material_id].getInventoryKey();\r\n                        remove_from_character_inventory([{item_key: key, item_count: selected_recipe.materials[i].count*attempted_crafting_ammount}]);\r\n                    }\r\n                } \r\n\r\n                //remove used materials by material_type\r\n                for(let i = 0; i < materials.length; i++) {\r\n                    const mat_type = item_templates[materials[i]].material_type;\r\n                    const mat = selected_recipe.materials.find(x => x.material_type === mat_type);\r\n                    remove_from_character_inventory([{item_key: item_templates[materials[i]].getInventoryKey(), item_count: mat.count*attempted_crafting_ammount}]);\r\n                } \r\n\r\n                if(successful_crafting_ammount > 0) {\r\n                    add_to_character_inventory([{item_key: item_templates[result_id].getInventoryKey(), count: count*successful_crafting_ammount}]);\r\n                    let msg = `Created ${item_templates[result_id].getName()}`;\r\n                    if(attempted_crafting_ammount > 1) {\r\n                        msg+=` [${count*successful_crafting_ammount} out of ${count*attempted_crafting_ammount}]`;\r\n                    } else {\r\n                        msg+= ` x${count*successful_crafting_ammount}`;\r\n                    }\r\n                    log_message(msg, \"crafting\");\r\n\r\n                } else {\r\n                    let msg = `Failed to create ${item_templates[result_id].getName()}`;\r\n                    if(attempted_crafting_ammount > 1) {\r\n                        msg+=` [0 out of ${count*attempted_crafting_ammount}]`;\r\n                    } else {\r\n                        msg+= ` x${count*attempted_crafting_ammount}`;\r\n                    }\r\n                    log_message(msg, \"crafting\");\r\n                }\r\n\r\n                leveled = add_xp_to_skill({skill: recipe_skill, xp_to_add: xp_to_add});\r\n                if(is_medicine) {\r\n                    let leveled = add_xp_to_skill({skill: skills[\"Medicine\"], xp_to_add: xp_to_add/2});\r\n                    if(leveled) {\r\n                        character.stats.add_active_effect_bonus();\r\n                        update_character_stats();\r\n                        Object.keys(character.inventory).forEach(item_key => {\r\n                            if(character.inventory[item_key].item.tags.medicine) {\r\n                                update_displayed_character_inventory({item_key});\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                \r\n                if(attempted_crafting_ammount < ammount_that_can_be_crafted) {\r\n                    use_recipe(target, ammount_that_can_be_crafted - attempted_crafting_ammount);\r\n                } else {\r\n                    update_item_recipe_visibility();\r\n                    update_item_recipe_tooltips();\r\n                }\r\n                \r\n                //do those two whether success or fail since materials get used either way\r\n\r\n                if(leveled) {\r\n                    //reload all recipe tooltips of matching category, except it's kinda pointless if reload happens anyway?\r\n                }\r\n            } else {\r\n                console.warn(`Tried to use a recipe without having enough materials!`);\r\n            }\r\n            \r\n        } else if(subcategory === \"components\" || selected_recipe.recipe_type === \"component\" ) {\r\n            //either component or clothing\r\n            //read the selected material, pass it as param\r\n\r\n            const material_div = recipe_div.children[1].querySelector(\".selected_material\");\r\n            if(!material_div) {\r\n                return;\r\n            } else {\r\n                const material_1_key = material_div.dataset.item_key;\r\n                const {id} = JSON.parse(material_1_key);\r\n                const recipe_material = selected_recipe.materials.filter(x=> x.material_id===id)[0];\r\n\r\n                if(recipe_material.count <= character.inventory[material_1_key]?.count) {\r\n\r\n                    const recipe_skill = skills[selected_recipe.recipe_skill];\r\n                    let ammount_that_can_be_crafted = Math.min(ammount_wanted_to_craft, Math.floor(character.inventory[material_1_key].count/recipe_material.count));\r\n                    let needed_xp = recipe_skill.total_xp_to_next_lvl - recipe_skill.total_xp;\r\n                    let accumulated_xp = 0;\r\n                    let crafted_items = {};\r\n                    let crafted_count = 0;\r\n                    const all_crafted = {};\r\n                    const result = selected_recipe.getResult(character.inventory[material_1_key].item, station_tier);\r\n\r\n                    let quality;\r\n\r\n                    for(let i = 0; i < ammount_that_can_be_crafted; i++) {\r\n                        quality = selected_recipe.get_quality(station_tier - result.component_tier);\r\n\r\n                        crafted_items[quality] = (crafted_items[quality]+1 || 1);\r\n                        all_crafted[quality] = (all_crafted[quality]+1 || 1);\r\n                        crafted_count++;\r\n\r\n                        accumulated_xp += get_recipe_xp_value({category, subcategory, recipe_id, material_count:recipe_material.count, result_tier: result.component_tier, rarity_multiplier: rarity_multipliers[getItemRarity(quality)]});\r\n                        if(accumulated_xp * get_skill_xp_gain(recipe_skill.skill_id) >= needed_xp) {\r\n                            const qualities = Object.keys(crafted_items).map(x => Number(x)).sort((a,b)=>b-a);\r\n                            const highest_qual = qualities[0];\r\n\r\n                            if(crafted_count > 1) {\r\n                                log_message(`Created ${result.getName()} x${crafted_count} [highest quality: ${highest_qual}% x${crafted_items[highest_qual]}] (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                            } else {\r\n                                log_message(`Created ${result.getName()} [${highest_qual}% quality] x1 (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                            }\r\n\r\n                            add_xp_to_skill({skill: recipe_skill, xp_to_add: accumulated_xp});\r\n\r\n                            crafted_items = {};\r\n                            crafted_count = 0;\r\n                            accumulated_xp = 0;\r\n                            needed_xp = recipe_skill.total_xp_to_next_lvl - recipe_skill.total_xp;\r\n                        }\r\n                    }\r\n                    total_crafting_attempts+=ammount_that_can_be_crafted;\r\n                    total_crafting_successes+=ammount_that_can_be_crafted;\r\n\r\n                    if(crafted_count > 0) {\r\n                        const qualities = Object.keys(crafted_items).map(x => Number(x)).sort((a,b)=>b-a);\r\n                        const highest_qual = qualities[0];\r\n\r\n                        if(crafted_count > 1) {\r\n                            log_message(`Created ${result.getName()} x${crafted_count} [highest quality: ${highest_qual}% x${crafted_items[highest_qual]}] (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n\r\n                        } else {\r\n                            log_message(`Created ${result.getName()} [${highest_qual}% quality] x1 (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                        }\r\n                        add_xp_to_skill({skill: recipe_skill, xp_to_add: accumulated_xp});\r\n                    }\r\n\r\n                    //grab key, modify it with proper quality value, add (together with count) to list for adding to inv\r\n                    const result_key = result.getInventoryKey();\r\n                    const parsed_key = JSON.parse(result_key);\r\n                    const crafted_qualities = Object.keys(all_crafted).map(x => Number(x));\r\n                    const to_add = [];\r\n                    for(let i = 0; i < crafted_qualities.length; i++ ) {\r\n                        const new_key = JSON.stringify({...parsed_key, quality: crafted_qualities[i]});\r\n                        to_add.push({item_key: new_key, count: all_crafted[crafted_qualities[i]]}); \r\n                    }\r\n                    add_to_character_inventory(to_add);\r\n\r\n                    //remove used mats\r\n                    remove_from_character_inventory([{item_key: material_1_key, item_count: recipe_material.count*ammount_that_can_be_crafted}]);\r\n\r\n                    //update display\r\n                    material_div.classList.remove(\"selected_material\");\r\n                    if(character.inventory[material_1_key]) { \r\n                        //if item is still present in inventory + if there's not enough of it = change recipe color\r\n                        if(recipe_material.count > character.inventory[material_1_key].count) { \r\n                            material_div.classList.add(\"recipe_unavailable\");\r\n                        }\r\n                    } else {\r\n                        material_div.remove();\r\n                    }\r\n                    \r\n                    update_displayed_material_choice({category, subcategory, recipe_id, refreshing: true});\r\n                    //update_displayed_crafting_recipes();\r\n                } else {\r\n                    console.log(\"Tried to create an item without having necessary materials\");\r\n                }\r\n            }\r\n            \r\n        } else if(subcategory === \"equipment\") {\r\n            //read the selected components, pass them as params\r\n            \r\n            const component_1_key = recipe_div.children[1].children[0].children[1].querySelector(\".selected_component\")?.dataset.item_key;\r\n            \r\n            const component_2_key = recipe_div.children[1].children[1].children[1].querySelector(\".selected_component\")?.dataset.item_key;\r\n\r\n            if(!component_1_key || !component_2_key) {\r\n                return;\r\n            } else {\r\n                if(!character.inventory[component_1_key] || !character.inventory[component_2_key]) {\r\n                    throw new Error(`Tried to create item with components that are not present in the inventory!`);\r\n                } else {\r\n                    //a probably unnecessary check to see if they are actually in inventory\r\n                    //no need to check how many there is as crafting always takes only 1\r\n                    if(character.inventory[component_1_key].count && character.inventory[component_2_key].count) {\r\n                        \r\n                        const recipe_skill = skills[selected_recipe.recipe_skill]; //should always be \"Crafting\" but who knows what changes in the future?\r\n                        let ammount_that_can_be_crafted = Math.min(ammount_wanted_to_craft, character.inventory[component_1_key].count, character.inventory[component_2_key].count);\r\n                        let needed_xp = recipe_skill.total_xp_to_next_lvl - recipe_skill.total_xp;\r\n                        let accumulated_xp = 0;\r\n                        let crafted_items = {};\r\n                        let crafted_count = 0;\r\n                        const comp_1 = character.inventory[component_1_key].item;\r\n                        const comp_2 = character.inventory[component_2_key].item;\r\n                        const all_crafted = {};\r\n                        const result = selected_recipe.getResult(comp_1, comp_2, station_tier);\r\n\r\n                        let quality;\r\n                        const comp_quality_weighted = selected_recipe.get_component_quality_weighted(comp_1, comp_2);\r\n                        const comp_tier_max = Math.max(comp_1.component_tier, comp_2.component_tier)\r\n\r\n                        for(let i = 0; i < ammount_that_can_be_crafted; i++) {\r\n                            quality = selected_recipe.get_quality(comp_quality_weighted, (station_tier-Math.max(comp_tier_max)) || 0);\r\n\r\n                            crafted_items[quality] = (crafted_items[quality]+1 || 1);\r\n                            all_crafted[quality] = (all_crafted[quality]+1 || 1);\r\n                            crafted_count++;\r\n\r\n                            accumulated_xp += get_recipe_xp_value({category, subcategory, recipe_id, selected_components: [comp_1, comp_2], rarity_multiplier: rarity_multipliers[getItemRarity(quality)]});\r\n                            \r\n                            if(accumulated_xp * get_skill_xp_gain(recipe_skill.skill_id) >= needed_xp) {\r\n                                const qualities = Object.keys(crafted_items).map(x => Number(x)).sort((a,b)=>b-a);\r\n                                const highest_qual = qualities[0];\r\n\r\n                                if(crafted_count > 1) {\r\n                                    log_message(`Created ${result.getName()} x${crafted_count} [highest quality: ${highest_qual}% x${crafted_items[highest_qual]}] (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                                } else {\r\n                                    log_message(`Created ${result.getName()} [${highest_qual}% quality] x1 (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                                }\r\n\r\n                                add_xp_to_skill({skill: recipe_skill, xp_to_add: accumulated_xp});\r\n\r\n                                crafted_items = {};\r\n                                crafted_count = 0;\r\n                                accumulated_xp = 0;\r\n                                needed_xp = recipe_skill.total_xp_to_next_lvl - recipe_skill.total_xp;\r\n                            }\r\n                        }\r\n\r\n                        total_crafting_attempts+=ammount_that_can_be_crafted;\r\n                        total_crafting_successes+=ammount_that_can_be_crafted;\r\n\r\n                        if(crafted_count > 0) {\r\n                            const qualities = Object.keys(crafted_items).map(x => Number(x)).sort((a,b)=>b-a);\r\n                            const highest_qual = qualities[0];\r\n\r\n                            if(crafted_count > 1) {\r\n                                log_message(`Created ${result.getName()} x${crafted_count} [highest quality: ${highest_qual}% x${crafted_items[highest_qual]}] (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n\r\n                            } else {\r\n                                log_message(`Created ${result.getName()} [${highest_qual}% quality] x1 (+${Math.floor(accumulated_xp*get_skill_xp_gain(recipe_skill.skill_id))} xp)`, \"crafting\");\r\n                            }\r\n                            add_xp_to_skill({skill: recipe_skill, xp_to_add: accumulated_xp});\r\n                        }\r\n\r\n                        //grab key, modify it with proper quality value, add (together with count) to list for adding to inv\r\n                        const result_key = result.getInventoryKey();\r\n                        const parsed_key = JSON.parse(result_key);\r\n                        const crafted_qualities = Object.keys(all_crafted).map(x => Number(x));\r\n                        const to_add = [];\r\n                        for(let i = 0; i < crafted_qualities.length; i++ ) {\r\n                            const new_key = JSON.stringify({...parsed_key, quality: crafted_qualities[i]});\r\n                            to_add.push({item_key: new_key, count: all_crafted[crafted_qualities[i]]}); \r\n                        }\r\n                        add_to_character_inventory(to_add);\r\n\r\n                        //remove used mats\r\n                        remove_from_character_inventory([{item_key: component_1_key, item_count: ammount_that_can_be_crafted}, {item_key: component_2_key, item_count: ammount_that_can_be_crafted}]);\r\n                        const component_keys = {};\r\n                        component_keys[component_1_key] = true;\r\n                        component_keys[component_2_key] = true;\r\n                        update_displayed_component_choice({category, recipe_id, component_keys});\r\n                    }\r\n                }\r\n            }\r\n            //update_displayed_crafting_recipes();\r\n        }  \r\n    }\r\n}\r\n\r\nfunction character_equip_item(item_key) {\r\n    equip_item_from_inventory(item_key);\r\n    if(current_enemies) {\r\n        reset_combat_loops();\r\n    } else if(current_location.tags.safe_zone) {\r\n        //update resource gathering tooltips in case there's a skill lvl bonus change\r\n        //done on any change as of now, but could be slightly optimized\r\n        Object.keys(current_location.activities).forEach(activity_key => {\r\n            if(current_location.activities[activity_key].gained_resources) {\r\n                update_gathering_tooltip(current_location.activities[activity_key]);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction character_unequip_item(item_slot) {\r\n    unequip_item(item_slot);\r\n    if(current_enemies) {\r\n        reset_combat_loops();\r\n        //set_new_combat({enemies: current_enemies});\r\n    }\r\n}\r\n\r\nfunction use_item(item_key) { \r\n    const {id} = JSON.parse(item_key);\r\n    const item_effects = item_templates[id].effects;\r\n    let used = false;\r\n    for(let i = 0; i < item_effects.length; i++) {\r\n        const duration = item_templates[id].effects[i].duration;\r\n        if(!active_effects[item_effects[i].effect] || active_effects[item_effects[i].effect].duration < duration) {\r\n\r\n            active_effects[item_effects[i].effect] = new ActiveEffect({...effect_templates[item_effects[i].effect], duration});\r\n            used = true;\r\n        }\r\n        //goes through item effects, checking if it has any that is either not currently active or with longer duration than any active\r\n    }\r\n    \r\n    if(used) {\r\n        update_displayed_effects();\r\n        character.stats.add_active_effect_bonus();\r\n        update_character_stats();\r\n\r\n        const recovered = [];\r\n        Object.keys(item_templates[id].recovery_chances).forEach(recoverable => {\r\n            const chance = item_templates[id].recovery_chances[recoverable];\r\n            if(chance > Math.random()) {\r\n                recovered.push({item_id: recoverable});\r\n            }\r\n        });\r\n        add_to_character_inventory(recovered);\r\n\r\n        if(item_templates[id].tags.medicine) {\r\n            let leveled = add_xp_to_skill({skill: skills[\"Medicine\"], xp_to_add: (item_templates[id].value/10)**.6667});\r\n            //if levelup, update all medicine tooltips\r\n            if(leveled) {\r\n                character.stats.add_active_effect_bonus();\r\n                update_character_stats();\r\n                Object.keys(character.inventory).forEach(item_key => {\r\n                    if(character.inventory[item_key].item.tags.medicine) {\r\n                        update_displayed_character_inventory({item_key});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        remove_from_character_inventory([{item_key}]);\r\n    }\r\n}\r\n\r\nfunction add_consumable_to_favourites(item_id) {\r\n    if(!item_templates[item_id]) {\r\n        throw new Error(`Tried to add \"${item_id}\" to auto consume, but no such item exists.`);\r\n    } else if(!item_templates[item_id].tags.usable) {\r\n        throw new Error(`Tried to add \"${item_id}\" to auto consume, but it's not a consumable.`);\r\n    }\r\n    favourite_consumables[item_id] = true;\r\n    //update autouse button display? currently done in .html\r\n}\r\n\r\nfunction remove_consumable_from_favourites(item_id) {\r\n    if(!favourite_consumables[item_id]) {\r\n        throw new Error(`Tried to remove \"${item_id}\" from auto consume, but it's not there.`);\r\n    }\r\n    delete favourite_consumables[item_id];\r\n    if(character.inventory[item_templates[item_id].getInventoryKey()]) {\r\n        //update autouse button display? currently done in .html\r\n    }\r\n}\r\n\r\nfunction change_consumable_favourite_status(item_id) {\r\n    if(!item_templates[item_id]) {\r\n        throw new Error(`Tried to change \"${item_id}\" auto consum status, but no such item exists.`);\r\n    } else if(!item_templates[item_id].tags.usable) {\r\n        throw new Error(`Tried to change \"${item_id}\" auto consume status, but it's not a consumable.`);\r\n    }\r\n\r\n    if(favourite_consumables[item_id]) {\r\n        remove_consumable_from_favourites(item_id);\r\n    } else {\r\n        add_consumable_to_favourites(item_id);\r\n    }\r\n\r\n    if(character.inventory[item_templates[item_id].getInventoryKey()]) {\r\n        //update autouse button display? currently done in .html\r\n    }\r\n}\r\n\r\nfunction get_date() {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month_num = date.getMonth()+1;\r\n    const month = month_num > 9 ? month_num.toString() : \"0\" + month_num.toString();\r\n    const day = date.getDate() > 9 ? date.getDate().toString() : \"0\" + date.getDate().toString();\r\n    const hour = date.getHours() > 9 ? date.getHours().toString() : \"0\" + date.getHours().toString();\r\n    const minute = date.getMinutes() > 9 ? date.getMinutes().toString() : \"0\" + date.getMinutes().toString();\r\n    const second = date.getSeconds() > 9 ? date.getSeconds().toString() : \"0\" + date.getSeconds().toString();\r\n    return `${year}-${month}-${day} ${hour}_${minute}_${second}`;\r\n}\r\n\r\nfunction is_on_dev() {\r\n    return window.location.href.endsWith(\"-dev/\");\r\n}\r\n\r\nfunction is_JSON(str) {\r\n    try {\r\n        return (JSON.parse(str) && !!str);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * puts all important stuff into a string\r\n * @returns string with save data\r\n */\r\nfunction create_save() {\r\n    try{\r\n        const save_data = {};\r\n        save_data[\"game version\"] = game_version;\r\n        save_data[\"current time\"] = current_game_time;\r\n        save_data.saved_at = get_date();\r\n        save_data.total_playtime = total_playtime;\r\n        save_data.total_deaths = total_deaths;\r\n        save_data.total_crafting_attempts = total_crafting_attempts;\r\n        save_data.total_crafting_successes = total_crafting_successes;\r\n        save_data.total_kills = total_kills;\r\n        save_data.total_crits_done = total_crits_done;\r\n        save_data.total_crits_taken = total_crits_taken;\r\n        save_data.total_hits_done = total_hits_done;\r\n        save_data.total_hits_taken = total_hits_taken;\r\n        save_data.strongest_hit = strongest_hit;\r\n        save_data.gathered_materials = gathered_materials;\r\n        save_data.global_flags = global_flags;\r\n        save_data[\"character\"] = {\r\n                                name: character.name, titles: character.titles, \r\n                                inventory: {}, equipment: character.equipment,\r\n                                money: character.money, \r\n                                xp: {\r\n                                    total_xp: character.xp.total_xp,\r\n                                },\r\n                                hp_to_full: character.stats.full.max_health - character.stats.full.health,\r\n                                stamina_to_full: character.stats.full.max_stamina - character.stats.full.stamina,\r\n                                reputation: character.reputation,\r\n                            };\r\n        //stats don't get saved, they will be recalculated upon loading\r\n        save_data[\"player_storage\"] = {inventory: {}};\r\n\r\n        Object.keys(character.inventory).forEach(key =>{\r\n            save_data[\"character\"].inventory[key] = {count: character.inventory[key].count};\r\n        });\r\n        \r\n        Object.keys(player_storage.inventory).forEach(key =>{\r\n            save_data[\"player_storage\"].inventory[key] = {count: player_storage.inventory[key].count};\r\n        });\r\n       \r\n        //Object.keys(character.equipment).forEach(key =>{\r\n            //save_data[\"character\"].equipment[key] = true;\r\n            //todo: need to rewrite equipment loading first\r\n        //});\r\n\r\n        save_data[\"favourite_consumables\"] = favourite_consumables;\r\n\r\n        save_data[\"recipes\"] = {};\r\n        Object.keys(recipes).forEach(category => {\r\n            save_data[\"recipes\"][category] = {};\r\n            Object.keys(recipes[category]).forEach(subcategory => {\r\n                save_data[\"recipes\"][category][subcategory] = {};\r\n                Object.keys(recipes[category][subcategory]).forEach(recipe_id => {\r\n                    save_data[\"recipes\"][category][subcategory][recipe_id] = {};\r\n                    save_data[\"recipes\"][category][subcategory][recipe_id].is_unlocked = recipes[category][subcategory][recipe_id].is_unlocked;\r\n                    save_data[\"recipes\"][category][subcategory][recipe_id].is_finished = recipes[category][subcategory][recipe_id].is_finished;\r\n                });\r\n            });\r\n        });\r\n\r\n        save_data[\"skills\"] = {};\r\n        Object.keys(skills).forEach(function(key) {\r\n            if(!skills[key].is_parent)\r\n            {\r\n                save_data[\"skills\"][skills[key].skill_id] = {total_xp: skills[key].total_xp}; \r\n                //a bit redundant, but keep it in case key in skills is different than skill_id\r\n            }\r\n        }); //only save total xp of each skill, again in case of any changes\r\n        \r\n        save_data[\"current location\"] = current_location.id;\r\n\r\n        save_data[\"locations\"] = {};\r\n        Object.keys(locations).forEach(function(key) { \r\n            save_data[\"locations\"][key] = {};\r\n            if(locations[key].is_unlocked) {      \r\n                save_data[\"locations\"][key].is_unlocked = true;\r\n            }\r\n            if(locations[key].is_finished) {      \r\n                save_data[\"locations\"][key].is_finished = true;\r\n            }\r\n\r\n            if(\"parent_location\" in locations[key]) { //combat zone //check for is_unlocked too?\r\n                save_data[\"locations\"][key][\"enemy_groups_killed\"] = locations[key].enemy_groups_killed;\r\n            }\r\n\r\n            if(locations[key].activities) {\r\n                save_data[\"locations\"][key][\"unlocked_activities\"] = []\r\n                Object.keys(locations[key].activities).forEach(activity_key => {\r\n                    if(locations[key].activities[activity_key].is_unlocked) {\r\n                        save_data[\"locations\"][key][\"unlocked_activities\"].push(activity_key);\r\n                    }\r\n                });\r\n            }\r\n            if(locations[key].actions) {\r\n                save_data[\"locations\"][key][\"actions\"] = {};\r\n                Object.keys(locations[key].actions).forEach(action_key => {\r\n                    if(locations[key].actions[action_key].is_unlocked || locations[key].actions[action_key].is_finished) {\r\n                        save_data[\"locations\"][key][\"actions\"][action_key] = {};\r\n\r\n                        if(locations[key].actions[action_key].is_unlocked) {\r\n                            save_data[\"locations\"][key][\"actions\"][action_key].is_unlocked = true;\r\n                        }\r\n                        if(locations[key].actions[action_key].is_finished) {\r\n                            save_data[\"locations\"][key][\"actions\"][action_key].is_finished = true;\r\n                        }\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            if(locations[key].housing?.is_unlocked) {\r\n                save_data[\"locations\"][key].housing_unlocked = true;\r\n            }\r\n        }); //save locations' (and their activities'/actions') unlocked status and their killcounts\r\n\r\n        save_data.favourite_locations = favourite_locations;\r\n\r\n        save_data[\"activities\"] = {};\r\n        Object.keys(activities).forEach(function(activity) {\r\n            if(activities[activity].is_unlocked) {\r\n                save_data[\"activities\"][activity] = {is_unlocked: true};\r\n            }\r\n        }); //save activities' unlocked status (this is separate from unlock status in location)\r\n\r\n        if(current_activity) {\r\n            save_data[\"current_activity\"] = {activity_id: current_activity.id, \r\n                                             working_time: current_activity.working_time, \r\n                                             earnings: current_activity.earnings,\r\n                                             gathering_time: current_activity.gathering_time,\r\n                                             gathered_materials: current_activity.gathered_materials,\r\n                                            };\r\n        }\r\n        \r\n        save_data[\"dialogues\"] = {};\r\n        Object.keys(dialogues).forEach(function(dialogue) {\r\n            save_data[\"dialogues\"][dialogue] = {is_unlocked: dialogues[dialogue].is_unlocked, is_finished: dialogues[dialogue].is_finished, textlines: {}};\r\n            if(dialogues[dialogue].textlines) {\r\n                Object.keys(dialogues[dialogue].textlines).forEach(function(textline) {\r\n                    save_data[\"dialogues\"][dialogue].textlines[textline] = {is_unlocked: dialogues[dialogue].textlines[textline].is_unlocked,\r\n                                                                is_finished: dialogues[dialogue].textlines[textline].is_finished};\r\n                });\r\n            }\r\n        }); //save dialogues' and their textlines' unlocked/finished statuses\r\n\r\n        save_data[\"traders\"] = {};\r\n        Object.keys(traders).forEach(function(trader) {\r\n            if(traders[trader].is_finished) {\r\n                //trader is no longer accessible\r\n                save_data[\"traders\"][trader] = {is_unlocked: traders[trader].is_unlocked,\r\n                                                is_finished: traders[trader].is_finished};\r\n\r\n            } else if(traders[trader].is_unlocked) {\r\n                if(traders[trader].last_refresh == -1 || traders[trader].can_refresh()) {\r\n                    //no need to save inventory, as trader would be anyway refreshed on any visit\r\n                    save_data[\"traders\"][trader] = {last_refresh: -1,\r\n                                                    is_unlocked: traders[trader].is_unlocked};\r\n                } else {\r\n                    const temp_inventory = {};\r\n                    Object.keys(traders[trader].inventory).forEach(key =>{\r\n                        temp_inventory[key] = {count: traders[trader].inventory[key].count};\r\n                    });\r\n                    save_data[\"traders\"][trader] = {inventory: temp_inventory,\r\n                                                    last_refresh: traders[trader].last_refresh,\r\n                                                    is_unlocked: traders[trader].is_unlocked,\r\n                                                    is_finished: traders[trader].is_finished,\r\n                                                };\r\n                }\r\n            }\r\n        });\r\n\r\n        save_data[\"books\"] = {};\r\n        Object.keys(book_stats).forEach(book => {\r\n            if(book_stats[book].accumulated_time > 0 || book_stats[book].is_finished) {\r\n                //check both conditions, on loading set as finished if either 'is_finished' or has enough time accumulated\r\n                save_data[\"books\"][book] = {\r\n                    accumulated_time: book_stats[book].accumulated_time,\r\n                    is_finished: book_stats[book].is_finished\r\n                };\r\n            }\r\n        });\r\n\r\n        save_data[\"is_reading\"] = is_reading;\r\n\r\n        save_data[\"is_sleeping\"] = is_sleeping;\r\n\r\n        save_data[\"active_effects\"] = active_effects;\r\n\r\n        save_data[\"enemy_killcount\"] = enemy_killcount;\r\n\r\n        save_data[\"loot_sold_count\"] = loot_sold_count;\r\n\r\n        save_data[\"last_combat_location\"] = last_combat_location;\r\n        save_data[\"last_location_with_bed\"] = last_location_with_bed;\r\n\r\n        save_data[\"options\"] = options;\r\n\r\n        save_data[\"stances\"] = {};\r\n        Object.keys(stances).forEach(stance => {\r\n            if(stances[stance].is_unlocked) {\r\n                save_data[\"stances\"][stance] = true;\r\n            }\r\n        }) \r\n        save_data[\"current_stance\"] = current_stance;\r\n        save_data[\"selected_stance\"] = selected_stance;\r\n        save_data[\"faved_stances\"] = faved_stances;\r\n\r\n        save_data[\"message_filters\"] = {\r\n            unlocks: document.documentElement.style.getPropertyValue('--message_unlocks_display') !== \"none\",\r\n            events: document.documentElement.style.getPropertyValue('--message_events_display') !== \"none\",\r\n            combat: document.documentElement.style.getPropertyValue('--message_combat_display') !== \"none\",\r\n            loot: document.documentElement.style.getPropertyValue('--message_loot_display') !== \"none\",\r\n            background: document.documentElement.style.getPropertyValue('--message_background_display') !== \"none\",\r\n            crafting: document.documentElement.style.getPropertyValue('--message_crafting_display') !== \"none\",\r\n        };\r\n\r\n        return JSON.stringify(save_data);\r\n    } catch(error) {\r\n        console.error(\"Something went wrong on saving the game!\");\r\n        console.error(error);\r\n        log_message(\"FAILED TO CREATE A SAVE FILE, PLEASE CHECK CONSOLE FOR ERRORS AND REPORT IT\", \"message_critical\");\r\n    }\r\n} \r\n\r\n/**\r\n * called from index.html\r\n * @returns save string encoded to base64\r\n */\r\nfunction save_to_file() {\r\n    return btoa(create_save());\r\n}\r\n\r\n/**\r\n * saves game state to localStorage, on manual saves also logs message about it being done\r\n * @param {Boolean} is_manual \r\n */\r\nfunction save_to_localStorage({key, is_manual}) {\r\n    const save = create_save();\r\n    if(save) {\r\n        localStorage.setItem(key, save);\r\n    }\r\n    \r\n    if(is_manual) {\r\n        log_message(\"Saved the game manually\");\r\n        save_counter = 0;\r\n    }\r\n\r\n    return JSON.parse(save).saved_at;\r\n}\r\n\r\nfunction save_progress() {\r\n    if(is_on_dev()) {\r\n        save_to_localStorage({key: dev_save_key, is_manual: true});\r\n    } else {\r\n        save_to_localStorage({key: save_key, is_manual: true});\r\n    }\r\n}\r\n\r\n//core function for loading\r\nfunction load(save_data) {\r\n    //single loading method\r\n    \r\n    //current enemies are not saved\r\n\r\n    current_game_time.loadTime(save_data[\"current time\"]);\r\n    time_field.innerHTML = current_game_time.toString();\r\n    //set game time\r\n\r\n    Object.keys(save_data.global_flags||{}).forEach(flag => {\r\n        global_flags[flag] = save_data.global_flags[flag];\r\n    });\r\n\r\n    total_playtime = save_data.total_playtime || 0;\r\n    total_deaths = save_data.total_deaths || 0;\r\n    total_crafting_attempts = save_data.total_crafting_attempts || 0;\r\n    total_crafting_successes = save_data.total_crafting_successes || 0;\r\n    total_kills = save_data.total_kills || 0;\r\n    total_crits_done = save_data.total_crits_done || 0;\r\n    total_crits_taken = save_data.total_crits_taken || 0;\r\n    total_hits_done = save_data.total_hits_done || 0;\r\n    total_hits_taken = save_data.total_hits_taken || 0;\r\n    strongest_hit = save_data.strongest_hit || 0;\r\n    gathered_materials = save_data.gathered_materials || {};\r\n\r\n    name_field.value = save_data.character.name;\r\n    character.name = save_data.character.name;\r\n\r\n    last_location_with_bed = save_data.last_location_with_bed;\r\n    last_combat_location = save_data.last_combat_location;\r\n\r\n    options.uniform_text_size_in_action = save_data.options?.uniform_text_size_in_action;\r\n    option_uniform_textsize(options.uniform_text_size_in_action);\r\n\r\n    options.auto_return_to_bed = save_data.options?.auto_return_to_bed;\r\n    option_bed_return(options.auto_return_to_bed);\r\n\r\n    options.disable_combat_autoswitch = save_data.options?.disable_combat_autoswitch;\r\n    option_combat_autoswitch(options.disable_combat_autoswitch);\r\n\r\n    options.remember_message_log_filters = save_data.options?.remember_message_log_filters;\r\n    if(save_data.message_filters) {\r\n        Object.keys(message_log_filters).forEach(filter => {\r\n            message_log_filters[filter] = save_data.message_filters[filter] ?? true;\r\n        })\r\n    }\r\n    option_remember_filters(options.remember_message_log_filters);\r\n\r\n    option_log_all_gathering(options.log_every_gathering_period);\r\n    option_log_gathering_result(options.log_total_gathering_gain);\r\n\r\n    //this can be removed at some point\r\n    const is_from_before_eco_rework = compare_game_version(\"v0.3.5\", save_data[\"game version\"]) == 1;\r\n    setLootSoldCount(save_data.loot_sold_count || {});\r\n\r\n    character.money = (save_data.character.money || 0) * ((is_from_before_eco_rework == 1)*10 || 1);\r\n    update_displayed_money();\r\n\r\n    add_xp_to_character(save_data.character.xp.total_xp, false);\r\n\r\n    Object.keys(save_data.favourite_consumables || {}).forEach(key => {\r\n        favourite_consumables[key] = true;\r\n    });\r\n\r\n    Object.keys(save_data.character.reputation || {}).forEach(rep_region => {\r\n        if(rep_region in character.reputation) {\r\n            character.reputation[rep_region] = save_data.character.reputation[rep_region];\r\n        } else {\r\n            console.warn(`Skipped reputation, no such region as \"${rep_region}\"`);\r\n        }\r\n    });\r\n    //todo: call a function to update display (once rep is added to display)\r\n\r\n    Object.keys(save_data.skills).forEach(key => { \r\n        if(key === \"Literacy\") {\r\n            return; //done separately, for compatibility with older saves (can be eventually removed)\r\n        }\r\n        if(skills[key] && !skills[key].is_parent){\r\n            if(save_data.skills[key].total_xp > 0) {\r\n                add_xp_to_skill({skill: skills[key], xp_to_add: save_data.skills[key].total_xp, \r\n                                    should_info: false, add_to_parent: true, use_bonus: false\r\n                                });\r\n            }\r\n        } else if(save_data.skills[key].total_xp > 0) {\r\n                console.warn(`Skill \"${key}\" couldn't be found!`);\r\n        }\r\n    }); //add xp to skills\r\n\r\n    if(save_data.books) {\r\n        let total_book_xp = 0;\r\n        const literacy_xp = save_data.skills[\"Literacy\"].total_xp;\r\n        Object.keys(save_data.books).forEach(book=>{\r\n            if(!item_templates[book]) {\r\n                console.warn(`Book ${book} couldn't be found and was skipped!`);\r\n            }\r\n\r\n            if(save_data.books[book].accumulated_time > 0) {\r\n                if(save_data.books[book].is_finished) {\r\n                    item_templates[book].setAsFinished();\r\n                    character.stats.add_book_bonus(book_stats[book].bonuses);\r\n\r\n                    total_book_xp += book_stats[book].required_time * book_stats[book].literacy_xp_rate;\r\n                } else {\r\n                    item_templates[book].addProgress(save_data.books[book].accumulated_time);\r\n                    total_book_xp += book_stats[book].accumulated_time * book_stats[book].literacy_xp_rate;\r\n                }\r\n            }\r\n        });\r\n        if(total_book_xp > literacy_xp) {\r\n            add_xp_to_skill({skill: skills[\"Literacy\"], should_info: false, xp_to_add: total_book_xp, use_bonus: false});\r\n            console.warn(`Saved XP for \"Literacy skill\" was less than it should be based on progress with books (${literacy_xp} vs ${total_book_xp}), so it was adjusted to match it!`);\r\n        } else {\r\n            add_xp_to_skill({skill: skills[\"Literacy\"], should_info: false, xp_to_add: literacy_xp, use_bonus: false});\r\n        }\r\n    }\r\n\r\n    if(save_data[\"stances\"]) {\r\n        Object.keys(save_data[\"stances\"]).forEach(stance => {\r\n            if(save_data[\"stances\"]) {\r\n                stances[stance].is_unlocked = true;\r\n            } \r\n        });\r\n    }\r\n\r\n    update_displayed_stance_list(stances, current_stance, faved_stances);\r\n\r\n    if(save_data.faved_stances) {\r\n        Object.keys(save_data.faved_stances).forEach(stance_id=> {\r\n            if(stances[stance_id] && stances[stance_id].is_unlocked) {\r\n                fav_stance(stance_id);\r\n            }\r\n        });\r\n    }\r\n\r\n    if(save_data.current_stance) {\r\n        current_stance = stances[save_data.current_stance.id] || stances[save_data.current_stance];\r\n        selected_stance = stances[save_data.selected_stance.id] || stances[save_data.selected_stance];\r\n\r\n        change_stance(selected_stance.id);\r\n    }\r\n\r\n    Object.keys(save_data.character.equipment).forEach(function(key){\r\n        if(save_data.character.equipment[key] != null) {\r\n            const quality_mult = compare_game_version(\"v0.4.4\", save_data[\"game version\"]) == 1?100:1; //x100 if its from before quality rework\r\n            try{\r\n                if(key === \"weapon\") {\r\n                    const {quality, equip_slot} = save_data.character.equipment[key];\r\n                    let components;\r\n                    if(save_data.character.equipment[key].components) {\r\n                        components = save_data.character.equipment[key].components\r\n                    } else {\r\n                        const {head, handle} = save_data.character.equipment[key];\r\n                        components = {head, handle};\r\n                    }\r\n\r\n                    if(!item_templates[components.head]){\r\n                        console.warn(`Skipped item: weapon head component \"${components.head}\" couldn't be found!`);\r\n                    } else if(!item_templates[components.handle]) {\r\n                        console.warn(`Skipped item: weapon handle component \"${components.handle}\" couldn't be found!`);\r\n                    } else {\r\n                        const item = getItem({components, quality:quality*quality_mult, equip_slot, item_type: \"EQUIPPABLE\"});\r\n                        equip_item(item);\r\n                    }\r\n                } else if(key === \"off-hand\") {\r\n                    const {quality, equip_slot} = save_data.character.equipment[key];\r\n                    let components;\r\n                    if(save_data.character.equipment[key].components) {\r\n                        components = save_data.character.equipment[key].components\r\n                    } else {\r\n                        const {shield_base, handle} = save_data.character.equipment[key];\r\n                        components = {shield_base, handle};\r\n                    }\r\n\r\n                    if(!item_templates[components.shield_base]){\r\n                        console.warn(`Skipped item: shield base component \"${components.shield_base}\" couldn't be found!`);\r\n                    } else if(!item_templates[components.handle]) {\r\n                        console.warn(`Skipped item: shield handle \"${components.handle}\" couldn't be found!`);\r\n                    } else {\r\n                        const item = getItem({components, quality:quality*quality_mult, equip_slot, item_type: \"EQUIPPABLE\"});\r\n                        equip_item(item);\r\n                    }\r\n                } else if(save_data.character.equipment[key].equip_slot === \"arti'fact\" || save_data.character.equipment[key].tags?.tool) {\r\n                    equip_item(getItem(save_data.character.equipment[key]));\r\n                } else { //armor\r\n                    \r\n                    const {quality, equip_slot} = save_data.character.equipment[key];\r\n                    \r\n                    if(save_data.character.equipment[key].components && save_data.character.equipment[key].components.internal.includes(\" [component]\")) {\r\n                        //compatibility for armors from before v0.4.3\r\n                        const item = getItem({...item_templates[save_data.character.equipment[key].components.internal.replace(\" [component]\",\"\")], quality:quality*quality_mult});\r\n                        equip_item(item);\r\n                    }\r\n                    else if(save_data.character.equipment[key].components) {\r\n                        let components = save_data.character.equipment[key].components;\r\n                        if(!item_templates[components.internal]){\r\n                            console.warn(`Skipped item: internal armor component \"${components.internal}\" couldn't be found!`);\r\n                        } else if(components.external && !item_templates[components.external]) {\r\n                            console.warn(`Skipped item: external armor component \"${components.external}\" couldn't be found!`);\r\n                        } else {\r\n                            const item = getItem({components, quality:quality*quality_mult, equip_slot, item_type: \"EQUIPPABLE\"});\r\n                            equip_item(item);\r\n                        }\r\n                    } else {\r\n                        const item = getItem({...item_templates[save_data.character.equipment[key].name], quality:quality*quality_mult});\r\n                        equip_item(item);\r\n                    }\r\n\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }); //equip proper items\r\n\r\n    if(character.equipment.weapon === null) {\r\n        equip_item(null);\r\n    }\r\n\r\n    const item_list = [];\r\n\r\n    Object.keys(save_data.character.inventory).forEach(key => {\r\n        if(is_JSON(key)) {\r\n            //case where this is False is left as compatibility for saves before v0.4.4\r\n            let {id, components, quality} = JSON.parse(key);\r\n            if(id && !quality) { \r\n                //id is just a key of item_templates\r\n                //if it's present, item is \"simple\" (no components)\r\n                //and if it has no quality, it's something non-equippable\r\n                if(item_templates[id]) {\r\n                    if(id === \"Coal\" && is_a_older_than_b(save_data[\"game version\"], \"v0.4.6.12\")) {\r\n                        item_list.push({item_key: item_templates[\"Charcoal\"].getInventoryKey(), count: save_data.character.inventory[key].count, quality: quality});\r\n                    } else {\r\n                        item_list.push({item_key: key, count: save_data.character.inventory[key].count, quality: quality});\r\n                    }\r\n                } else {\r\n                    console.warn(`Inventory item \"${key}\" from save on version \"${save_data[\"game version\"]} couldn't be found!`);\r\n                    return;\r\n                }\r\n            } else if(components) {\r\n                const {head, handle, shield_base, internal, external} = components;\r\n                if(head) { //weapon\r\n                    if(!item_templates[head]){\r\n                        console.warn(`Skipped item: weapon head component \"${head}\" couldn't be found!`);\r\n                        return;\r\n                    } else if(!item_templates[handle]) {\r\n                        console.warn(`Skipped item: weapon handle component \"${handle}\" couldn't be found!`);\r\n                        return;\r\n                    } else {\r\n                        item_list.push({item_key: key, count: save_data.character.inventory[key].count, quality: quality});\r\n                    }\r\n                } else if(shield_base){ //shield\r\n                    if(!item_templates[shield_base]){\r\n                        console.warn(`Skipped item: shield base component \"${shield_base}\" couldn't be found!`);\r\n                        return;\r\n                    } else if(!item_templates[handle]) {\r\n                        console.warn(`Skipped item: shield handle component \"${handle}\" couldn't be found!`);\r\n                        return;\r\n                    } else {\r\n                        item_list.push({item_key: key, count: save_data.character.inventory[key].count, quality: quality});\r\n                    }\r\n                } else if(internal) { //armor\r\n                    if(!item_templates[internal]){\r\n                        console.warn(`Skipped item: internal armor component \"${internal}\" couldn't be found!`);\r\n                        return;\r\n                    } else if(!item_templates[external]) {\r\n                        console.warn(`Skipped item: external armor component \"${external}\" couldn't be found!`);\r\n                        return;\r\n                    } else {\r\n                        let equip_slot = getArmorSlot(internal);\r\n                        if(!equip_slot) {\r\n                            return;\r\n                        }\r\n                        item_list.push({item_key: key, count: save_data.character.inventory[key].count, quality: quality});\r\n                    }\r\n                } else {\r\n                    console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} seems to refer to non-existing item type!`);\r\n                }\r\n            } else if(quality) { //no comps but quality (clothing / artifact?)\r\n                item_list.push({item_key: key, count: save_data.character.inventory[key].count, quality: quality});\r\n            } else {\r\n                console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} is incorrect!`);\r\n            }\r\n        } else { //older savefile\r\n            if(Array.isArray(save_data.character.inventory[key])) { //is a list of unstackable items (equippables or books), needs to be added 1 by 1\r\n                for(let i = 0; i < save_data.character.inventory[key].length; i++) {\r\n                    try{\r\n                        if(save_data.character.inventory[key][i].item_type === \"EQUIPPABLE\" ) {\r\n                            if(save_data.character.inventory[key][i].equip_slot === \"weapon\") {\r\n                                \r\n                                const {quality} = save_data.character.inventory[key][i];\r\n                                let components;\r\n                                if(save_data.character.inventory[key][i].components) {\r\n                                    components = save_data.character.inventory[key][i].components\r\n                                } else {\r\n                                    const {head, handle} = save_data.character.inventory[key][i];\r\n                                    components = {head, handle};\r\n                                }\r\n\r\n                                if(!item_templates[components.head]){\r\n                                    console.warn(`Skipped item: weapon head component \"${components.head}\" couldn't be found!`);\r\n                                } else if(!item_templates[components.handle]) {\r\n                                    console.warn(`Skipped item: weapon handle component \"${components.handle}\" couldn't be found!`);\r\n                                } else {\r\n                                    const item = getItem({item_type: \"EQUIPPABLE\", equip_slot: \"weapon\", components});\r\n                                    item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                }\r\n                            } else if(save_data.character.inventory[key][i].equip_slot === \"off-hand\") {\r\n                                const {quality} = save_data.character.inventory[key][i];\r\n                                let components;\r\n                                if(save_data.character.inventory[key][i].components) {\r\n                                    components = save_data.character.inventory[key][i].components\r\n                                } else {\r\n                                    const {shield_base, handle} = save_data.character.inventory[key][i];\r\n                                    components = {shield_base, handle};\r\n                                }\r\n    \r\n                                if(!item_templates[components.shield_base]){\r\n                                    console.warn(`Skipped item: shield base component \"${components.shield_base}\" couldn't be found!`);\r\n                                } else if(!item_templates[components.handle]) {\r\n                                    console.warn(`Skipped item: shield handle \"${components.handle}\" couldn't be found!`);\r\n                                } else {\r\n                                    const item = getItem({item_type: \"EQUIPPABLE\", equip_slot: \"off-hand\", components});\r\n                                    item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                }\r\n                            } else if(save_data.character.inventory[key][i].equip_slot === \"artifact\") {\r\n                                item_list.push({item_key: key, count: 1});\r\n                            } else { //armor    \r\n                                if(save_data.character.inventory[key][i].components && save_data.character.inventory[key][i].components.internal.includes(\" [component]\")) {\r\n                                    //compatibility for armors from before v0.4.3\r\n                                    //const item = getItem({item_type: \"EQUIPPABLE\", equip_slot: \"weapon\", components});\r\n                                    item_list.push({item_key: key, count: 1});\r\n                                }\r\n                                else if(save_data.character.inventory[key][i].components) {\r\n                                    let components = save_data.character.inventory[key][i].components;\r\n                                    if(!item_templates[components.internal]){\r\n                                        console.warn(`Skipped item: internal armor component \"${components.internal}\" couldn't be found!`);\r\n                                    } else if(components.external && !item_templates[components.external]) {\r\n                                        console.warn(`Skipped item: external armor component \"${components.external}\" couldn't be found!`);\r\n                                    } else {\r\n                                        const item = getItem({item_type: \"EQUIPPABLE\", components});\r\n                                        item_list.push({item_key: item.getInventoryKey(), count: 1, quality: save_data.character.inventory[key][i].quality*100});\r\n                                    }\r\n                                } else {\r\n                                    item_list.push({item_id: key, count: 1});\r\n                                }\r\n                            }\r\n                        } else {\r\n                            item_list.push({item_id: key, count: 1, quality: save_data.character.inventory[key][i].quality*100});\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }\r\n                }\r\n            } else { //is stackable \r\n                if(item_templates[key]) {\r\n                    item_list.push({item_id: key, count: save_data.character.inventory[key].count});\r\n                } else {\r\n                    console.warn(`Inventory item \"${key}\" from save on version \"${save_data[\"game version\"]}\" couldn't be found!`);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }); //add all loaded items to list\r\n    add_to_character_inventory(item_list); // and then to inventory\r\n\r\n    const storage_item_list = [];\r\n    if(save_data.player_storage) {\r\n        Object.keys(save_data.player_storage.inventory).forEach(function(key){\r\n            if(is_JSON(key)) {\r\n                let {id, components, quality} = JSON.parse(key);\r\n                if(id && !quality) { \r\n                    //id is just a key of item_templates\r\n                    //if it's present, item is \"simple\" (no components)\r\n                    //and if it has no quality, it's something non-equippable\r\n                    if(item_templates[id]) {\r\n                        storage_item_list.push({item_key: key, count: save_data.player_storage.inventory[key].count, quality: quality});\r\n                    } else {\r\n                        console.warn(`Inventory item \"${key}\" from save on version \"${save_data[\"game version\"]} couldn't be found!`);\r\n                        return;\r\n                    }\r\n                } else if(components) {\r\n                    const {head, handle, shield_base, internal, external} = components;\r\n                    if(head) { //weapon\r\n                        if(!item_templates[head]){\r\n                            console.warn(`Skipped item: weapon head component \"${head}\" couldn't be found!`);\r\n                            return;\r\n                        } else if(!item_templates[handle]) {\r\n                            console.warn(`Skipped item: weapon handle component \"${handle}\" couldn't be found!`);\r\n                            return;\r\n                        } else {\r\n                            storage_item_list.push({item_key: key, count: save_data.player_storage.inventory[key].count, quality: quality});\r\n                        }\r\n                    } else if(shield_base){ //shield\r\n                        if(!item_templates[shield_base]){\r\n                            console.warn(`Skipped item: shield base component \"${shield_base}\" couldn't be found!`);\r\n                            return;\r\n                        } else if(!item_templates[handle]) {\r\n                            console.warn(`Skipped item: shield handle component \"${handle}\" couldn't be found!`);\r\n                            return;\r\n                        } else {\r\n                            storage_item_list.push({item_key: key, count: save_data.player_storage.inventory[key].count, quality: quality});\r\n                        }\r\n                    } else if(internal) { //armor\r\n                        if(!item_templates[internal]){\r\n                            console.warn(`Skipped item: internal armor component \"${internal}\" couldn't be found!`);\r\n                            return;\r\n                        } else if(!item_templates[external]) {\r\n                            console.warn(`Skipped item: external armor component \"${external}\" couldn't be found!`);\r\n                            return;\r\n                        } else {\r\n                            let equip_slot = getArmorSlot(internal);\r\n                            if(!equip_slot) {\r\n                                return;\r\n                            }\r\n                            storage_item_list.push({item_key: key, count: save_data.player_storage.inventory[key].count, quality: quality});\r\n                        }\r\n                    } else {\r\n                        console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} seems to refer to non-existing item type!`);\r\n                    }\r\n                } else if(quality) { //no comps but quality (clothing / artifact?)\r\n                    storage_item_list.push({item_key: key, count: save_data.player_storage.inventory[key].count, quality: quality});\r\n                } else {\r\n                    console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} is incorrect!`);\r\n                }\r\n            } //storage didn't exist before everything became stackable, so no need to check the other case\r\n        }); //add all loaded items to list\r\n        player_storage.add_to_inventory(storage_item_list); // and then to storage inventory\r\n    }\r\n\r\n    Object.keys(save_data.dialogues).forEach(function(dialogue) {\r\n        if(dialogues[dialogue]) {\r\n            dialogues[dialogue].is_unlocked = save_data.dialogues[dialogue].is_unlocked;\r\n            dialogues[dialogue].is_finished = save_data.dialogues[dialogue].is_finished;\r\n        } else {\r\n            console.warn(`Dialogue \"${dialogue}\" couldn't be found!`);\r\n            return;\r\n        }\r\n        if(save_data.dialogues[dialogue].textlines) {  \r\n            Object.keys(save_data.dialogues[dialogue].textlines).forEach(function(textline){\r\n                if(dialogues[dialogue].textlines[textline]) {\r\n                    dialogues[dialogue].textlines[textline].is_unlocked = save_data.dialogues[dialogue].textlines[textline].is_unlocked;\r\n                    dialogues[dialogue].textlines[textline].is_finished = save_data.dialogues[dialogue].textlines[textline].is_finished;\r\n                } else {\r\n                    console.warn(`Textline \"${textline}\" in dialogue \"${dialogue}\" couldn't be found!`);\r\n                    return;\r\n                }\r\n            }); \r\n        }\r\n    }); //load for dialogues and their textlines their unlocked/finished status\r\n\r\n    Object.keys(save_data.traders).forEach(function(trader) { \r\n        let trader_item_list = [];\r\n        if(traders[trader]){\r\n            traders[trader].is_unlocked = save_data.traders[trader].is_unlocked;\r\n\r\n            if(save_data.traders[trader].is_finished) {\r\n                traders[trader].is_finished = true;\r\n                return;\r\n            }\r\n\r\n            if(save_data.traders[trader].inventory) {\r\n                Object.keys(save_data.traders[trader].inventory).forEach(function(key){\r\n                    if(is_JSON(key)) {\r\n                        //case where this is False is left as compatibility for saves before v0.4.4\r\n                        let {id, components, quality} = JSON.parse(key);\r\n                        if(id && !quality) { \r\n                            //id is just a key of item_templates\r\n                            //if it's present, item is \"simple\" (no components)\r\n                            //and if it has no quality, it's something non-equippable\r\n                            if(item_templates[id]) {\r\n                                trader_item_list.push({item_key: key, count: save_data.traders[trader].inventory[key].count});\r\n                            } else {\r\n                                console.warn(`Inventory item \"${key}\" from save on version \"${save_data[\"game version\"]} couldn't be found!`);\r\n                                return;\r\n                            }\r\n                        } else if(components) {\r\n                            const {head, handle, shield_base, internal, external} = components;\r\n                            if(head) { //weapon\r\n                                if(!item_templates[head]){\r\n                                    console.warn(`Skipped item: weapon head component \"${head}\" couldn't be found!`);\r\n                                    return;\r\n                                } else if(!item_templates[handle]) {\r\n                                    console.warn(`Skipped item: weapon handle component \"${handle}\" couldn't be found!`);\r\n                                    return;\r\n                                } else {\r\n                                    trader_item_list.push({item_key: key, count: 1, quality});\r\n                                }\r\n                            } else if(shield_base){ //shield\r\n                                if(!item_templates[shield_base]){\r\n                                    console.warn(`Skipped item: shield base component \"${shield_base}\" couldn't be found!`);\r\n                                    return;\r\n                                } else if(!item_templates[handle]) {\r\n                                    console.warn(`Skipped item: shield handle component \"${handle}\" couldn't be found!`);\r\n                                    return;\r\n                                } else {\r\n                                    //const item = getItem({components, quality, equip_slot: \"off-hand\", item_type: \"EQUIPPABLE\"});\r\n                                    trader_item_list.push({item_key: key, count: 1, quality});\r\n                                }\r\n                            } else if(internal) { //armor\r\n                                if(!item_templates[internal]){\r\n                                    console.warn(`Skipped item: internal armor component \"${internal}\" couldn't be found!`);\r\n                                    return;\r\n                                } else if(!item_templates[external]) {\r\n                                    console.warn(`Skipped item: external armor component \"${external}\" couldn't be found!`);\r\n                                    return;\r\n                                } else {\r\n                                    if(!getArmorSlot(internal)) {\r\n                                        return;\r\n                                    }\r\n                                    trader_item_list.push({item_key: key, count: 1, quality});\r\n                                }\r\n                            } else {\r\n                                console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} seems to refer to non-existing item type!`);\r\n                            }\r\n                        } else if(quality) { //no comps but quality (clothing / artifact?)\r\n                            trader_item_list.push({item_key: key, count: 1, quality});\r\n                        } else {\r\n                            console.error(`Intentory key \"${key}\" from save on version \"${save_data[\"game version\"]} is incorrect!`);\r\n                        }\r\n                        \r\n                    } else { //older save\r\n                        if(Array.isArray(save_data.traders[trader].inventory[key])) { //is a list of unstackable (equippable or book) item, needs to be added 1 by 1\r\n                            for(let i = 0; i < save_data.traders[trader].inventory[key].length; i++) {\r\n                                try{\r\n                                    if(save_data.traders[trader].inventory[key][i].item_type === \"EQUIPPABLE\"){\r\n                                        if(save_data.traders[trader].inventory[key][i].equip_slot === \"weapon\") {\r\n                                            const {quality} = save_data.traders[trader].inventory[key][i];\r\n                                            let components;\r\n                                            if(save_data.traders[trader].inventory[key][i].components) {\r\n                                                components = save_data.traders[trader].inventory[key][i].components\r\n                                            } else {\r\n                                                const {head, handle} = save_data.traders[trader].inventory[key][i];\r\n                                                components = {head, handle};\r\n                                            }\r\n    \r\n                                            if(!item_templates[components.head]){\r\n                                                console.warn(`Skipped item: weapon head component \"${components.head}\" couldn't be found!`);\r\n                                            } else if(!item_templates[components.handle]) {\r\n                                                console.warn(`Skipped item: weapon handle component \"${components.handle}\" couldn't be found!`);\r\n                                            } else {\r\n                                                const item = getItem({components, item_type: \"EQUIPPABLE\", equip_slot: \"weapon\"});\r\n                                                trader_item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                            }\r\n                                        } else if(save_data.traders[trader].inventory[key][i].equip_slot === \"off-hand\") {\r\n                                            \r\n                                            const {quality} = save_data.traders[trader].inventory[key][i];\r\n                                            let components;\r\n                                            if(save_data.traders[trader].inventory[key][i].components) {\r\n                                                components = save_data.traders[trader].inventory[key][i].components\r\n                                            } else {\r\n                                                const {shield_base, handle} = save_data.traders[trader].inventory[key][i];\r\n                                                components = {shield_base, handle};\r\n                                            }\r\n    \r\n                                            if(!item_templates[components.shield_base]){\r\n                                                console.warn(`Skipped item: shield base component \"${components.shield_base}\" couldn't be found!`);\r\n                                            } else if(!item_templates[components.handle]) {\r\n                                                console.warn(`Skipped item: shield handle \"${components.handle}\" couldn't be found!`);\r\n                                            } else {\r\n                                                //trader_item_list.push({item_key: key, count: 1, quality: quality*100});\r\n                                                const item = getItem({components, item_type: \"EQUIPPABLE\", equip_slot: \"off-hand\"});\r\n                                                trader_item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                            }\r\n                                        } else { //armor\r\n                                            const {quality} = save_data.traders[trader].inventory[key][i];\r\n                                            if(save_data.traders[trader].inventory[key][i].components && save_data.traders[trader].inventory[key][i].components.internal.includes(\" [component]\")) {\r\n                                                //compatibility for armors from before v0.4.3\r\n                                                const item = getItem({...item_templates[key]});\r\n                                                trader_item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                            } else if(save_data.traders[trader].inventory[key][i].components) {\r\n                                                let components = save_data.traders[trader].inventory[key][i].components;\r\n                                                if(!item_templates[components.internal]){\r\n                                                    console.warn(`Skipped item: internal armor component \"${components.internal}\" couldn't be found!`);\r\n                                                } else if(components.external && !item_templates[components.external]) {\r\n                                                    console.warn(`Skipped item: external armor component \"${components.external}\" couldn't be found!`);\r\n                                                } else {\r\n                                                    //trader_item_list.push({item_key: key, count: 1, quality: quality*100});\r\n                                                    const item = getItem({components, item_type: \"EQUIPPABLE\", equip_slot: \"armor\"});\r\n                                                    trader_item_list.push({item_key: item.getInventoryKey(), count: 1, quality: quality*100});\r\n                                                }\r\n                                            } else { //no components, so clothing? not sure, it's old stuff\r\n                                                trader_item_list.push({item_id: key, count: 1, quality: quality*100});\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        console.warn(`Skipped item, no such item type as \"${0}\" could be found`)\r\n                                    }\r\n                                } catch (error) {\r\n                                    console.error(error);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            save_data.traders[trader].inventory[key].item.value = item_templates[key].value;\r\n                            if(item_templates[key].item_type === \"EQUIPPABLE\") {\r\n                                save_data.traders[trader].inventory[key].item.equip_effect = item_templates[key].equip_effect;\r\n                            } else if(item_templates[key].item_type === \"USABLE\") {\r\n                                save_data.traders[trader].inventory[key].item.use_effect = item_templates[key].use_effect;\r\n                            }\r\n                            trader_item_list.push({item_id: key, count: save_data.traders[trader].inventory[key].count});\r\n                        }\r\n                    }\r\n                });\r\n                \r\n            }\r\n            traders[trader].refresh(); \r\n            traders[trader].inventory = {};\r\n            add_to_trader_inventory(trader, trader_item_list);\r\n\r\n            traders[trader].last_refresh = save_data.traders[trader].last_refresh; \r\n        }\r\n        else {\r\n            console.warn(`Trader \"${trader} couldn't be found!`);\r\n            return;\r\n        }\r\n    }); //load trader inventories\r\n\r\n    Object.keys(save_data.locations).forEach(function(key) {\r\n        if(locations[key]) {\r\n            if(save_data.locations[key].is_unlocked) {\r\n                locations[key].is_unlocked = true;\r\n            }\r\n            if(save_data.locations[key].is_finished) {\r\n                locations[key].is_finished = true;\r\n            }\r\n            if(\"parent_location\" in locations[key]) { // if combat zone\r\n                locations[key].enemy_groups_killed = save_data.locations[key].enemy_groups_killed || 0;   \r\n\r\n                if(is_a_older_than_b(save_data[\"game version\"], \"v0.4.6\")) { //compatibility patch for pre-rep and/or pre-rewrite of rewards with required clear count\r\n                    if(locations[key].enemy_groups_killed / locations[key].enemy_count >= 1) {\r\n                        const {rep_rew} = locations[key].first_reward;\r\n                        if(rep_rew) {\r\n                            process_rewards({reputation: rep_rew});\r\n                        }\r\n                    }\r\n\r\n                    if(locations[key].rewards_with_clear_requirement) {\r\n                        for(let i = 0; i < locations[key].rewards_with_clear_requirement.length; i++) {\r\n                            if(locations[key].enemy_groups_killed == locations[key].enemy_count * locations[key].rewards_with_clear_requirement[i].required_clear_count)\r\n                            {\r\n                                //always do it if there was enough or more than enough clears\r\n                                process_rewards({rewards: locations[key].rewards_with_clear_requirement[i], source_type: \"location\", source_name: locations[key].name, is_first_clear: false, source_id: locations[key].id});\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if(locations[key].rewards_with_clear_requirement) {\r\n                        for(let i = 0; i < locations[key].rewards_with_clear_requirement.length; i++) {\r\n                            if(locations[key].enemy_groups_killed == locations[key].enemy_count * locations[key].rewards_with_clear_requirement[i].required_clear_count)\r\n                            {\r\n                                //always do it if there was enough or more than enough clears\r\n                                process_rewards({rewards: locations[key].rewards_with_clear_requirement[i], source_type: \"location\", source_name: locations[key].name, is_first_clear: false, source_id: locations[key].id, only_unlocks: true});\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //unlock activities\r\n            if(save_data.locations[key].unlocked_activities) {\r\n                for(let i = 0; i < save_data.locations[key].unlocked_activities.length; i++) {\r\n                    if(!locations[key].activities[save_data.locations[key].unlocked_activities[i]]) {\r\n                        continue;\r\n                    }\r\n                    if(save_data.locations[key].unlocked_activities[i] === \"plowing the fields\") { //old compatibility patch\r\n                        locations[key].activities[\"fieldwork\"].is_unlocked = true;\r\n                    } else {\r\n                        locations[key].activities[save_data.locations[key].unlocked_activities[i]].is_unlocked = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(save_data.locations[key].actions) {\r\n                Object.keys(save_data.locations[key].actions).forEach(action_key => {\r\n                    if(save_data.locations[key].actions[action_key].is_unlocked) {\r\n                        locations[key].actions[action_key].is_unlocked = true;\r\n                    }\r\n\r\n                    if(save_data.locations[key].actions[action_key].is_finished) {\r\n                        locations[key].actions[action_key].is_finished = true;\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            if(save_data.locations[key].housing_unlocked) {\r\n                if(!Object.keys(locations[key].housing).length) {\r\n                    console.warn(`Location \"${locations[key].name}\" was saved as having a bed unlocked, but it no longer has this mechanic and was skipped!`);\r\n                } else {\r\n                    locations[key].housing.is_unlocked = true;\r\n                    if(save_data.locations[key].is_unlocked) {\r\n                        unlocked_beds[key] = true;\r\n                    }\r\n                }\r\n            } else if(locations[key].housing?.is_unlocked){ {\r\n                unlocked_beds[key] = true;\r\n            }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.warn(`Location \"${key}\" couldn't be found!`);\r\n            return;\r\n        }\r\n    }); //load for locations their unlocked status and their killcounts\r\n\r\n    if(is_a_older_than_b(save_data[\"game version\"], \"v0.4.6.7\")) {\r\n        locations[\"Town square\"].is_unlocked = false;\r\n        if(save_data[\"current location\"] === \"Town square\") {\r\n            save_data[\"current location\"] = \"Village\";\r\n        }\r\n        //tiny lock and location swap as it was accidentally unlocked in 4.6.0 - 4.6.6\r\n    }\r\n    \r\n\r\n    Object.keys(save_data.activities).forEach(function(activity) {\r\n        if(activities[activity]) {\r\n            activities[activity].is_unlocked = save_data.activities[activity].is_unlocked || false;\r\n        } else if(activity === \"plowing the fields\") { //old compatibility patch\r\n            activities[\"fieldwork\"].is_unlocked = save_data.activities[activity].is_unlocked || false;\r\n        } else {\r\n            console.warn(`Activity \"${activity}\" couldn't be found!`);\r\n        }\r\n    });\r\n\r\n    setLootSoldCount(save_data.loot_sold_count || {});\r\n\r\n    //load active effects if save is not from before their rework\r\n    if(compare_game_version(save_data[\"game version\"], \"v0.4.4\") >= 0){\r\n        Object.keys(save_data.active_effects).forEach(function(effect) {\r\n            active_effects[effect] =  new ActiveEffect({...effect_templates[effect], duration: save_data.active_effects[effect].duration});\r\n        });\r\n        character.stats.add_active_effect_bonus();\r\n    }\r\n    if(save_data.character.hp_to_full == null || save_data.character.hp_to_full >= character.stats.full.max_health) {\r\n        character.stats.full.health = 1;\r\n    } else {\r\n        character.stats.full.health = character.stats.full.max_health - save_data.character.hp_to_full;\r\n    }\r\n    //if missing hp is null (save got corrupted) or its more than max_health, set health to minimum allowed (which is 1)\r\n    //otherwise just do simple substraction\r\n    //then same with stamina below\r\n    if(save_data.character.stamina_to_full == null || save_data.character.stamina_to_full >= character.stats.full.max_stamina) {\r\n        character.stats.full.stamina = 0;\r\n    } else {\r\n        character.stats.full.stamina = character.stats.full.max_stamina - save_data.character.stamina_to_full;\r\n    }\r\n\r\n    if(save_data[\"enemy_killcount\"]) {\r\n        Object.keys(save_data[\"enemy_killcount\"]).forEach(enemy_name => {\r\n            enemy_killcount[enemy_name] = save_data[\"enemy_killcount\"][enemy_name];\r\n            create_new_bestiary_entry(enemy_name);\r\n        });\r\n    }\r\n\r\n    \r\n    if(save_data[\"recipes\"]) {\r\n        Object.keys(save_data[\"recipes\"]).forEach(category => {\r\n            Object.keys(save_data[\"recipes\"][category]).forEach(subcategory => {\r\n                Object.keys(save_data[\"recipes\"][category][subcategory]).forEach(recipe_id => {\r\n                    recipes[category][subcategory][recipe_id].is_unlocked = save_data[\"recipes\"][category][subcategory][recipe_id].is_unlocked ?? false;\r\n                    recipes[category][subcategory][recipe_id].is_finished = save_data[\"recipes\"][category][subcategory][recipe_id].is_finished ?? false;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    if(save_data.favourite_locations) {\r\n        Object.keys(save_data.favourite_locations).forEach(location_key => {\r\n            if(locations[location_key]) {\r\n                favourite_locations[location_key] = true;\r\n            } else {\r\n                console.warn(`Saved favourite locations included \"${location_key}\", which is not a valid location id`);\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    update_character_stats();\r\n    update_displayed_character_inventory();\r\n\r\n    update_displayed_health();\r\n    //load current health\r\n    \r\n    update_displayed_effects();\r\n    \r\n    create_displayed_crafting_recipes();\r\n    change_location(save_data[\"current location\"]);\r\n\r\n    //set activity if any saved\r\n    if(save_data.current_activity) {\r\n        //search for it in location from save_data\r\n        const activity_id = save_data.current_activity.activity_id;\r\n        if(typeof activity_id !== \"undefined\" && current_location.activities[activity_id] && activities[current_location.activities[activity_id].activity_name]) {\r\n            \r\n            start_activity(activity_id);\r\n            if(activities[current_location.activities[activity_id].activity_name].type === \"JOB\") {\r\n                current_activity.working_time = save_data.current_activity.working_time;\r\n                current_activity.earnings = save_data.current_activity.earnings * ((is_from_before_eco_rework == 1)*10 || 1);\r\n                document.getElementById(\"action_end_earnings\").innerHTML = `(earnings: ${format_money(current_activity.earnings)})`;\r\n            } else if(activities[current_location.activities[activity_id].activity_name].type === \"GATHERING\") {\r\n                current_activity.gathered_materials = save_data.current_activity.gathered_materials || {};\r\n            }\r\n\r\n            current_activity.gathering_time = save_data.current_activity.gathering_time;\r\n            \r\n        } else {\r\n            console.warn(`Couldn't find saved activity \"${activity_id}\"! It might have been removed`);\r\n        }\r\n    }\r\n\r\n    if(save_data.is_sleeping) {\r\n        start_sleeping();\r\n    }\r\n    if(save_data.is_reading) {\r\n        start_reading(save_data.is_reading);\r\n    }\r\n\r\n    update_displayed_time();\r\n} \r\n\r\n/**\r\n * called from index.html;\r\n * loads game from file by resetting everything that needs to be reset and then calling main loading method with same parameter;\r\n * @param {String} save_string \r\n */\r\nfunction load_from_file(save_string) {\r\n    try{\r\n        if(is_on_dev()) {\r\n            localStorage.setItem(dev_save_key, atob(save_string));\r\n        } else {\r\n            localStorage.setItem(save_key, atob(save_string));\r\n        }        \r\n        window.location.reload(false);\r\n    } catch (error) {\r\n        console.error(\"Something went wrong on preparing to load from file!\");\r\n        console.error(error);\r\n    }\r\n} \r\n\r\n/**\r\n * loads the game from localStorage\r\n * it's called when page is refreshed, so there's no need for it to reset anything\r\n */\r\nfunction load_from_localstorage() {\r\n    try{\r\n        if(is_on_dev()) {\r\n            if(localStorage.getItem(dev_save_key)){\r\n                load(JSON.parse(localStorage.getItem(dev_save_key)));\r\n                log_message(\"Loaded dev save. If you want to use save from live version, import it through options panel or manually\");\r\n            } else {\r\n                load(JSON.parse(localStorage.getItem(save_key)));\r\n                log_message(\"Dev save was not found. Loaded live version save.\");\r\n            }\r\n        } else {\r\n            load(JSON.parse(localStorage.getItem(save_key)));\r\n        }\r\n    } catch(error) {\r\n        console.error(\"Something went wrong on loading from localStorage!\");\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction load_backup() {\r\n    try{\r\n        if(is_on_dev()) {\r\n            if(localStorage.getItem(dev_backup_key)){\r\n                localStorage.setItem(dev_save_key, localStorage.getItem(dev_backup_key));\r\n                window.location.reload(false);\r\n            } else {\r\n                console.log(\"Can't load backup as there is none yet.\");\r\n                log_message(\"Can't load backup as there is none yet.\");\r\n            }\r\n        } else {\r\n            if(localStorage.getItem(backup_key)){\r\n                localStorage.setItem(save_key, localStorage.getItem(backup_key));\r\n                window.location.reload(false);\r\n            } else {\r\n                console.log(\"Can't load backup as there is none yet.\")\r\n                log_message(\"Can't load backup as there is none yet.\");\r\n            }\r\n        }\r\n    } catch(error) {\r\n        console.error(\"Something went wrong on loading from localStorage!\");\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction load_other_release_save() {\r\n    try{\r\n        if(is_on_dev()) {\r\n            if(localStorage.getItem(save_key)){\r\n                localStorage.setItem(dev_save_key, localStorage.getItem(save_key));\r\n                window.location.reload(false);\r\n            } else {\r\n                console.log(\"There are no saves on the other release.\")\r\n                log_message(\"There are no saves on the other release.\");\r\n            }\r\n        } else {\r\n            if(localStorage.getItem(dev_save_key)){\r\n                localStorage.setItem(save_key, localStorage.getItem(dev_save_key));\r\n                window.location.reload(false);\r\n            } else {\r\n                console.log(\"There are no saves on the other release.\");\r\n                log_message(\"There are no saves on the other release.\");\r\n            }\r\n        }\r\n    } catch(error) {\r\n        console.error(\"Something went wrong on loading from localStorage!\");\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction hard_reset() {\r\n    let confirmation = prompt(`This will erase all your progress and you will have to start from the very beginning. If you are sure this is what you want, type \"reset\" below`);\r\n\r\n    if(confirmation === \"reset\" || confirmation === `\"reset\"`) {\r\n        if(is_on_dev()) {\r\n            localStorage.removeItem(dev_save_key);\r\n        } else {\r\n            localStorage.removeItem(save_key);\r\n        }\r\n        window.location.reload();\r\n        return false;\r\n    } else {\r\n        console.log(\"Hard reset was cancelled.\");\r\n    }\r\n}\r\n\r\n//update game time\r\nfunction update_timer(time_in_minutes) {\r\n    const was_night = is_night(current_game_time);\r\n    current_game_time.goUp(time_in_minutes || (is_sleeping ? 6 : 1));\r\n\r\n    //update_character_stats(); //done every second, probably only used for day-night cycle at this point\r\n    const daynight_change = was_night !== is_night(current_game_time);\r\n    if(daynight_change) {\r\n        update_character_stats();\r\n    }\r\n    \r\n    update_displayed_time();\r\n}\r\n\r\nfunction update() {\r\n    setTimeout(() => {\r\n        end_date = Date.now(); \r\n        //basically when previous tick ends\r\n\r\n        time_variance_accumulator += ((end_date - start_date) - 1000/tickrate);\r\n        //duration of previous tick, minus time it was supposed to take\r\n        //important to keep it between setting end_date and start_date, so they are 2 completely separate values\r\n\r\n        start_date = Date.now();\r\n        /*\r\n        basically when current tick starts\r\n        so before this assignment, start_date is when previous tick started\r\n        and end_date is when previous_tick ended\r\n        */\r\n\r\n        const prev_day = current_game_time.day;\r\n        update_timer();\r\n\r\n        const curr_day = current_game_time.day;\r\n        if(curr_day > prev_day) {\r\n            recoverItemPrices();\r\n            update_displayed_character_inventory();\r\n        }\r\n\r\n        //update effect durations and displays;\r\n        Object.keys(active_effects).forEach(key => {\r\n            active_effects[key].duration--;\r\n            if(active_effects[key].duration <= 0) {\r\n                delete active_effects[key];\r\n                character.stats.add_active_effect_bonus();\r\n                update_character_stats();\r\n            }\r\n        });\r\n        update_displayed_effect_durations();\r\n        update_displayed_effects();\r\n\r\n        if(\"parent_location\" in current_location){ //if it's a combat_zone\r\n\r\n            //use consumables if their longest effect ran out\r\n            //remove them from list if there are no more in inventory\r\n            Object.keys(favourite_consumables).forEach(item_id => {\r\n                const inv_key = item_templates[item_id].getInventoryKey();\r\n                if(!character.inventory[inv_key]) {\r\n                    //if out of item, remove it from auto-consume\r\n                    remove_consumable_from_favourites(item_id);\r\n                    return;\r\n                }\r\n\r\n                const effects = item_templates[item_id].effects.sort((a,b) => {\r\n                    if(options.auto_use_when_longest_runs_out) {\r\n                        return b.duration-a.duration;\r\n                    } else {\r\n                         return a.duration-b.duration;\r\n                    }\r\n                });\r\n\r\n                //if effect not active, use item and return\r\n                if(!active_effects[effects[0].effect]) {\r\n                    use_item(inv_key);\r\n                    //use will call remove item which will call remove consumable from favs, so nothing more to do here\r\n                    return;\r\n                }\r\n            });\r\n\r\n            add_xp_to_skill({skill: skills[\"Breathing\"], xp_to_add: 0.1});\r\n        } else { //everything other than combat\r\n            if(is_sleeping) {\r\n                do_sleeping();\r\n                add_xp_to_skill({skill: skills[\"Sleeping\"], xp_to_add: current_location.housing?.sleeping_xp_per_tick});\r\n            }\r\n            else {\r\n                if(is_resting) {\r\n                    do_resting();\r\n                }\r\n                if(is_reading) {\r\n                    do_reading();\r\n                }\r\n            } \r\n\r\n            if(selected_stance.id !== current_stance.id) {\r\n                change_stance(selected_stance.id);\r\n            }\r\n\r\n            if(current_activity) { //in activity\r\n\r\n                //add xp to all related skills\r\n                if(activities[current_activity.activity_name].type !== \"GATHERING\"){\r\n                    for(let i = 0; i < activities[current_activity.activity_name].base_skills_names?.length; i++) {\r\n                        add_xp_to_skill({skill: skills[activities[current_activity.activity_name].base_skills_names[i]], xp_to_add: current_activity.skill_xp_per_tick});\r\n                    }\r\n                }\r\n\r\n                if(activities[current_activity.activity_name].type === \"TRAINING\") {\r\n                    add_xp_to_skill({skill: skills[\"Breathing\"], xp_to_add: 0.5});\r\n                } else {\r\n                    add_xp_to_skill({skill: skills[\"Breathing\"], xp_to_add: 0.1});\r\n                }\r\n\r\n                current_activity.gathering_time += 1;\r\n                if(current_activity.gained_resources) {\r\n                    if(current_activity.gathering_time >= current_activity.gathering_time_needed) { \r\n                        const {gathering_time_needed, gained_resources} = current_activity.getActivityEfficiency();\r\n\r\n                        current_activity.gathering_time_needed = gathering_time_needed;\r\n\r\n                        const items = [];\r\n\r\n                        for(let i = 0; i < gained_resources.length; i++) {\r\n                            if(Math.random() > (1-gained_resources[i].chance)) {\r\n                                const count = Math.floor(Math.random()*(gained_resources[i].count[1]-gained_resources[i].count[0]+1))+gained_resources[i].count[0];\r\n\r\n                                items.push({item_key: item_templates[gained_resources[i].name].getInventoryKey(), count: count});\r\n\r\n                                gathered_materials[gained_resources[i].name] = (gathered_materials[gained_resources[i].name] || 0) + count;\r\n                            }\r\n                        }\r\n\r\n                        if(items.length > 0) {\r\n                            if(options.log_every_gathering_period) {\r\n                                log_loot({loot_list: items});\r\n                            }\r\n\r\n                            for(let i = 0; i < items.length; i++) {\r\n                                current_activity.gathered_materials[items[i].item_key] = (current_activity.gathered_materials[items[i].item_key] + items[i].count || items[i].count);\r\n                            }\r\n                            \r\n                            add_to_character_inventory(items);\r\n                        }\r\n\r\n                        let leveled = false;\r\n                        if(activities[current_activity.activity_name].type === \"GATHERING\"){\r\n                            for(let i = 0; i < activities[current_activity.activity_name].base_skills_names?.length; i++) {\r\n                                leveled = add_xp_to_skill({skill: skills[activities[current_activity.activity_name].base_skills_names[i]], xp_to_add: current_activity.skill_xp_per_tick}) || leveled;\r\n                            }\r\n                            \r\n                            //if(leveled) {\r\n                                update_gathering_tooltip(current_activity);\r\n                            //}\r\n                        }\r\n\r\n                        current_activity.gathering_time = 0;\r\n                    }\r\n                }\r\n\r\n                //if job: payment\r\n                if(activities[current_activity.activity_name].type === \"JOB\") {\r\n                    current_activity.working_time += 1;\r\n\r\n                    if(current_activity.working_time % current_activity.working_period == 0) { \r\n                        //finished working period, add money\r\n                        current_activity.earnings += current_activity.get_payment();\r\n                    }\r\n                    update_displayed_ongoing_activity(current_activity, true);\r\n                    \r\n                    if(!can_work(current_activity)) {\r\n                        end_activity();\r\n                    }\r\n                } else {\r\n                    update_displayed_ongoing_activity(current_activity, false);\r\n                }\r\n\r\n                //if gathering: add drops to inventory\r\n\r\n            } else {\r\n                //no current activity\r\n\r\n                add_xp_to_skill({skill: skills[\"Breathing\"], xp_to_add: 0.1});\r\n                const divs = document.getElementsByClassName(\"activity_div\");\r\n                for(let i = 0; i < divs.length; i++) {\r\n                    const activity = current_location.activities[divs[i].getAttribute(\"data-activity\")];\r\n\r\n                    if(activities[activity.activity_name].type === \"JOB\") {\r\n                        if(can_work(activity)) {\r\n                            divs[i].classList.remove(\"activity_unavailable\");\r\n                            divs[i].classList.add(\"start_activity\");\r\n                        } else {\r\n                            divs[i].classList.remove(\"start_activity\");\r\n                            divs[i].classList.add(\"activity_unavailable\");\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n\r\n            const sounds = current_location.getBackgroundNoises();\r\n            if(sounds.length > 0){\r\n                if(Math.random() < 1/600) {\r\n                    log_message(`\"${sounds[Math.floor(Math.random()*sounds.length)]}\"`, \"background\");\r\n                }\r\n            }\r\n        }\r\n\r\n        //health regen\r\n        if(character.stats.full.health_regeneration_flat) {\r\n            character.stats.full.health += character.stats.full.health_regeneration_flat;\r\n        }\r\n        if(character.stats.full.health_regeneration_percent) {\r\n            character.stats.full.health += character.stats.full.max_health * character.stats.full.health_regeneration_percent/100;\r\n        }\r\n        //health loss\r\n        if(character.stats.full.health_loss_flat) {\r\n            character.stats.full.health += character.stats.full.health_loss_flat;\r\n        }\r\n        if(character.stats.full.health_loss_percent) {\r\n            character.stats.full.health += character.stats.full.max_health * character.stats.full.health_loss_percent/100;\r\n        }\r\n\r\n        if(character.stats.full.health <= 0) {\r\n            kill_player({is_combat: \"parent_location\" in current_location});\r\n        }\r\n\r\n        //stamina regen\r\n        if(character.stats.full.stamina_regeneration_flat) {\r\n            character.stats.full.stamina += character.stats.full.stamina_regeneration_flat;\r\n        }\r\n        if(character.stats.full.stamina_regeneration_percent) {\r\n            character.stats.full.stamina += character.stats.full.max_stamina * character.stats.full.stamina_regeneration_percent/100;\r\n        }\r\n        //mana regen\r\n        if(character.stats.full.mana_regeneration_flat) {\r\n            character.stats.full.mana += character.stats.full.mana_regeneration_flat\r\n        }\r\n        if(character.stats.full.mana_regeneration_percent) {\r\n            character.stats.full.mana += character.stats.full.max_mana * character.stats.full.mana_regeneration_percent/100;\r\n        }\r\n\r\n        if(character.stats.full.health > character.stats.full.max_health) {\r\n            character.stats.full.health = character.stats.full.max_health\r\n        }\r\n\r\n        if(character.stats.full.stamina > character.stats.full.max_stamina) {\r\n            character.stats.full.stamina = character.stats.full.max_stamina\r\n        }\r\n\r\n        if(character.stats.full.health_regeneration_flat || character.stats.full.health_regeneration_percent \r\n            || character.stats.full.health_loss_flat || character.stats.full.health_loss_percent\r\n        ) {\r\n            update_displayed_health();\r\n        }\r\n        if(character.stats.full.stamina_regeneration_flat || character.stats.full.stamina_regeneration_percent) {\r\n            update_displayed_stamina();\r\n        }\r\n        \r\n        save_counter += 1;\r\n        if(save_counter >= save_period*tickrate) {\r\n            save_counter = 0;\r\n            if(is_on_dev()) {\r\n                save_to_localStorage({key: dev_save_key});\r\n            } else {\r\n                save_to_localStorage({key: save_key});\r\n            }\r\n            console.log(\"Auto-saved the game!\");\r\n        } //save in regular intervals, irl time independent from tickrate\r\n\r\n        backup_counter += 1;\r\n        if(backup_counter >= backup_period*tickrate) {\r\n            backup_counter = 0;\r\n            let saved_at;\r\n            if(is_on_dev()) {\r\n                saved_at = save_to_localStorage({key: dev_backup_key});\r\n            } else {\r\n                saved_at = save_to_localStorage({key: backup_key});\r\n            }\r\n\r\n            if(saved_at) {\r\n                update_backup_load_button(saved_at);\r\n            }\r\n            console.log(\"Created an automatic backup!\");\r\n        }\r\n\r\n        if(!is_sleeping && current_location && current_location.light_level === \"normal\" && is_night()) \r\n        {\r\n            add_xp_to_skill({skill: skills[\"Night vision\"], xp_to_add: 1});\r\n        }\r\n\r\n        //add xp to proper skills based on location types\r\n        if(current_location) {\r\n            const skills = current_location.gained_skills;\r\n            let leveled = false;\r\n            for(let i = 0; i < skills?.length; i++) {\r\n                leveled = add_xp_to_skill({skill: current_location.gained_skills[i].skill, xp_to_add: current_location.gained_skills[i].xp}) || leveled;\r\n            }\r\n            if(leveled){\r\n                update_displayed_location_types(current_location);\r\n            }\r\n        }\r\n\r\n        //limiting maximum adjustment, to avoid any absurd results;\r\n        if(time_variance_accumulator <= 100/tickrate && time_variance_accumulator >= -100/tickrate) {\r\n            time_adjustment = time_variance_accumulator;\r\n        }\r\n        else {\r\n            if(time_variance_accumulator > 100/tickrate) {\r\n                time_adjustment = 100/tickrate;\r\n            }\r\n            else {\r\n                if(time_variance_accumulator < -100/tickrate) {\r\n                    time_adjustment = -100/tickrate;\r\n                }\r\n            }\r\n        }\r\n\r\n        total_playtime += 1/tickrate;\r\n        update();\r\n    }, 1000/tickrate - time_adjustment);\r\n    //uses time_adjustment based on time_variance_accumulator for more precise overall stabilization\r\n    //(instead of only stabilizing relative to previous tick, it stabilizes relative to sum of deviations)\r\n    //probably completely unnecessary lol, but hey, it sounds cool\r\n}\r\n\r\nfunction run() {\r\n    if(typeof current_location === \"undefined\") {\r\n        change_location(\"Village\");\r\n    } \r\n    \r\n    update_displayed_health();\r\n        \r\n    start_date = Date.now();\r\n    update();\r\n}\r\n\r\nwindow.equip_item = character_equip_item;\r\nwindow.unequip_item = character_unequip_item;\r\n\r\nwindow.change_location = change_location;\r\nwindow.reload_normal_location = reload_normal_location;\r\nwindow.handleLocationIconClick = handle_location_icon_click;\r\nwindow.remove_location_from_favourites = remove_location_from_favourites;\r\n\r\nwindow.start_dialogue = start_dialogue;\r\nwindow.end_dialogue = end_dialogue;\r\nwindow.start_textline = start_textline;\r\n\r\nwindow.remove_fast_travel_choice = remove_fast_travel_choice;\r\n\r\nwindow.start_activity = start_activity;\r\nwindow.end_activity = end_activity;\r\n\r\nwindow.start_location_action = start_location_action;\r\nwindow.end_location_action = end_location_action;\r\n\r\nwindow.start_sleeping = start_sleeping;\r\nwindow.end_sleeping = end_sleeping;\r\n\r\nwindow.start_reading = start_reading;\r\nwindow.end_reading = end_reading;\r\n\r\nwindow.start_trade = start_trade;\r\nwindow.exit_trade = exit_trade;\r\nwindow.add_to_buying_list = add_to_buying_list;\r\nwindow.remove_from_buying_list = remove_from_buying_list;\r\nwindow.add_to_selling_list = add_to_selling_list;\r\nwindow.remove_from_selling_list = remove_from_selling_list;\r\nwindow.cancel_trade = cancel_trade;\r\nwindow.accept_trade = accept_trade;\r\nwindow.is_in_trade = is_in_trade;\r\n\r\nwindow.open_storage = open_storage;\r\nwindow.exit_storage = close_storage;\r\nwindow.move_item_to_storage = move_item_to_storage;\r\nwindow.remove_item_from_storage = remove_item_from_storage;\r\nwindow.is_storage_open = is_storage_open;\r\n\r\nwindow.format_money = format_money;\r\nwindow.get_character_money = character.get_character_money;\r\n\r\nwindow.use_item = use_item;\r\nwindow.change_consumable_favourite_status = change_consumable_favourite_status;\r\n\r\nwindow.do_enemy_combat_action = do_enemy_combat_action;\r\n\r\nwindow.sort_displayed_inventory = sort_displayed_inventory;\r\nwindow.update_displayed_character_inventory = update_displayed_character_inventory;\r\nwindow.update_displayed_trader_inventory = update_displayed_trader_inventory;\r\nwindow.update_displayed_storage_inventory = update_displayed_storage_inventory;\r\n\r\nwindow.sort_displayed_skills = sort_displayed_skills;\r\n\r\nwindow.change_stance = change_stance;\r\nwindow.fav_stance = fav_stance;\r\n\r\nwindow.openCraftingWindow = open_crafting_window;\r\nwindow.closeCraftingWindow = close_crafting_window;\r\nwindow.switchCraftingRecipesPage = switch_crafting_recipes_page;\r\nwindow.switchCraftingRecipesSubpage = switch_crafting_recipes_subpage;\r\nwindow.useRecipe = use_recipe;\r\nwindow.updateDisplayedComponentChoice = update_displayed_component_choice;\r\nwindow.updateDisplayedMaterialChoice = update_displayed_material_choice;\r\nwindow.updateRecipeTooltip = update_recipe_tooltip;\r\n\r\nwindow.option_uniform_textsize = option_uniform_textsize;\r\nwindow.option_bed_return = option_bed_return;\r\nwindow.option_combat_autoswitch = option_combat_autoswitch;\r\nwindow.option_remember_filters = option_remember_filters;\r\nwindow.option_log_all_gathering = option_log_all_gathering;\r\nwindow.option_log_gathering_result = option_log_gathering_result;\r\n\r\nwindow.getDate = get_date;\r\n\r\nwindow.isOnDev = is_on_dev;\r\n\r\nwindow.saveProgress = save_progress;\r\nwindow.save_to_file = save_to_file;\r\nwindow.load_progress = load_from_file;\r\nwindow.loadBackup = load_backup;\r\nwindow.importOtherReleaseSave = load_other_release_save;\r\nwindow.hardReset = hard_reset;\r\nwindow.get_game_version = get_game_version;\r\n\r\nif(save_key in localStorage || (is_on_dev() && dev_save_key in localStorage)) {\r\n    load_from_localstorage();\r\n    update_character_stats();\r\n    update_displayed_xp_bonuses();\r\n} else {\r\n    add_to_character_inventory([{item_id: \"Cheap iron sword\", quality: 40}, \r\n                                {item_id: \"Cheap leather pants\", quality: 40},\r\n                                {item_id: \"Stale bread\", count: 5},\r\n                            ]);\r\n\r\n    equip_item_from_inventory({item_name: \"Cheap iron sword\", item_id: 0});\r\n    equip_item_from_inventory({item_name: \"Cheap leather pants\", item_id: 0});\r\n    add_xp_to_character(0);\r\n    character.money = 102;\r\n    update_displayed_money();\r\n    update_character_stats();\r\n\r\n    update_displayed_stance_list(stances, current_stance, faved_stances);\r\n    change_stance(\"normal\");\r\n    create_displayed_crafting_recipes();\r\n    change_location(\"Village\");\r\n} //checks if there's an existing save file, otherwise just sets up some initial equipment\r\n\r\ndocument.getElementById(\"loading_screen\").style.visibility = \"hidden\";\r\n\r\n\r\nfunction add_stuff_for_testing() {\r\n    add_to_character_inventory([\r\n        {item: getItem({...item_templates[\"Iron spear\"], quality: 1}), count: 100},\r\n        {item: getItem({...item_templates[\"Iron spear\"], quality: 2}), count: 100},\r\n        {item: getItem({...item_templates[\"Iron spear\"], quality: 1}), count: 1},\r\n    ]);\r\n}\r\n\r\nfunction add_all_stuff_to_inventory(count = 10){\r\n    Object.keys(item_templates).forEach(item => {\r\n        add_to_character_inventory([\r\n            {item_id: item, count: count},\r\n        ]);\r\n    })\r\n}\r\n\r\nfunction add_all_active_effects(duration){\r\n    Object.keys(effect_templates).forEach(effect_key => {\r\n        active_effects[effect_key] = new ActiveEffect({...effect_templates[effect_key], duration});\r\n    });\r\n    character.stats.add_active_effect_bonus();\r\n    update_displayed_effects();\r\n}\r\n\r\n//add_to_character_inventory([{item_id: \"Healing powder\", count: 1000}]);\r\n//add_to_character_inventory([{item_id: \"Medicine for dummies\", count: 10}]);\r\n\r\n//add_stuff_for_testing();\r\n//add_all_stuff_to_inventory();\r\n//add_all_active_effects(120);\r\n//add_consumable_to_favourites(\"Stale bread\");\r\n\r\nupdate_displayed_equipment();\r\nsort_displayed_inventory({sort_by: \"name\", target: \"character\"});\r\n\r\nrun();\r\n\r\n\r\n//Verify_Game_Objects();\r\nwindow.Verify_Game_Objects = Verify_Game_Objects;\r\n\r\nif(is_on_dev()) {\r\n    log_message(\"It looks like you are playing on the dev release. It is recommended to keep the developer console open (in Chrome/Firefox/Edge it's at F12 => 'Console' tab) in case of any errors/warnings appearing in there.\", \"notification\");\r\n\r\n    if(localStorage[dev_backup_key]) {\r\n        update_backup_load_button(JSON.parse(localStorage[dev_backup_key]).saved_at);\r\n    } else {\r\n        update_backup_load_button();\r\n    }\r\n\r\n    if(localStorage[save_key]) {\r\n        update_other_save_load_button(JSON.parse(localStorage[save_key]).saved_at || \"\", true);\r\n    } else {\r\n        update_other_save_load_button(null, true);\r\n    }\r\n} else {\r\n    if(localStorage[backup_key]) {\r\n        update_backup_load_button(JSON.parse(localStorage[backup_key]).saved_at);\r\n    } else {\r\n        update_backup_load_button();\r\n    }\r\n\r\n    if(localStorage[dev_save_key]) {\r\n        update_other_save_load_button(JSON.parse(localStorage[dev_save_key]).saved_at || \"\");\r\n    } else {\r\n        update_other_save_load_button();\r\n    }\r\n}\r\n\r\nexport { current_enemies, can_work, \r\n        current_location, active_effects, \r\n        enough_time_for_earnings, add_xp_to_skill, \r\n        get_current_book, \r\n        last_location_with_bed, \r\n        last_combat_location, \r\n        current_stance, selected_stance,\r\n        faved_stances, options,\r\n        global_flags,\r\n        character_equip_item,\r\n        unlocked_beds,\r\n        favourite_consumables,\r\n        remove_consumable_from_favourites\r\n};"],
  "mappings": "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",
  "names": ["Game_time", "new_time", "how_much", "m", "h", "d", "y", "date_string", "format_time", "time", "long_names", "round", "formatted_time", "is_night", "current_game_time", "stat_names", "expo", "number", "precision", "round_item_price", "price", "format_reading_time", "time", "format_working_time", "formatted", "hours", "minutes", "get_hit_chance", "attack_points", "evasion_points", "result", "compare_game_version", "version_a", "version_b", "a", "b", "temp", "is_a_older_than_b", "version1", "version2", "rarity_multipliers", "item_templates", "loot_sold_count", "setLootSoldCount", "data", "recoverItemPrices", "count", "item_name", "getLootPriceModifier", "value", "how_many_sold", "modifier", "getLootPriceModifierMultiple", "start_count", "how_many_to_sell", "sum", "getArmorSlot", "internal", "equip_slot", "getItemRarity", "quality", "rarity", "getEquipmentValue", "components", "component", "round_item_price", "Item", "name", "description", "tags", "id", "key", "additional_count_of_sold", "OtherItem", "item_data", "Material", "ItemComponent", "WeaponComponent", "ShieldComponent", "ArmorComponent", "UsableItem", "Equippable", "stats", "comp", "stat", "Artifact", "Tool", "Shield", "Armor", "Weapon", "BookData", "required_time", "required_skills", "literacy_xp_rate", "finish_reward", "bonuses", "rewards", "book_stats", "Book", "time", "getItem", "getItemFromKey", "head", "handle", "shield_base", "external", "enemy_templates", "enemy_killcount", "Enemy", "name", "id", "description", "xp_value", "stats", "rank", "loot_list", "size", "add_to_bestiary", "tags", "i", "loot", "item", "item_count", "InventoryHaver", "items", "anything_new", "i", "item_key", "item", "getItem", "item_templates", "getItemFromKey", "traders", "inventory_templates", "Trader", "InventoryHaver", "name", "display_name", "trade_text", "location_name", "refresh_time", "refresh_shift", "inventory_template", "profit_margin", "is_unlocked", "current_game_time", "inventory", "i", "item_count", "quality", "item", "getItem", "item_templates", "get_total_level_bonus", "value", "price", "TradeItem", "item_name", "chance", "count", "current_trader", "to_sell", "to_buy", "start_trade", "trader_key", "traders", "current_trader", "update_displayed_trader", "cancel_trade", "to_buy", "to_sell", "update_displayed_character_inventory", "update_displayed_trader_inventory", "accept_trade", "new_balance", "character", "item_list", "to_remove", "item", "add_to_character_inventory", "remove_from_trader_inventory", "i", "id", "item_templates", "loot_sold_count", "add_to_trader_inventory", "remove_from_character_inventory", "add_xp_to_skill", "skills", "update_displayed_money", "exit_trade", "exit_displayed_trade", "add_to_buying_list", "selected_item", "present_item", "a", "item_count_in_trader", "value", "get_item_value", "remove_from_buying_list", "is_in_trade", "add_to_selling_list", "item_count_in_player", "components", "quality", "getEquipmentValue", "remove_from_selling_list", "actual_number_to_remove", "items", "profit_margin", "round_item_price", "dialogues", "Dialogue", "name", "id", "starting_text", "ending_text", "is_unlocked", "is_finished", "textlines", "description", "getDescription", "location_name", "textline_key", "textline", "Textline", "text", "getText", "rewards", "locks_lines", "otherUnlocks", "required_flags", "activities", "Activity", "name", "description", "action_text", "base_skills_names", "is_unlocked", "Job", "activity_data", "Training", "Gathering", "required_tool_type", "crafting_recipes", "cooking_recipes", "smelting_recipes", "forging_recipes", "alchemy_recipes", "get_crafting_quality_caps", "skill_name", "get_total_skill_level", "Recipe", "name", "id", "is_unlocked", "recipe_type", "result", "getResult", "recipe_level", "recipe_skill", "ItemRecipe", "materials", "success_chance", "station_tier", "level", "skill_modifier", "ammount", "i", "key", "item_templates", "character", "mats", "a", "b", "ComponentRecipe", "component_type", "item_type", "material", "x", "quality", "Armor", "ArmorComponent", "WeaponComponent", "ShieldComponent", "tier", "skill", "skills", "quality_range", "EquipmentRecipe", "components", "component_1", "component_2", "comp_quality_weighted", "Weapon", "Shield", "component_quality", "get_recipe_xp_value", "category", "subcategory", "recipe_id", "material_count", "result_tier", "selected_components", "rarity_multiplier", "exp_value", "selected_recipe", "recipes", "skill_level", "result_level", "effect_templates", "ActiveEffect", "name", "id", "duration", "effects", "tags", "potency", "player_storage", "InventoryHaver", "storage_open", "add_to_storage", "items", "update_displayed_storage", "remove_from_storage", "open_storage", "close_storage", "exit_displayed_storage", "move_item_to_storage", "item", "count", "character", "remove_from_character_inventory", "remove_item_from_storage", "add_to_character_inventory", "is_storage_open", "activity_anim", "location_choice_divs", "action_div", "trade_div", "storage_div", "location_name_span", "location_icon_span", "location_types_div", "location_tooltip", "inventory_div", "item_divs", "trader_item_divs", "storage_item_divs", "item_buying_divs", "item_selling_divs", "trader_inventory_div", "storage_inventory_div", "message_log", "combat_div", "enemies_div", "enemy_count_div", "current_health_value_div", "current_health_bar", "current_stamina_value_div", "current_stamina_bar", "character_xp_div", "character_level_div", "active_effects_tooltip", "active_effect_count", "time_field", "skill_bar_divs", "skill_list", "stance_bar_divs", "stance_list", "bestiary_entry_divs", "bestiary_list", "combat_switch", "inventory_switch", "data_entry_divs", "skill_sorting", "skill_sorting_direction", "trader_inventory_sorting", "trader_inventory_sorting_direction", "storage_sorting", "storage_sorting_direction", "character_inventory_sorting", "character_inventory_sorting_direction", "message_count", "stats_divs", "other_combat_divs", "effect_divs", "character_attack_bar", "equipment_slots_divs", "rarity_colors", "crafting_pages", "backup_load_button", "other_save_load_button", "capitalize_first_letter", "some_string", "clear_action_div", "action_div", "location_choice_divs", "create_item_tooltip", "item", "options", "item_tooltip", "create_item_tooltip_content", "quality", "rarity_colors", "component_description", "components", "item_templates", "character", "equip_stats_0", "equip_stats_1", "effect_key", "capitalize_first_letter", "equip_stats", "equip_bonus_skill_levels", "skill_key", "skills", "create_effect_tooltip", "book_stats", "format_book_bonuses", "format_money", "round_item_price", "traders", "current_trader", "effect_name", "duration", "add_bonus", "effect", "effect_templates", "tooltip", "name_span", "duration_span", "format_time", "top_div", "effects_div", "effects", "get_effect_with_bonuses", "key", "stat_value", "sign", "end_activity_animation", "remove", "activity_anim", "div", "log_message", "message_to_add", "message_type", "message", "class_to_add", "group_to_add", "message_count", "message_log", "bonuses", "formatted", "stats", "stat_names", "i", "multipliers", "xp_multipliers", "name", "log_loot", "loot_list", "is_combat", "is_a_summary", "item", "item_templates", "getItemFromKey", "message", "message_type", "i", "log_message", "start_activity_animation", "settings", "end_activity_animation", "activity_anim", "action_status_div", "end", "format_reading_time", "update_displayed_trader", "is_newly_open", "action_div", "trade_div", "traders", "current_trader", "update_displayed_trader_inventory", "update_displayed_storage", "storage_div", "update_displayed_storage_inventory", "update_displayed_money", "format_money", "character", "create_trade_buttons", "trade_buttons", "trade_button_5", "trade_button_10", "trade_button_max", "sort_displayed_inventory", "sort_by", "target", "change_direction", "plus", "minus", "trader_inventory_sorting", "trader_inventory_sorting_direction", "trader_inventory_div", "character_inventory_sorting", "character_inventory_sorting_direction", "inventory_div", "storage_sorting", "storage_sorting_direction", "storage_inventory_div", "a", "b", "name_a", "name_b", "value_a", "value_b", "node", "item_key", "trader_sorting", "sorting_direction", "was_anything_new_added", "trader", "trader_item_divs", "div_key", "item_selling_divs", "to_sell", "x", "item_count", "create_inventory_item_div", "inventory_key", "to_buy", "div_count", "price_span", "round_item_price", "key", "update_displayed_character_inventory", "equip_slot", "character_sorting", "item_divs", "item_buying_divs", "eq_slot", "storage_item_divs", "player_storage", "exit_displayed_storage", "is_equipped", "trade_index", "item_control_div", "item_div", "item_name_div", "item_additional", "target_item", "target_class_name", "item_class", "options", "price_multiplier", "book_stats", "get_current_book", "create_item_tooltip", "item_use_button", "item_auto_use_button", "favourite_consumables", "item_read_button", "item_unequip_div", "item_equip_span", "item_value_span", "update_displayed_equipment", "equipment_slots_divs", "eq_tooltip", "update_displayed_book", "book_id", "book", "book_key", "update_displayed_enemies", "current_enemies", "enemies_div", "disp_speed", "hero_hit_chance_modifier", "enemy", "get_total_skill_coefficient", "hero_evasion_chance_modifier", "evasion_chance", "get_hit_chance", "hit_chance", "update_displayed_health_of_enemies", "update_displayed_normal_location", "location", "clear_action_div", "location_types_div", "combat_div", "location_tooltip", "enemy_count_div", "inventory_switch", "combat_switch", "location_name_span", "current_location", "update_location_icon", "global_flags", "crafting_button", "start_sleeping_div", "open_storage_div", "dialogue", "dialogues", "lines_available", "line", "location_choice_divs", "create_location_choice_dropdown", "create_location_choices", "activity", "activities", "skill", "skills", "action", "loc", "favourite_locations", "unlocked_beds", "locations", "last_combat_location", "location_icon_span", "name", "icon", "class_name", "elem", "event", "category", "choice_list", "dialogue_div", "trader_div", "activity_div", "can_work", "job_tooltip", "format_working_time", "create_gathering_tooltip", "last_location_with_bed", "last_bed", "available_challenges", "location_action_div", "create_location_action_tooltip", "create_fast_travel_choices", "available_fast_travel", "removal_button", "remove_fast_travel_choice", "location_id", "element", "update_displayed_combat_location", "create_location_types_display", "type_div", "type_tooltip", "location_types", "type", "stage", "effects", "stat", "base", "actual", "get_location_type_penalty", "stat_names", "update_displayed_location_types", "open_crafting_window", "elements", "update_displayed_crafting_recipes", "close_crafting_window", "switch_crafting_recipes_page", "unexpand_displayed_recipes", "switch_crafting_recipes_subpage", "subcategory", "classes", "j", "create_displayed_crafting_recipes", "recipes", "recipe_category", "recipe_subcategory", "crafting_pages", "recipe", "add_crafting_recipe_to_display", "update_item_recipe_visibility", "recipe_id", "recipe_div", "recipe_name_span", "craft_ammount_buttons", "button_5", "button_10", "button_all", "create_recipe_tooltip", "material_selection", "toggle_exclusive_class", "remove_class_from_all", "component_selection_1", "component_1_list", "component_selection_2", "component_2_list", "component_selections", "update_recipe_tooltip", "is_element_above_x", "accept_recipe_button", "update_displayed_crafting_recipe", "material", "components", "tooltip", "create_recipe_tooltip_content", "update_item_recipe_tooltips", "material_selections_div", "material_key", "id", "material_recipe", "station_tier", "success_chance", "mats", "any_available", "mat_list", "xp_val_1", "get_recipe_xp_value", "create_item_tooltip_content", "quality_range", "rarity_multipliers", "getItemRarity", "xp_val_2", "Weapon", "Armor", "Shield", "update_displayed_component_choice", "component_keys", "component_selections_div", "component_1_key", "component_2_key", "update_displayed_material_choice", "refreshing", "materials", "name_span", "location_action", "action_tooltip", "location_activity", "gathering_tooltip", "gathering_time_needed", "gained_resources", "skill_names", "format_time", "update_gathering_tooltip", "parent", "update_displayed_health", "current_health_value_div", "current_health_bar", "update_displayed_stamina", "current_stamina_value_div", "current_stamina_bar", "update_displayed_stats", "stats_divs", "update_stat_description", "attack_stats", "ap", "other_combat_divs", "dp", "ep", "atk", "stat_type", "capitalize_first_letter", "update_displayed_effects", "effect_count", "active_effects", "active_effect_count", "active_effects_tooltip", "effect_divs", "eff", "effect", "create_effect_tooltip", "update_displayed_effect_durations", "update_displayed_time", "is_night", "current_game_time", "time_field", "num", "value", "sign", "update_displayed_character_xp", "did_level", "character_xp_div", "character_level_div", "update_displayed_xp_bonuses", "data_entry_divs", "get_hero_xp_gain", "get_skills_overall_xp_gain", "update_displayed_stamina_efficiency", "update_displayed_dialogue", "dialogue_key", "dialogue_answer_div", "textline_div", "end_dialogue_div", "update_displayed_textline_answer", "text", "is_description", "exit_displayed_trade", "start_activity_display", "current_activity", "action_xp_div", "percent_xp", "get_total_skill_level", "curr_xp", "needed_xp", "time_needed", "get_skill_xp_gain", "action_end_div", "action_end_text", "action_end_earnings", "action_progress_bar_max", "action_progress_bar", "time_info_div", "enough_time_for_earnings", "update_displayed_ongoing_activity", "is_job", "start_location_action_display", "selected_action", "update_location_action_progress_bar", "percent", "set_location_action_finish_text", "update_location_action_finish_button", "start_sleeping_display", "start_reading_display", "title", "create_new_skill_bar", "skill_bar_divs", "skill_category_div", "skill_category_skills", "skill_list", "skill_bar_max", "skill_bar_current", "skill_bar_text", "skill_bar_name", "skill_bar_xp", "skill_tooltip", "tooltip_xp", "tooltip_xp_gain", "tooltip_desc", "tooltip_effect", "tooltip_milestones", "tooltip_next", "sort_displayed_skills", "sort_displayed_skill_categories", "update_displayed_skill_xp_gain", "update_displayed_skill_bar", "leveled_up", "update_displayed_skill_level", "expo", "get_unlocked_skill_rewards", "get_next_skill_milestone", "skill_sorting", "bonus", "update_displayed_skill_description", "xp_gain", "update_all_displayed_skills_xp_gain", "skill_id", "skill_sorting_direction", "elem_a", "elem_b", "update_displayed_stance_list", "stances", "current_stance", "fav_stances", "stance_list", "stance_bar_divs", "bar", "stance", "fav_selection", "stance_selection", "stance_info", "stance_tooltip_row", "create_stance_tooltip", "stance_a", "stance_b", "update_displayed_stance", "update_displayed_faved_stances", "tooltip_div", "create_stance_tooltip_stats", "target_count", "desc", "stats", "update_stance_tooltip", "selection", "faved_stances", "list", "selected_stance", "create_new_bestiary_entry", "enemy_name", "bestiary_entry_divs", "enemy_templates", "name_div", "kill_counter", "enemy_killcount", "bestiary_tooltip", "tooltip_tags", "tag", "tooltip_stats", "stat_line_0", "stat_0", "stat_0_name", "stat_0_value", "stat_1", "stat_1_name", "stat_1_value", "stat_line_2", "stat_2", "stat_2_name", "stat_2_value", "stat_3", "stat_3_name", "stat_3_value", "stat_line_4", "stat_4", "stat_4_name", "stat_4_value", "stat_5", "stat_5_name", "stat_5_value", "tooltip_drops", "loot_line", "loot_name", "loot_chance", "loot_chance_base", "loot_chance_current", "bestiary_list", "update_bestiary_entry", "update_enemy_attack_bar", "enemy_id", "num", "enemies_div", "update_character_attack_bar", "character_attack_bar", "update_backup_load_button", "date_string", "backup_load_button", "update_other_save_load_button", "is_dev", "other_save_load_button", "toggle_exclusive_class", "element", "siblings_only", "class_name", "elems", "has_class", "i", "remove_class_from_all", "is_element_above_x", "x", "rect", "rect2", "base_block_chance", "base_xp_cost", "Hero", "InventoryHaver", "xp_to_add", "use_bonus", "character", "level_after_xp", "total_xp_to_previous_lvl", "gains", "level", "gained_hp", "gained_stamina", "gained_str", "gained_agi", "gained_dex", "gained_int", "gained_skill_xp_multiplier", "total_skill_xp_multiplier", "i", "stats", "xp_multipliers", "stat", "skills", "skill", "skill_categories", "category", "cat", "multipliers", "active_effects", "effect_key", "multiplier", "effects", "get_effect_with_bonuses", "key", "value", "slot", "bonuses", "bonus", "get_total_skill_coefficient", "weapon_type_to_skill", "get_total_level_bonus", "current_stance", "light_modifier", "current_location", "is_night", "current_game_time", "get_total_skill_level", "effect", "missing_health", "missing_stamina", "missing_mana", "stat_sum", "stat_mult", "piece", "bonus_target", "update_all_displayed_skills_xp_gain", "update_displayed_skill_xp_gain", "update_displayed_xp_bonuses", "update_displayed_skill_level", "damage_values", "can_faint", "give_skill_xp", "fainted", "val", "damage_taken", "a", "b", "add_to_character_inventory", "items", "was_anything_new_added", "update_displayed_character_inventory", "remove_from_character_inventory", "id", "item_templates", "favourite_consumables", "remove_consumable_from_favourites", "equip_item", "item", "update_displayed_equipment", "update_character_stats", "prev_item", "unequip_item", "manage_changed_skill_bonuses", "equip_item_from_inventory", "item_key", "item_slot", "already_calculated", "bonus_skill_levels", "update_character_stats", "character", "update_displayed_stats", "update_displayed_health", "update_displayed_stamina", "update_displayed_stamina_efficiency", "get_skill_xp_gain", "skill_name", "category", "skills", "get_skills_overall_xp_gain", "get_hero_xp_gain", "get_total_skill_level", "skill_id", "get_total_level_bonus", "get_total_skill_coefficient", "scaling_type", "get_effect_with_bonuses", "active_effect", "multiplier", "boosted", "key", "value", "skills", "skill_categories", "weapon_type_to_skill", "unknown_skill_name", "which_skills_affect_skill", "Skill", "skill_id", "names", "description", "flavour_text", "max_level", "max_level_coefficient", "max_level_bonus", "base_xp_cost", "visibility_treshold", "get_effect_description", "parent_skill", "milestones", "xp_scaling", "is_unlocked", "category", "keys", "rank_name", "i", "xp_to_add", "skill_name", "level_after_xp", "unlocks", "total_xp_to_previous_lvl", "gains", "message", "stat", "stat_names", "xp_multiplier", "name", "level", "stats", "xp_multipliers", "multiplier_key", "scaling_type", "skill_level", "get_unlocked_skill_rewards", "unlocked_rewards", "skill", "format_skill_rewards", "get_next_skill_milestone", "milestone", "formatted", "temp", "unlocked_skills", "phrasing", "get_total_skill_coefficient", "get_total_level_bonus", "get_total_skill_level", "value", "get_crafting_quality_caps", "locations", "location_types", "favourite_locations", "Location", "name", "id", "description", "connected_locations", "is_unlocked", "is_finished", "dialogues", "traders", "types", "housing", "light_level", "getDescription", "background_noises", "getBackgroundNoises", "crafting", "tags", "Combat_zone", "enemy_groups_list", "enemies_list", "enemy_group_size", "enemy_count", "enemy_stat_variation", "parent_location", "leave_text", "first_reward", "repeatable_reward", "rewards_with_clear_requirement", "otherUnlocks", "unlock_text", "is_challenge", "type", "skills", "skill", "temp_types", "enemies", "enemy_group", "index", "group_size", "i", "enemy", "enemy_templates", "newEnemy", "variation", "base", "vary", "Enemy", "effects", "hero_effects", "stat", "get_location_type_penalty", "Challenge_zone", "LocationActivity", "activity_name", "starting_text", "get_payment", "working_period", "infinite", "availability_time", "skill_xp_per_tick", "gained_resources", "require_tool", "__publicField", "skill_modifier", "skill_level_sum", "activities", "get_total_skill_level", "gathering_time_needed", "chance", "min", "max", "LocationAction", "action_id", "action_name", "action_text", "success_text", "failure_texts", "required", "conditions", "rewards", "attempt_duration", "success_chances", "repeatable", "check_conditions_on_finish", "character", "met", "skill_id", "item_id", "found", "item_key", "stat_key", "LocationType", "related_skill", "stages", "stage", "category", "noises", "current_game_time", "location_key", "activity_key", "stances", "Stance", "name", "id", "related_skill", "target_count", "randomize_target_count", "is_unlocked", "stat_multipliers", "stamina_cost", "description", "__publicField", "skills", "multipliers", "stat", "get_total_skill_level", "game_version", "get_game_version", "Verify_Game_Objects", "results", "overall_start_time", "start_time", "item_results", "key", "item", "item_templates", "has_issue", "i", "effect_templates", "stat_key", "character", "stat_type_key", "end_time", "skill_results", "skill", "skills", "milestone", "milestone_reward_type_key", "unlock_key", "stat_type", "skill_key", "skill_categories", "location_results", "location", "locations", "dialogues", "traders", "activity_key", "activities", "enemy_results", "enemy", "enemy_templates", "overall_end_time", "ReputationManager", "reputation", "region", "character", "save_key", "dev_save_key", "backup_key", "dev_backup_key", "global_flags", "flag_unlock_texts", "total_playtime", "total_deaths", "total_crafting_attempts", "total_crafting_successes", "total_kills", "total_crits_done", "total_crits_taken", "total_hits_done", "total_hits_taken", "strongest_hit", "gathered_materials", "current_enemies", "enemy_attack_loops", "enemy_attack_cooldowns", "enemy_timer_variance_accumulator", "enemy_timer_adjustment", "enemy_timers", "character_attack_loop", "character_timer_variance_accumulator", "character_timer_adjustment", "character_timers", "maximum_time_correction", "current_location", "current_activity", "location_action_interval", "current_location_action", "travel_times", "unlocked_beds", "is_resting", "is_sleeping", "last_location_with_bed", "last_combat_location", "is_reading", "save_period", "save_counter", "backup_period", "backup_counter", "time_variance_accumulator", "time_adjustment", "start_date", "end_date", "current_dialogue", "active_effects", "selected_stance", "stances", "current_stance", "faved_stances", "favourite_consumables", "tickrate", "global_xp_multiplier", "options", "message_log_filters", "enemy_crit_chance", "enemy_crit_damage", "name_field", "character", "time_field", "current_game_time", "skills", "skill", "skill_categories", "category", "option_uniform_textsize", "option", "checkbox", "option_bed_return", "option_remember_filters", "option_combat_autoswitch", "option_log_all_gathering", "option_log_gathering_result", "change_location", "location_name", "event", "location", "locations", "clear_all_enemy_attack_loops", "clear_character_attack_loop", "clear_enemies", "log_message", "conn", "update_displayed_crafting_recipes", "update_character_stats", "update_displayed_normal_location", "update_displayed_combat_location", "start_combat", "handle_location_icon_click", "favourite_locations", "remove_location_from_favourites", "add_location_to_favourites", "start_activity", "selected_activity", "activities", "can_work", "start_activity_display", "end_activity", "format_money", "add_money_to_character", "loot", "mat_key", "log_loot", "end_activity_animation", "start_location_action", "selected_action", "location_action", "conditions_status", "start_location_action_display", "finish_location_action", "current_iterations", "total_iterations", "update_location_action_progress_bar", "action", "result_message", "action_result", "get_location_action_result", "is_won", "process_rewards", "item_id", "remove_from_character_inventory", "item_templates", "set_location_action_finish_text", "update_location_action_finish_button", "end_location_action", "unlock_activity", "activity_data", "message", "unlock_action", "action_data", "money_num", "update_displayed_money", "do_resting", "resting_heal_ammount", "update_displayed_health", "resting_stamina_ammount", "update_displayed_stamina", "do_sleeping", "sleeping_heal_ammount", "get_total_skill_level", "sleeping_stamina_ammount", "start_sleeping", "start_sleeping_display", "end_sleeping", "start_reading", "book_key", "book_id", "is_JSON", "end_reading", "book_stats", "start_reading_display", "update_displayed_book", "do_reading", "add_xp_to_skill", "book", "get_current_book", "selected_job", "enough_time_for_earnings", "start_dialogue", "dialogue_key", "update_displayed_dialogue", "update_displayed_textline_answer", "dialogues", "end_dialogue", "reload_normal_location", "start_textline", "textline_key", "textline", "unlock_combat_stance", "stance_id", "update_displayed_stance_list", "change_stance", "is_temporary", "update_displayed_stance", "reset_combat_loops", "fav_stance", "update_displayed_faved_stances", "set_new_combat", "enemies", "character_attack_cooldown", "x", "fastest_cooldown", "b", "cooldown_multiplier", "i", "do_enemy_attack_loop", "set_character_attack_loop", "update_displayed_enemies", "update_displayed_health_of_enemies", "a", "enemy_id", "count", "is_new", "update_enemy_attack_bar", "do_enemy_combat_action", "clear_enemy_attack_loop", "base_cooldown", "target_count", "targets", "alive_targets", "enemy", "use_stamina", "actual_cooldown", "attack_power", "do_character_attack_loop", "update_character_attack_bar", "leveled", "do_character_combat_action", "sum", "update_stance_tooltip", "get_location_rewards", "key", "attacker", "evasion_chance_modifier", "get_total_skill_coefficient", "enemy_base_damage", "damages_dealt", "critted", "partially_blocked", "blocked", "val", "get_hit_chance", "xp_to_add", "damage_taken", "fainted", "hit_count_msg", "kill_player", "target", "hero_base_damage", "damage_dealt", "hit_chance_modifier", "weapon_type_to_skill", "xp_reward", "add_xp_to_character", "add_to_character_inventory", "kill_enemy", "enemy_killcount", "update_bestiary_entry", "create_new_bestiary_entry", "is_combat", "num", "use_efficiency", "update_displayed_stats", "should_info", "use_bonus", "add_to_parent", "get_skill_xp_gain", "prev_name", "was_hidden", "gains", "unlocks", "new_name", "xp_for_parent", "is_visible", "create_new_skill_bar", "update_displayed_skill_bar", "which_skills_affect_skill", "update_displayed_skill_description", "update_all_displayed_skills_xp_gain", "update_displayed_skill_xp_gain", "update_displayed_stamina_efficiency", "activity_key", "update_gathering_tooltip", "inv_key", "item", "getItemFromKey", "effects", "effect_templates", "update_displayed_character_inventory", "eq_slot", "update_displayed_equipment", "update_displayed_effects", "level_up", "update_displayed_character_xp", "should_return", "lock_location", "rewards", "source_type", "source_name", "is_first_clear", "inform_overall", "inform_textline", "only_unlocks", "skill_key", "unlock_location", "flag", "any_unlocked", "j", "dialogue", "trader", "traders", "location_key", "recipes", "region", "ReputationManager", "skip_message", "remove_fast_travel_choice", "location_id", "update_location_icon", "update_choices", "use_recipe", "ammount_wanted_to_craft", "subcategory", "recipe_id", "station_tier", "selected_recipe", "recipe_div", "result", "available_ammount", "materials", "ammount_that_can_be_crafted", "attempted_crafting_ammount", "successful_crafting_ammount", "success_chance", "result_id", "is_medicine", "recipe_skill", "needed_xp", "xp_per_craft", "get_recipe_xp_value", "estimated_xp_per_craft", "needed_crafts", "variable_craft", "current_gained_xp", "success", "fail", "mat_type", "mat", "msg", "item_key", "update_item_recipe_visibility", "update_item_recipe_tooltips", "material_div", "material_1_key", "id", "recipe_material", "accumulated_xp", "crafted_items", "crafted_count", "all_crafted", "quality", "rarity_multipliers", "getItemRarity", "highest_qual", "result_key", "parsed_key", "crafted_qualities", "to_add", "new_key", "update_displayed_material_choice", "component_1_key", "component_2_key", "comp_1", "comp_2", "comp_quality_weighted", "comp_tier_max", "component_keys", "update_displayed_component_choice", "character_equip_item", "equip_item_from_inventory", "character_unequip_item", "item_slot", "unequip_item", "use_item", "item_effects", "used", "duration", "ActiveEffect", "recovered", "recoverable", "add_consumable_to_favourites", "remove_consumable_from_favourites", "change_consumable_favourite_status", "get_date", "date", "year", "month_num", "month", "day", "hour", "minute", "second", "is_on_dev", "str", "create_save", "save_data", "game_version", "player_storage", "action_key", "activity", "temp_inventory", "loot_sold_count", "stance", "error", "save_to_file", "save_to_localStorage", "is_manual", "save", "save_progress", "load", "filter", "is_from_before_eco_rework", "compare_game_version", "setLootSoldCount", "rep_region", "total_book_xp", "literacy_xp", "quality_mult", "equip_slot", "components", "head", "handle", "getItem", "equip_item", "shield_base", "item_list", "is_a_older_than_b", "internal", "external", "getArmorSlot", "storage_item_list", "trader_item_list", "add_to_trader_inventory", "rep_rew", "effect", "enemy_name", "create_displayed_crafting_recipes", "activity_id", "update_displayed_time", "load_from_file", "save_string", "load_from_localstorage", "load_backup", "load_other_release_save", "hard_reset", "confirmation", "update_timer", "time_in_minutes", "was_night", "is_night", "update", "prev_day", "recoverItemPrices", "update_displayed_effect_durations", "gathering_time_needed", "gained_resources", "items", "update_displayed_ongoing_activity", "divs", "sounds", "saved_at", "update_backup_load_button", "update_displayed_location_types", "run", "start_trade", "exit_trade", "add_to_buying_list", "remove_from_buying_list", "add_to_selling_list", "remove_from_selling_list", "cancel_trade", "accept_trade", "is_in_trade", "open_storage", "close_storage", "move_item_to_storage", "remove_item_from_storage", "is_storage_open", "sort_displayed_inventory", "update_displayed_trader_inventory", "update_displayed_storage_inventory", "sort_displayed_skills", "open_crafting_window", "close_crafting_window", "switch_crafting_recipes_page", "switch_crafting_recipes_subpage", "update_recipe_tooltip", "get_game_version", "update_displayed_xp_bonuses", "update_displayed_equipment", "sort_displayed_inventory", "run", "Verify_Game_Objects", "is_on_dev", "log_message", "dev_backup_key", "update_backup_load_button", "save_key", "update_other_save_load_button", "backup_key", "dev_save_key"]
}
